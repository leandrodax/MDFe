/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ultima Alteração: 02/08/2016
 * Responsavel: Joao
 * Alterações: selecionar codigo 1 para primeiro cadastro, nao permitir alterar nem excluir 
 * quando nao houve nenhum registro, confirmação de exclusao
 */

package cadastro;

import ClassesFirebird.Tabusu;
import ConexaoDB.Conectar;
import Utilitarios.LimitaField;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.Date;
import java.sql.SQLException;
import java.lang.String;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.lang.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;
import javax.swing.table.TableCellRenderer;
import javax.swing.text.MaskFormatter;
import pesquisa.TelaBuscaConta;
/**
 *
 * @author Israel
 */
public class TelaProfissionais extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaProfissionais
     */
    public int codmax, selecionada;
    String sql, ordnar, situacao, tag_acao;
    DefaultTableCellRenderer direita   = new DefaultTableCellRenderer();
    DefaultTableCellRenderer centro    = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda  = new DefaultTableCellRenderer();
    SimpleDateFormat         DtEmissao = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat         DtDia     = new SimpleDateFormat("dd/MM/yyyy");
    Utilitarios util = new Utilitarios();
    Tabusu tabusu = new Tabusu();
    
    public TelaProfissionais() throws ParseException {
        initComponents();    
        DefinirFormulario();
        CarregaTudoProfissional();
        SairEsc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlPrincipal = new javax.swing.JPanel();
        jPnlBusca = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jFldBuscaCodProf = new javax.swing.JTextField();
        jFldBuscaNomeProf = new javax.swing.JTextField();
        jCmbBxOrdem = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jPnlbotao = new javax.swing.JPanel();
        jBtPrimeiro = new javax.swing.JButton();
        jBtAnterior = new javax.swing.JButton();
        jBtProximo = new javax.swing.JButton();
        jBtUltimo = new javax.swing.JButton();
        jBtInserir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jPnlEdit = new javax.swing.JPanel();
        jPnlEdtNorte = new javax.swing.JPanel();
        jFldPercPrazoProf = new javax.swing.JFormattedTextField();
        jFldSalarioProf = new javax.swing.JFormattedTextField();
        jFldFuncaoProf = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jFldCpfProf = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jFldEndProf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jFldCargoProf = new javax.swing.JTextField();
        jFldPercAvistaProf = new javax.swing.JFormattedTextField();
        jFldFoneProf = new javax.swing.JTextField();
        jFldNomeProf = new javax.swing.JTextField();
        jFldCodProf = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLblConta = new javax.swing.JLabel();
        jFldRgProf = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jFldCodConta = new javax.swing.JTextField();
        jFldPercCartaoProf = new javax.swing.JFormattedTextField();
        jBtBuscaConta = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jFldBairroProf = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jFldDtAdmissaoProf = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jFldCidProf = new javax.swing.JTextField();
        jPnlEdtSul = new javax.swing.JPanel();
        jBtCancelar = new javax.swing.JButton();
        jBtGravar = new javax.swing.JButton();
        jLblAcao = new javax.swing.JLabel();

        setTitle("Cadastro de Condutores");

        jPnlPrincipal.setLayout(new java.awt.CardLayout());

        jPnlBusca.setPreferredSize(new java.awt.Dimension(600, 450));
        jPnlBusca.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Ordem:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("Descrição:");

        jFldBuscaCodProf.setDocument(new LimitaField(20, 2)
        );
        jFldBuscaCodProf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFldBuscaCodProfFocusLost(evt);
            }
        });
        jFldBuscaCodProf.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jFldBuscaCodProfInputMethodTextChanged(evt);
            }
        });
        jFldBuscaCodProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFldBuscaCodProfActionPerformed(evt);
            }
        });
        jFldBuscaCodProf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFldBuscaCodProfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFldBuscaCodProfKeyReleased(evt);
            }
        });

        jFldBuscaNomeProf.setDocument(new LimitaField(100, 0));
        jFldBuscaNomeProf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jFldBuscaNomeProfFocusLost(evt);
            }
        });
        jFldBuscaNomeProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFldBuscaNomeProfActionPerformed(evt);
            }
        });
        jFldBuscaNomeProf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFldBuscaNomeProfKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFldBuscaNomeProfKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFldBuscaNomeProfKeyTyped(evt);
            }
        });

        jCmbBxOrdem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCmbBxOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome" }));
        jCmbBxOrdem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCmbBxOrdemItemStateChanged(evt);
            }
        });
        jCmbBxOrdem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCmbBxOrdemFocusLost(evt);
            }
        });
        jCmbBxOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmbBxOrdemActionPerformed(evt);
            }
        });
        jCmbBxOrdem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCmbBxOrdemKeyPressed(evt);
            }
        });

        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Código", "Nome do Condutor","CPF", "Cód. Usuário", "Usuário", "Data", "Evento"
            }
        ){
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            };
        }

    );
    jTablePrincipal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    jTablePrincipal.setDragEnabled(true);
    jTablePrincipal.getTableHeader().setResizingAllowed(false);
    jTablePrincipal.getTableHeader().setReorderingAllowed(false);
    jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTablePrincipalMouseClicked(evt);
        }
    });
    jTablePrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTablePrincipalKeyPressed(evt);
        }
    });
    jScrollPane1.setViewportView(jTablePrincipal);

    jPnlbotao.setLayout(new java.awt.GridLayout(1, 0));

    jBtPrimeiro.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Primeiro.png"))); // NOI18N
    jBtPrimeiro.setText("Primeiro");
    jBtPrimeiro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtPrimeiro.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtPrimeiro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtPrimeiroActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtPrimeiro);

    jBtAnterior.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Anterior.png"))); // NOI18N
    jBtAnterior.setText("Anterior");
    jBtAnterior.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtAnterior.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtAnterior.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtAnteriorActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtAnterior);

    jBtProximo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Proximo.png"))); // NOI18N
    jBtProximo.setText("Próximo");
    jBtProximo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtProximo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtProximo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtProximo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtProximoActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtProximo);

    jBtUltimo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ultimo.png"))); // NOI18N
    jBtUltimo.setText("Último");
    jBtUltimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtUltimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtUltimo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtUltimoActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtUltimo);

    jBtInserir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/file_add.png"))); // NOI18N
    jBtInserir.setText("Inserir");
    jBtInserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtInserir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtInserir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtInserir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtInserirActionPerformed(evt);
        }
    });
    jBtInserir.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jBtInserirKeyPressed(evt);
        }
    });
    jPnlbotao.add(jBtInserir);

    jBtAlterar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/text_edit.png"))); // NOI18N
    jBtAlterar.setText("Alterar");
    jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtAlterarActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtAlterar);

    jBtExcluir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/deletar.png"))); // NOI18N
    jBtExcluir.setText("Excluir");
    jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtExcluirActionPerformed(evt);
        }
    });
    jPnlbotao.add(jBtExcluir);

    javax.swing.GroupLayout jPnlBuscaLayout = new javax.swing.GroupLayout(jPnlBusca);
    jPnlBusca.setLayout(jPnlBuscaLayout);
    jPnlBuscaLayout.setHorizontalGroup(
        jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(10, 10, 10)
                    .addComponent(jFldBuscaCodProf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(140, 140, 140)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)
                    .addComponent(jCmbBxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(2, 2, 2)
                    .addComponent(jFldBuscaNomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1)
                .addComponent(jPnlbotao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(20, 20, 20))
    );
    jPnlBuscaLayout.setVerticalGroup(
        jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jFldBuscaCodProf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jCmbBxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(15, 15, 15)
            .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jFldBuscaNomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(15, 15, 15)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
            .addGap(5, 5, 5)
            .addComponent(jPnlbotao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(15, 15, 15))
    );

    jPnlPrincipal.add(jPnlBusca, "card2");

    jPnlEdit.setMinimumSize(new java.awt.Dimension(32767, 32767));
    jPnlEdit.setPreferredSize(new java.awt.Dimension(600, 450));
    jPnlEdit.setLayout(new java.awt.BorderLayout());

    jPnlEdtNorte.setPreferredSize(new java.awt.Dimension(300, 400));
    jPnlEdtNorte.setLayout(null);

    jFldPercPrazoProf.setText("0,00 %");
    jFldPercPrazoProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldPercPrazoProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldPercPrazoProfFocusLost(evt);
        }
    });
    jFldPercPrazoProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldPercPrazoProfActionPerformed(evt);
        }
    });
    jFldPercPrazoProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldPercPrazoProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldPercPrazoProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldPercPrazoProf);
    jFldPercPrazoProf.setBounds(310, 320, 130, 25);

    jFldSalarioProf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
    jFldSalarioProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldSalarioProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldSalarioProfFocusLost(evt);
        }
    });
    jFldSalarioProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldSalarioProfActionPerformed(evt);
        }
    });
    jFldSalarioProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldSalarioProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldSalarioProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldSalarioProf);
    jFldSalarioProf.setBounds(490, 270, 170, 25);

    jFldFuncaoProf.setDocument(new LimitaField(20, 0));
    jFldFuncaoProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldFuncaoProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldFuncaoProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldFuncaoProf);
    jFldFuncaoProf.setBounds(200, 270, 280, 25);

    jLabel21.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel21.setText("Cidade");
    jPnlEdtNorte.add(jLabel21);
    jLabel21.setBounds(10, 150, 60, 30);

    jFldCpfProf.setDocument(new LimitaField(20, 0));
    jFldCpfProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldCpfProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldCpfProfFocusLost(evt);
        }
    });
    jFldCpfProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCpfProfActionPerformed(evt);
        }
    });
    jFldCpfProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCpfProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldCpfProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldCpfProf);
    jFldCpfProf.setBounds(10, 220, 180, 25);

    jLabel23.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel23.setText("Salário");
    jPnlEdtNorte.add(jLabel23);
    jLabel23.setBounds(490, 250, 60, 30);

    jLabel24.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel24.setText("CPF");
    jPnlEdtNorte.add(jLabel24);
    jLabel24.setBounds(10, 200, 40, 30);

    jLabel22.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel22.setText("Bairro");
    jPnlEdtNorte.add(jLabel22);
    jLabel22.setBounds(290, 150, 60, 30);

    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel5.setText("Perc. Com. A prazo");
    jPnlEdtNorte.add(jLabel5);
    jLabel5.setBounds(310, 300, 110, 30);

    jFldEndProf.setDocument(new LimitaField(80, 0));
    jFldEndProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldEndProfActionPerformed(evt);
        }
    });
    jFldEndProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldEndProfKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldEndProfKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldEndProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldEndProf);
    jFldEndProf.setBounds(10, 120, 650, 25);

    jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel8.setText("Conta Salário");
    jPnlEdtNorte.add(jLabel8);
    jLabel8.setBounds(160, 350, 80, 30);

    jFldCargoProf.setDocument(new LimitaField(20, 0));
    jFldCargoProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCargoProfActionPerformed(evt);
        }
    });
    jFldCargoProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCargoProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldCargoProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldCargoProf);
    jFldCargoProf.setBounds(10, 270, 180, 25);

    jFldPercAvistaProf.setText("0,00 %");
    jFldPercAvistaProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldPercAvistaProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldPercAvistaProfFocusLost(evt);
        }
    });
    jFldPercAvistaProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldPercAvistaProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldPercAvistaProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldPercAvistaProf);
    jFldPercAvistaProf.setBounds(10, 320, 140, 25);

    jFldFoneProf.setDocument(new LimitaField(20, 0));
    jFldFoneProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldFoneProfFocusLost(evt);
        }
    });
    jFldFoneProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldFoneProfActionPerformed(evt);
        }
    });
    jFldFoneProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldFoneProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldFoneProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldFoneProf);
    jFldFoneProf.setBounds(380, 220, 280, 25);

    jFldNomeProf.setDocument(new LimitaField(60, 0));
    jFldNomeProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldNomeProfActionPerformed(evt);
        }
    });
    jFldNomeProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldNomeProfKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldNomeProfKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldNomeProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldNomeProf);
    jFldNomeProf.setBounds(10, 80, 650, 25);

    jFldCodProf.setEditable(false);
    jFldCodProf.setBackground(new java.awt.Color(255, 255, 204));
    jFldCodProf.setFocusable(false);
    jFldCodProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldCodProfFocusLost(evt);
        }
    });
    jFldCodProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCodProfActionPerformed(evt);
        }
    });
    jFldCodProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCodProfKeyPressed(evt);
        }
    });
    jPnlEdtNorte.add(jFldCodProf);
    jFldCodProf.setBounds(10, 30, 90, 25);

    jLabel28.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel28.setText("Função");
    jPnlEdtNorte.add(jLabel28);
    jLabel28.setBounds(200, 250, 50, 30);

    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel6.setText("Código");
    jPnlEdtNorte.add(jLabel6);
    jLabel6.setBounds(10, 350, 60, 30);

    jLblConta.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLblConta.setForeground(new java.awt.Color(0, 0, 204));
    jLblConta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPnlEdtNorte.add(jLblConta);
    jLblConta.setBounds(160, 370, 500, 25);
    jLblConta.getAccessibleContext().setAccessibleDescription("");

    jFldRgProf.setDocument(new LimitaField(40, 0));
    jFldRgProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldRgProfActionPerformed(evt);
        }
    });
    jFldRgProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldRgProfKeyPressed(evt);
        }
    });
    jPnlEdtNorte.add(jFldRgProf);
    jFldRgProf.setBounds(200, 220, 170, 25);

    jLabel30.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel30.setText("Perc. Com. A vista");
    jPnlEdtNorte.add(jLabel30);
    jLabel30.setBounds(10, 300, 110, 30);

    jLabel31.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel31.setText("Perc. Com. Cartão");
    jLabel31.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jLabel31KeyPressed(evt);
        }
    });
    jPnlEdtNorte.add(jLabel31);
    jLabel31.setBounds(160, 300, 100, 30);

    jFldCodConta.addAncestorListener(new javax.swing.event.AncestorListener() {
        public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            jFldCodContaAncestorMoved(evt);
        }
        public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            jFldCodContaAncestorAdded(evt);
        }
        public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
        }
    });
    jFldCodConta.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldCodContaFocusLost(evt);
        }
    });
    jFldCodConta.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCodContaActionPerformed(evt);
        }
    });
    jFldCodConta.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCodContaKeyPressed(evt);
        }
    });
    jPnlEdtNorte.add(jFldCodConta);
    jFldCodConta.setBounds(10, 370, 59, 25);

    jFldPercCartaoProf.setText("0,00 %");
    jFldPercCartaoProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldPercCartaoProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldPercCartaoProfFocusLost(evt);
        }
    });
    jFldPercCartaoProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldPercCartaoProfActionPerformed(evt);
        }
    });
    jFldPercCartaoProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldPercCartaoProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldPercCartaoProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldPercCartaoProf);
    jFldPercCartaoProf.setBounds(160, 320, 140, 25);

    jBtBuscaConta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tool.png"))); // NOI18N
    jBtBuscaConta.setText("F11");
    jBtBuscaConta.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtBuscaContaActionPerformed(evt);
        }
    });
    jPnlEdtNorte.add(jBtBuscaConta);
    jBtBuscaConta.setBounds(80, 370, 70, 22);

    jLabel18.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel18.setText("Endereço");
    jPnlEdtNorte.add(jLabel18);
    jLabel18.setBounds(10, 100, 70, 30);

    jFldBairroProf.setDocument(new LimitaField(40, 0));
    jFldBairroProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldBairroProfActionPerformed(evt);
        }
    });
    jFldBairroProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldBairroProfKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldBairroProfKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldBairroProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldBairroProf);
    jFldBairroProf.setBounds(290, 170, 370, 25);

    jLabel27.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel27.setText("Cargo");
    jPnlEdtNorte.add(jLabel27);
    jLabel27.setBounds(10, 250, 50, 30);

    jLabel25.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel25.setText("RG");
    jPnlEdtNorte.add(jLabel25);
    jLabel25.setBounds(200, 200, 20, 30);

    jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel4.setText("Código");
    jPnlEdtNorte.add(jLabel4);
    jLabel4.setBounds(10, 10, 34, 30);

    jLabel17.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel17.setText("Condutor");
    jLabel17.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jLabel17KeyPressed(evt);
        }
    });
    jPnlEdtNorte.add(jLabel17);
    jLabel17.setBounds(10, 60, 100, 30);

    jFldDtAdmissaoProf.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldDtAdmissaoProfFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldDtAdmissaoProfFocusLost(evt);
        }
    });
    jFldDtAdmissaoProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldDtAdmissaoProfKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldDtAdmissaoProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldDtAdmissaoProf);
    jFldDtAdmissaoProf.setBounds(450, 320, 120, 25);

    jLabel26.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel26.setText("Fone");
    jPnlEdtNorte.add(jLabel26);
    jLabel26.setBounds(380, 200, 40, 30);

    jLabel29.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel29.setText("Dt. Admissão");
    jPnlEdtNorte.add(jLabel29);
    jLabel29.setBounds(450, 300, 90, 30);

    jFldCidProf.setDocument(new LimitaField(40, 0));
    jFldCidProf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCidProfActionPerformed(evt);
        }
    });
    jFldCidProf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCidProfKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldCidProfKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldCidProfKeyTyped(evt);
        }
    });
    jPnlEdtNorte.add(jFldCidProf);
    jFldCidProf.setBounds(10, 170, 270, 25);

    jPnlEdit.add(jPnlEdtNorte, java.awt.BorderLayout.NORTH);

    jPnlEdtSul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPnlEdtSul.setPreferredSize(new java.awt.Dimension(598, 50));

    jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtCancelar.setText("Cancelar");
    jBtCancelar.setMargin(new java.awt.Insets(5, 14, 2, 14));
    jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtCancelarActionPerformed(evt);
        }
    });
    jBtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jBtCancelarKeyPressed(evt);
        }
    });

    jBtGravar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ok-icon.png"))); // NOI18N
    jBtGravar.setText("Gravar");
    jBtGravar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtGravarActionPerformed(evt);
        }
    });
    jBtGravar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jBtGravarKeyPressed(evt);
        }
    });

    jLblAcao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLblAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLblAcao.setText("jLabel6");
    jLblAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    javax.swing.GroupLayout jPnlEdtSulLayout = new javax.swing.GroupLayout(jPnlEdtSul);
    jPnlEdtSul.setLayout(jPnlEdtSulLayout);
    jPnlEdtSulLayout.setHorizontalGroup(
        jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlEdtSulLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(128, 128, 128)
            .addComponent(jLblAcao, javax.swing.GroupLayout.DEFAULT_SIZE, 16148, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16226, Short.MAX_VALUE)
            .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(31, 31, 31))
    );
    jPnlEdtSulLayout.setVerticalGroup(
        jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlEdtSulLayout.createSequentialGroup()
            .addGap(7, 7, 7)
            .addGroup(jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLblAcao)
                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
    );

    jPnlEdit.add(jPnlEdtSul, java.awt.BorderLayout.SOUTH);

    jPnlPrincipal.add(jPnlEdit, "card3");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 683, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPnlPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 458, Short.MAX_VALUE)
            .addGap(0, 0, 0))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFldBuscaCodProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldBuscaCodProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldBuscaCodProfActionPerformed

    private void jFldBuscaNomeProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldBuscaNomeProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldBuscaNomeProfActionPerformed

    private void jFldNomeProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldNomeProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldNomeProfActionPerformed

    private void jFldEndProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldEndProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldEndProfActionPerformed

    private void jFldRgProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldRgProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldRgProfActionPerformed

    private void jFldCidProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCidProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCidProfActionPerformed

    private void jFldCargoProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCargoProfActionPerformed
       
    }//GEN-LAST:event_jFldCargoProfActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        LimpaField();
        jPnlEdit.setVisible(false);
        jPnlBusca.setVisible(true);
        CarregaTudoProfissional();
        jFldBuscaCodProf.requestFocus();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jFldCodProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCodProfActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_jFldCodProfActionPerformed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        // TODO add your handling code here:
     
        Date DataDia = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
        SimpleDateFormat dtf = new SimpleDateFormat("dd/MM/yyyy");
        
        if (tag_acao == "1" && VerificaField() == true) {
            
            try {
                Inserir(Integer.parseInt(jFldCodProf.getText().toUpperCase()), jFldNomeProf.getText().toUpperCase(), jFldEndProf.getText().toUpperCase(), jFldCidProf.getText().toUpperCase(), jFldBairroProf.getText().toUpperCase(),
                        jFldCpfProf.getText().toUpperCase(), jFldRgProf.getText().toUpperCase(), jFldFoneProf.getText().toUpperCase(), tabusu.getCodigo().toString(), tabusu.getNome(), util.FormataDataBanco(new Date()),
                        "1", jFldCargoProf.getText().toUpperCase(), jFldFuncaoProf.getText().toUpperCase(), 0.0, 0.0, Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercAvistaProf.getText().replaceAll("\\ %", ""))), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercCartaoProf.getText().replaceAll("\\ %", ""))), 
                        Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercPrazoProf.getText().replaceAll("\\ %", ""))), VerificaCodigo(jFldCodConta.getText()),
                        Double.parseDouble(util.TrocaVirgulaPorPonto(jFldSalarioProf.getText())), 1, util.InserirDataFormatada(jFldDtAdmissaoProf.getText()) );
                
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro Inserir \n" + e.getLocalizedMessage());
            }
            
        } else if (tag_acao == "2" && VerificaField() == true) {
            try {
                Alterar(Integer.parseInt(jFldCodProf.getText().toUpperCase()), jFldNomeProf.getText().toUpperCase(), jFldEndProf.getText().toUpperCase(), jFldCidProf.getText().toUpperCase(), jFldBairroProf.getText().toUpperCase(),
                        jFldCpfProf.getText().toUpperCase(), jFldRgProf.getText().toUpperCase(), jFldFoneProf.getText().toUpperCase(), tabusu.getCodigo().toString(), tabusu.getNome(), util.FormataDataBanco(new Date()),
                        "2", jFldCargoProf.getText().toUpperCase(), jFldFuncaoProf.getText().toUpperCase(), 0.0, 0.0, Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercAvistaProf.getText().replaceAll("\\ %", ""))),  
                        Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercCartaoProf.getText().replaceAll("\\ %", ""))), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPercPrazoProf.getText()).replaceAll("\\ %", "")), VerificaCodigo(jFldCodConta.getText()),
                        Double.parseDouble(util.TrocaVirgulaPorPonto(jFldSalarioProf.getText())), 1, util.InserirDataFormatada(jFldDtAdmissaoProf.getText()) );
                
                
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erro Alterar \n" + e.getLocalizedMessage());
            }
            
        } else if (tag_acao == "3" && VerificaField() == true) {
            
            try {
                
                Deletar(Integer.parseInt(jFldCodProf.getText()), tabusu.getCodigo().toString(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");
                
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro Deletar \n" + e.getLocalizedMessage());
            }
            
        }        
        

    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jFldCodProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldNomeProf.requestFocus();
        }
            
    }//GEN-LAST:event_jFldCodProfKeyPressed

    private void jFldCodProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCodProfFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCodProfFocusLost

    private void jLabel17KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel17KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel17KeyPressed

    private void jFldNomeProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeProfKeyPressed

        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldEndProf.requestFocus();
        }  
    }//GEN-LAST:event_jFldNomeProfKeyPressed

    private void jFldEndProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldEndProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldCidProf.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldEndProfKeyPressed

    private void jFldCidProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCidProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldBairroProf.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldCidProfKeyPressed

    private void jFldBairroProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBairroProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldCpfProf.requestFocus();
        }
    }//GEN-LAST:event_jFldBairroProfKeyPressed

    private void jFldRgProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRgProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldFoneProf.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldRgProfKeyPressed

    private void jFldFoneProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFoneProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldCargoProf.requestFocus();
        }
        
       
    }//GEN-LAST:event_jFldFoneProfKeyPressed

    private void jFldCargoProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCargoProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldFuncaoProf.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldCargoProfKeyPressed

    private void jFldFuncaoProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFuncaoProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldSalarioProf.requestFocus();
        }
    }//GEN-LAST:event_jFldFuncaoProfKeyPressed

    private void jCmbBxOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxOrdemActionPerformed

    private void jFldBuscaCodProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldBuscaCodProfFocusLost
        // TODO add your handling code here:        
    }//GEN-LAST:event_jFldBuscaCodProfFocusLost

    private void jFldBuscaNomeProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldBuscaNomeProfFocusLost
        // TODO add your handling code here:
        //busca o prof
       
    }//GEN-LAST:event_jFldBuscaNomeProfFocusLost

    private void jCmbBxOrdemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCmbBxOrdemFocusLost
        // TODO add your handling code here:       
    }//GEN-LAST:event_jCmbBxOrdemFocusLost

    private void jBtInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInserirActionPerformed
//        if(util.VerificarPermissao("01.14.01", tabusu.getCodigo()) == true){
            jPnlEdit.setVisible(true);
            jPnlBusca.setVisible(false);
            tag_acao = "1";
            jLblAcao.setText("Inserir");
            LimpaField();
            BuscaCodMaximo();
            jFldDtAdmissaoProf.setText(new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis())));
            jFldNomeProf.requestFocus();
  //      } else{
    //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
      //  }
        
    }//GEN-LAST:event_jBtInserirActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
//        if(util.VerificarPermissao("01.14.02", tabusu.getCodigo()) == true){
            if (jTablePrincipal.getValueAt(selecionada, 0).toString() != null && !(jTablePrincipal.getValueAt(selecionada, 0).toString().equals(""))) {
                LimpaField();
                jPnlEdit.setVisible(true);
                jPnlBusca.setVisible(false);
                tag_acao = "2";
                jLblAcao.setText("Alterar");
                CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
                jFldNomeProf.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum profissional selecionado");
            }
  //      } else{
    //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
      //  }
        
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
//        if(util.VerificarPermissao("01.14.03", tabusu.getCodigo()) == true){
            if (jTablePrincipal.getValueAt(selecionada, 0).toString() != null && !(jTablePrincipal.getValueAt(selecionada, 0).toString().equals(""))) {
                jPnlEdit.setVisible(true);
                jPnlBusca.setVisible(false);
                tag_acao = "3";
                jLblAcao.setText("Excluir");
                CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
                int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro?", "Confirmação", JOptionPane.YES_NO_OPTION);
                if (resposta == JOptionPane.YES_OPTION) {
                    Date DataDia = new Date();
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
                    SimpleDateFormat dtf = new SimpleDateFormat("dd/MM/yyyy");
                    try {
                        Deletar(Integer.parseInt(jFldCodProf.getText()), tabusu.getCodigo().toString(), tabusu.getNome(), sdf.format(DataDia), "3");
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, "Erro Deletar \n" + e.getLocalizedMessage());
                    }
                } else {
                    jBtCancelar.doClick();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Nenhum profissional selecionado");
            }
  //      } else{
    //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
      //  }
        
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jTablePrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePrincipalKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            selecionada = jTablePrincipal.getSelectedRow();
            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jTablePrincipalKeyPressed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        // TODO add your handling code here:
        selecionada = jTablePrincipal.getSelectedRow();
        if (evt.getClickCount() == 2) {

            //selecionada = jTableProdfissional.getSelectedRow();
            if (selecionada == -1) {
                return; //Não tem nada selecionado
            } else {
                jBtAlterar.doClick();
            }
       
       }     
        
        
        
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jCmbBxOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCmbBxOrdemItemStateChanged
        // TODO add your handling code here:
        
       BuscaProdfissional(jFldBuscaCodProf.getText(), jFldBuscaNomeProf.getText().toUpperCase()); 
    }//GEN-LAST:event_jCmbBxOrdemItemStateChanged

    private void jFldBuscaCodProfInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jFldBuscaCodProfInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jFldBuscaCodProfInputMethodTextChanged

    private void jFldBuscaCodProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBuscaCodProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            jFldBuscaNomeProf.requestFocus();
        }
    }//GEN-LAST:event_jFldBuscaCodProfKeyPressed

    private void jFldFoneProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldFoneProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldFoneProfActionPerformed

    private void jFldFoneProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldFoneProfFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldFoneProfFocusLost

    private void jFldNomeProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeProfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldNomeProfKeyTyped

    private void jFldEndProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldEndProfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldEndProfKeyTyped

    private void jFldCidProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCidProfKeyTyped

    }//GEN-LAST:event_jFldCidProfKeyTyped

    private void jFldBairroProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBairroProfKeyTyped
    }//GEN-LAST:event_jFldBairroProfKeyTyped

    private void jFldBuscaNomeProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBuscaNomeProfKeyTyped
        
    }//GEN-LAST:event_jFldBuscaNomeProfKeyTyped

    private void jFldCargoProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCargoProfKeyTyped
    }//GEN-LAST:event_jFldCargoProfKeyTyped
    
    private void jFldFuncaoProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFuncaoProfKeyTyped
    }//GEN-LAST:event_jFldFuncaoProfKeyTyped

    private void jFldBuscaNomeProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBuscaNomeProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            jCmbBxOrdem.requestFocus();
        }
    }//GEN-LAST:event_jFldBuscaNomeProfKeyPressed

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        try{
            Conectar.ConectarBD();
            Conectar.result = Conectar.stam.executeQuery("select * from tabprof where rgevento  <> '3'");

            Conectar.result.first();

            selecionada = Conectar.result.getRow()-1;

            jTablePrincipal.setRowSelectionInterval(0, selecionada);
            Conectar.result.close();
            Conectar.stam.close();

            jBtPrimeiro.setEnabled(false);
            jBtProximo.setEnabled(false);
            jBtAnterior.setEnabled(true);
            jBtUltimo.setEnabled(true);

        } catch (SQLException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        try {
            Conectar.ConectarBD();
            Conectar.result= Conectar.stam.executeQuery("select * from tabprof where rgevento  <> '3'");
            Conectar.result.first();
            int tamanho_linhas= Conectar.result.getRow()-1;

            if(selecionada <= tamanho_linhas){
                jBtPrimeiro.setEnabled(false);
                jBtAnterior.setEnabled(false);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
            }else{

                selecionada --;

                Conectar.result.previous();
                jBtPrimeiro.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtUltimo.setEnabled(true);
            }

            jTablePrincipal.setRowSelectionInterval(0, selecionada);
            Conectar.result.close();
            Conectar.stam.close();

        } catch (SQLException | InstantiationException | IllegalAccessException ex) {
            
        }

    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        if(selecionada == -1) {
            JOptionPane.showMessageDialog(null, "Selecione a lista");

        }else{
            try{
                Conectar.ConectarBD();
                Conectar.result = Conectar.stam.executeQuery("select * from tabprof where rgevento  <> '3'");
                Conectar.result.last();
                int tamanho_linhas = Conectar.result.getRow()-1;
                if(selecionada >= tamanho_linhas){
                    jBtPrimeiro.setEnabled(true);
                    jBtProximo.setEnabled(false);
                    jBtAnterior.setEnabled(true);
                    jBtUltimo.setEnabled(false);
                }else{
                    selecionada ++;
                    Conectar.result.next();
                    jBtPrimeiro.setEnabled(true);
                    jBtProximo.setEnabled(true);
                    jBtAnterior.setEnabled(true);
                    jBtUltimo.setEnabled(true);
                }
                jTablePrincipal.setRowSelectionInterval(0, selecionada);
                Conectar.result.close();
                Conectar.stam.close();

            } catch (SQLException ex) {
                Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        try {
            Conectar.ConectarBD();
            Conectar.result= Conectar.stam.executeQuery("select * from tabprof where rgevento  <> '3'");
            Conectar.result.last();
            selecionada = Conectar.result.getRow()- 1;
            //seta a linha selecionada
            jTablePrincipal.setRowSelectionInterval(0, selecionada );
            Conectar.result.close();
            Conectar.stam.close();
            jBtPrimeiro.setEnabled(true);
            jBtProximo.setEnabled(false);
            jBtAnterior.setEnabled(true);
            jBtUltimo.setEnabled(false);
        } catch (SQLException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jFldNomeProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeProfKeyReleased
        
    }//GEN-LAST:event_jFldNomeProfKeyReleased

    private void jFldEndProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldEndProfKeyReleased
    }//GEN-LAST:event_jFldEndProfKeyReleased

    private void jFldCidProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCidProfKeyReleased

    }//GEN-LAST:event_jFldCidProfKeyReleased

    private void jFldBairroProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBairroProfKeyReleased
    }//GEN-LAST:event_jFldBairroProfKeyReleased

    private void jFldPercCartaoProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldPercCartaoProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldPercCartaoProfActionPerformed

    private void jFldPercPrazoProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldPercPrazoProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldPercPrazoProfActionPerformed

    private void jFldCpfProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCpfProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCpfProfActionPerformed

    private void jFldBairroProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldBairroProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldBairroProfActionPerformed

    private void jFldSalarioProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldSalarioProfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldSalarioProfActionPerformed

    private void jFldCodContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCodContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCodContaActionPerformed

    private void jFldSalarioProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldSalarioProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldPercAvistaProf.requestFocus();
        }
    }//GEN-LAST:event_jFldSalarioProfKeyPressed

    private void jFldPercAvistaProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercAvistaProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldPercCartaoProf.requestFocus();
        }
    }//GEN-LAST:event_jFldPercAvistaProfKeyPressed

    private void jLabel31KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel31KeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldPercPrazoProf.requestFocus();
        }
    }//GEN-LAST:event_jLabel31KeyPressed

    private void jFldPercPrazoProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercPrazoProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldDtAdmissaoProf.requestFocus();
        }
    }//GEN-LAST:event_jFldPercPrazoProfKeyPressed

    private void jFldSalarioProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldSalarioProfKeyTyped
        String caracteres = "0987654321.,";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldSalarioProfKeyTyped

    private void jFldCpfProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCpfProfFocusLost
        if (jFldCpfProf.getText().length() != 0) {
            if (util.VerificaCPF(jFldCpfProf.getText()) == true) {
                try {
                    jFldCpfProf.setText(util.FormataCpf(jFldCpfProf.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showMessageDialog(null, "CPF Inválido");
                jFldCpfProf.requestFocus();
            }

        }
    }//GEN-LAST:event_jFldCpfProfFocusLost

    private void jFldCpfProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCpfProfFocusGained
        jFldCpfProf.setText(jFldCpfProf.getText().replaceAll("\\.", "").replaceAll("\\-", "").replaceAll("\\ ", ""));
    }//GEN-LAST:event_jFldCpfProfFocusGained

    private void jFldCpfProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCpfProfKeyPressed
       if(evt.getKeyCode() == evt.VK_ENTER){
          jFldRgProf.requestFocus();
        }
    }//GEN-LAST:event_jFldCpfProfKeyPressed

    private void jFldCpfProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCpfProfKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldCpfProfKeyTyped

    private void jFldPercCartaoProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercCartaoProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldPercPrazoProf.requestFocus();
        }
    }//GEN-LAST:event_jFldPercCartaoProfKeyPressed

    private void jFldDtAdmissaoProfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldDtAdmissaoProfKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jFldCodConta.requestFocus();
        }
    }//GEN-LAST:event_jFldDtAdmissaoProfKeyPressed

    private void jFldCodContaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodContaKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jBtGravar.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F11) {
            jBtBuscaConta.doClick();
        }
    }//GEN-LAST:event_jFldCodContaKeyPressed

    private void jBtGravarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtGravarKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
          jBtGravar.doClick();
        }
        
        if(evt.getKeyCode() == evt.VK_RIGHT){
            jBtCancelar.requestFocus();
            
            
        }
    }//GEN-LAST:event_jBtGravarKeyPressed

    private void jFldPercAvistaProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercAvistaProfKeyTyped
        String caracteres = "0987654321,.";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldPercAvistaProfKeyTyped

    private void jFldPercCartaoProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercCartaoProfKeyTyped
        String caracteres = "0987654321,.";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldPercCartaoProfKeyTyped

    private void jFldPercPrazoProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPercPrazoProfKeyTyped
        String caracteres = "0987654321,.";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldPercPrazoProfKeyTyped

    private void jFldFoneProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFoneProfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldFoneProfKeyTyped

    private void jFldDtAdmissaoProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldDtAdmissaoProfFocusGained
       
    }//GEN-LAST:event_jFldDtAdmissaoProfFocusGained

    private void jFldDtAdmissaoProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldDtAdmissaoProfFocusLost
        if (jFldDtAdmissaoProf.getText().length() != 0) {
            String data = jFldDtAdmissaoProf.getText();
            if ((!data.contains("/")) || (data.length() < 10)) {
                JOptionPane.showMessageDialog(null, "Alerta de erro!\nFormato de data inválido.");
                jFldDtAdmissaoProf.requestFocus();
                jFldDtAdmissaoProf.selectAll();
            }
        }
    }//GEN-LAST:event_jFldDtAdmissaoProfFocusLost

    private void jBtBuscaContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscaContaActionPerformed
        TelaBuscaConta telabuscaconta = new TelaBuscaConta();
        telabuscaconta.CarregaTudoConta();
        telabuscaconta.setVisible(true);
        jFldCodConta.setText(telabuscaconta.iCOD.toString());
        jLblConta.setText(telabuscaconta.sDESC.toString());
        telabuscaconta.dispose();
        telabuscaconta.iCOD  = 0;
        telabuscaconta.sDESC = "";
                
    }//GEN-LAST:event_jBtBuscaContaActionPerformed

    private void jFldCodContaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCodContaFocusLost
        jLblConta.setText(BuscaDescConta(jFldCodConta.getText()));
    }//GEN-LAST:event_jFldCodContaFocusLost

    private void jFldCodContaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldCodContaAncestorAdded
        jLblConta.setText(BuscaDescConta(jFldCodConta.getText()));
    }//GEN-LAST:event_jFldCodContaAncestorAdded

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void jFldBuscaCodProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBuscaCodProfKeyReleased
        BuscaProdfissional(jFldBuscaCodProf.getText(), jFldBuscaNomeProf.getText().toUpperCase());
    }//GEN-LAST:event_jFldBuscaCodProfKeyReleased

    private void jFldBuscaNomeProfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldBuscaNomeProfKeyReleased
        BuscaProdfissional(jFldBuscaCodProf.getText(), jFldBuscaNomeProf.getText().toUpperCase());
    }//GEN-LAST:event_jFldBuscaNomeProfKeyReleased

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        try {
            Conectar.DesconectarBD();
        } catch (SQLException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaProfissionais.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameClosed

    private void jBtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtCancelarKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){          
            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            CarregaTudoProfissional();
            jFldBuscaCodProf.requestFocus();
        }
        
        if (evt.getKeyCode() == evt.VK_LEFT) {
            jBtGravar.requestFocus();
        }
        
        if (evt.getKeyCode() == evt.VK_RIGHT) {
            jFldNomeProf.requestFocus();
        }
    }//GEN-LAST:event_jBtCancelarKeyPressed

    private void jCmbBxOrdemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxOrdemKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){          
            if(jTablePrincipal.getRowCount() > 0){
                jTablePrincipal.requestFocus();
                jTablePrincipal.addRowSelectionInterval(0, 0);
            }else{
                jBtInserir.requestFocus();
            }
        }
    }//GEN-LAST:event_jCmbBxOrdemKeyPressed

    private void jBtInserirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtInserirKeyPressed
        if(evt.getKeyCode() == evt.VK_ENTER){
            jBtInserir.doClick();
        }
    }//GEN-LAST:event_jBtInserirKeyPressed

    private void jFldCodContaAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldCodContaAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCodContaAncestorMoved

    private void jFldDtAdmissaoProfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldDtAdmissaoProfKeyTyped
        String Caracteres = "0123456789//";
        if(!Caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_jFldDtAdmissaoProfKeyTyped

    private void jFldSalarioProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldSalarioProfFocusLost
        if(jFldSalarioProf.getText().length() == 0){
            jFldSalarioProf.setText("0,00");
        }
    }//GEN-LAST:event_jFldSalarioProfFocusLost

    private void jFldPercAvistaProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercAvistaProfFocusLost
        jFldPercAvistaProf.setText(util.FormataMarcaraPorcentagem(jFldPercAvistaProf.getText()));
    }//GEN-LAST:event_jFldPercAvistaProfFocusLost

    private void jFldPercCartaoProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercCartaoProfFocusLost
        jFldPercCartaoProf.setText(util.FormataMarcaraPorcentagem(jFldPercCartaoProf.getText()));
    }//GEN-LAST:event_jFldPercCartaoProfFocusLost

    private void jFldPercPrazoProfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercPrazoProfFocusLost
        jFldPercPrazoProf.setText(util.FormataMarcaraPorcentagem(jFldPercPrazoProf.getText()));
    }//GEN-LAST:event_jFldPercPrazoProfFocusLost

    private void jFldPercAvistaProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercAvistaProfFocusGained
        jFldPercAvistaProf.setText(jFldPercAvistaProf.getText().replaceAll("\\ %", ""));
        jFldPercAvistaProf.selectAll();
    }//GEN-LAST:event_jFldPercAvistaProfFocusGained

    private void jFldPercCartaoProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercCartaoProfFocusGained
        jFldPercCartaoProf.setText(jFldPercCartaoProf.getText().replaceAll("\\ %", ""));
        jFldPercCartaoProf.selectAll();
    }//GEN-LAST:event_jFldPercCartaoProfFocusGained

    private void jFldPercPrazoProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPercPrazoProfFocusGained
        jFldPercPrazoProf.setText(jFldPercPrazoProf.getText().replaceAll("\\ %", ""));
        jFldPercPrazoProf.selectAll();
    }//GEN-LAST:event_jFldPercPrazoProfFocusGained

    private void jFldSalarioProfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldSalarioProfFocusGained
        jFldSalarioProf.selectAll();
    }//GEN-LAST:event_jFldSalarioProfFocusGained

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProfissionais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProfissionais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProfissionais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProfissionais.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaProfissionais().setVisible(true);
                } catch (ParseException ex) {
                    ex.printStackTrace();
                }
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAnterior;
    private javax.swing.JButton jBtBuscaConta;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtGravar;
    private javax.swing.JButton jBtInserir;
    private javax.swing.JButton jBtPrimeiro;
    private javax.swing.JButton jBtProximo;
    private javax.swing.JButton jBtUltimo;
    private javax.swing.JComboBox<String> jCmbBxOrdem;
    private javax.swing.JTextField jFldBairroProf;
    private javax.swing.JTextField jFldBuscaCodProf;
    private javax.swing.JTextField jFldBuscaNomeProf;
    private javax.swing.JTextField jFldCargoProf;
    private javax.swing.JTextField jFldCidProf;
    private javax.swing.JTextField jFldCodConta;
    private javax.swing.JTextField jFldCodProf;
    private javax.swing.JFormattedTextField jFldCpfProf;
    private javax.swing.JTextField jFldDtAdmissaoProf;
    private javax.swing.JTextField jFldEndProf;
    private javax.swing.JTextField jFldFoneProf;
    private javax.swing.JTextField jFldFuncaoProf;
    private javax.swing.JTextField jFldNomeProf;
    private javax.swing.JFormattedTextField jFldPercAvistaProf;
    private javax.swing.JFormattedTextField jFldPercCartaoProf;
    private javax.swing.JFormattedTextField jFldPercPrazoProf;
    private javax.swing.JTextField jFldRgProf;
    private javax.swing.JFormattedTextField jFldSalarioProf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLblAcao;
    private javax.swing.JLabel jLblConta;
    private javax.swing.JPanel jPnlBusca;
    private javax.swing.JPanel jPnlEdit;
    private javax.swing.JPanel jPnlEdtNorte;
    private javax.swing.JPanel jPnlEdtSul;
    private javax.swing.JPanel jPnlPrincipal;
    private javax.swing.JPanel jPnlbotao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePrincipal;
    // End of variables declaration//GEN-END:variables

 
    private static String format(String pattern, Object value) {
        MaskFormatter mask;
        try {
            mask = new MaskFormatter(pattern);
            mask.setValueContainsLiteralCharacters(false);
            return mask.valueToString(value);
        } catch (ParseException e) {
            throw new RuntimeException(e);
        }
    }

    private void LimpaTabela() {
        DefaultTableModel tableModel = (DefaultTableModel) jTablePrincipal.getModel();
        tableModel.setNumRows(0);
    }
    
    public void CarregaTudoProfissional() {
        try {
            LimpaTabela();
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from TABPROF where RGEVENTO <> '3'");
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    Conectar.result.getInt("codprof"),
                    Conectar.result.getString("nomprof"),
                    Conectar.result.getString("CPFPROF"),
                    Conectar.result.getInt("rgcodusu"),
                    Conectar.result.getString("rgusuario"),
                    Conectar.result.getDate("rgdata"),
                    Conectar.result.getString("rgevento")

                });

            }
            Conectar.DesconectarBD();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());
        }

    }

public void  BuscaCodMaximo() {
        try {
            Conectar.ConectarBD();
            Conectar.result = Conectar.stam.executeQuery("select (max(codprof) + 1)  from tabprof");     
            while (Conectar.result.next()) {              
                codmax =  Conectar.result.getInt(1) ;
                if(codmax <= 0){
                    codmax = 1;
                }
                jFldCodProf.setText(Integer.toString(codmax));                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());
        }

    }

 public  void DefinirFormulario() throws ParseException {
    setSize(700, 620);
        jPnlPrincipal.setSize(700, 620);
        jPnlBusca.setSize(700, 620);
        jPnlEdit.setSize(700, 620);
        jTablePrincipal.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
     
       MeuRenderizador meurenderizador = new MeuRenderizador();

      
        for (int col = 0; col < jTablePrincipal.getColumnCount(); col++) {
            jTablePrincipal.getColumnModel().getColumn(col).setHeaderRenderer(new TelaProfissionais.MeuRenderizador());
        }
        
      //selecionar uma linha        
      jTablePrincipal.setSelectionMode (ListSelectionModel.SINGLE_SELECTION);
      
      //lados
      centro.setHorizontalAlignment(SwingConstants.CENTER);
      direita.setHorizontalAlignment(SwingConstants.RIGHT);
      
      //tamanho da coluna
      jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);
      jTablePrincipal.getColumnModel().getColumn(0).setMaxWidth(60);
      jTablePrincipal.getColumnModel().getColumn(0).setCellRenderer(centro);
      
      jTablePrincipal.getColumnModel().getColumn(1).setMinWidth(600);
      jTablePrincipal.getColumnModel().getColumn(1).setMaxWidth(700);
      jTablePrincipal.getColumnModel().getColumn(1).setCellRenderer(esquerda);
      
      jTablePrincipal.getColumnModel().getColumn(2).setMinWidth(150);
      jTablePrincipal.getColumnModel().getColumn(2).setMaxWidth(200);
      jTablePrincipal.getColumnModel().getColumn(2).setCellRenderer(esquerda);
      
      jTablePrincipal.getColumnModel().getColumn(3).setMinWidth(130);
      jTablePrincipal.getColumnModel().getColumn(3).setMaxWidth(130);
      jTablePrincipal.getColumnModel().getColumn(3).setCellRenderer(esquerda);
      
      jTablePrincipal.getColumnModel().getColumn(4).setMinWidth(90);
      jTablePrincipal.getColumnModel().getColumn(4).setMaxWidth(90);
      jTablePrincipal.getColumnModel().getColumn(4).setCellRenderer(esquerda);
      
       jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(90);
      jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(90);
      jTablePrincipal.getColumnModel().getColumn(5).setCellRenderer(esquerda);
      
      
      //Adiciona as teclas ALT + I de atalho para os seguintes botões
      jBtInserir.setMnemonic(java.awt.event.KeyEvent.VK_I);
      jBtAlterar.setMnemonic(java.awt.event.KeyEvent.VK_A);
      jBtExcluir.setMnemonic(java.awt.event.KeyEvent.VK_E);
      jBtGravar.setMnemonic(java.awt.event.KeyEvent.VK_G);
      jBtCancelar.setMnemonic(java.awt.event.KeyEvent.VK_C);
        
 }

public void BuscaProdfissional(String codprof, String nomprof) {
        try {
            sql ="";
            if( !"".equals(codprof) ){
              sql = " where ( codprof = " + codprof + ") ";
            }else if( !"".equals(nomprof) ){
              sql = " where ( nomprof like '" + nomprof + "%' )";
            }else if(( !"".equals(nomprof) ) & ( !"".equals(codprof) )){
              sql = " where ( ( codprof = "+ codprof + ") and ( nomprof like '" + nomprof+"'%" + ")  ) ";
            }else if(( "".equals(nomprof) ) & ( "".equals(codprof) )){
              sql = "where (codprof is not null) ";
            }

            if (jCmbBxOrdem.getSelectedItem().equals("Código")) {
                ordnar = "codprof";                
            } else if (jCmbBxOrdem.getSelectedItem().equals("Nome")) {
                ordnar = "nomprof";
            }
            
                             
            LimpaTabela();
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from tabprof  "+sql+" and (rgevento  <> '3')  order by "+ordnar);     //+ " order by "+ ordnar
            while (Conectar.result.next()) { 
                 
                
                dtm.addRow(new Object[]{
                    Conectar.result.getInt("codprof"),
                    Conectar.result.getString("nomprof"),
                    Conectar.result.getString("rgcodusu"),
                    Conectar.result.getString("rgusuario"),
                    Conectar.result.getDate("rgdata"),
                    Conectar.result.getString("rgevento"),
                    
                    });  
                
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());
        }
        
    }


public  void Inserir(Integer CODPROF, String NOMPROF, String ENDPROF, String CIDPROF, String BAIRRO, 
                                        String CPFPROF , String RGPROF,  String TELPROF, String RGCODUSU, String RGUSUARIO, 
                                        String RGDATA, String RGEVENTO , String CARGO, String FUNCAO , Double PERCCOMIS,
                                        Double PERCOMISS, Double PERCCOMAV, Double PERCOOMCC, Double PERCOOMAP, Integer CODCONTA,
                                        Double SALPROF, Integer CODVEN, String DTADMISSAO/**/ ) throws InstantiationException, IllegalAccessException {
        
        try {
           Conectar.ConectarBD();
           System.out.println("INSERT INTO TABPROF "
                    + " (CODPROF, NOMPROF, ENDPROF, CIDPROF, BAIRRO, CPFPROF, RGPROF, TELPROF, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO, CARGO, FUNCAO, "
                    + " PERCCOMIS, PERCOMISS, PERCCOMAV, PERCOOMCC, PERCOOMAP, CODCONTA, SALPROF, CODVEN, DTADMISSAO  )    "
                    + " VALUES(" + CODPROF + ", '" + NOMPROF + "', '" + ENDPROF + "', '" + CIDPROF + "', '" + BAIRRO + "', '" + CPFPROF + "', '" + RGPROF + "','" + TELPROF+ "', "  
                    + " "+ RGCODUSU + ", '" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO   + "','" + CARGO + "', '" + FUNCAO + "', " 
                    + " "+ PERCCOMIS + ", " + PERCOMISS + ", " + PERCCOMAV + ", " + PERCOOMCC + ", " + PERCOOMAP + ", " + CODCONTA + ", " + SALPROF + ", " + CODVEN +", "
                    + " " + DTADMISSAO + " );");
            
            
           Conectar.stam.executeUpdate("INSERT INTO TABPROF "
                    + " (CODPROF, NOMPROF, ENDPROF, CIDPROF, BAIRRO, CPFPROF, RGPROF, TELPROF, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO, CARGO, FUNCAO, "
                    + " PERCCOMIS, PERCOMISS, PERCCOMAV, PERCOOMCC, PERCOOMAP, CODCONTA, SALPROF, CODVEN, DTADMISSAO  )    "
                    + " VALUES(" + CODPROF + ", '" + NOMPROF + "', '" + ENDPROF + "', '" + CIDPROF + "', '" + BAIRRO + "', '" + CPFPROF + "', '" + RGPROF + "', '" + TELPROF+ "', "  
                    + " "+ RGCODUSU + ", '" + RGUSUARIO + "', '" + RGDATA + "', '" + RGEVENTO   + "', '" + CARGO + "', '" + FUNCAO + "', " 
                    + " "+ PERCCOMIS + ", " + PERCOMISS + "," + PERCCOMAV + ", " + PERCOOMCC + ", " + PERCOOMAP + ", " + CODCONTA + ", " + SALPROF + ", " + CODVEN +", "
                    + " " + DTADMISSAO + " )");
            //
            
           
            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);                
            CarregaTudoProfissional();
            int resposta = JOptionPane.showConfirmDialog(null, "Registro inserido com sucesso.\n Deseja inserir outro?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if(resposta == JOptionPane.YES_OPTION){
                jBtInserir.doClick();
            }else {
                jFldBuscaCodProf.requestFocus();
            }
           
            
        } catch (SQLException ex) {
            try {
                JOptionPane.showMessageDialog(null, "Erro Inserir \n" + ex.getLocalizedMessage());

            } catch (Exception e) {
                System.out.println("erro...\n" + e.getLocalizedMessage());
                JOptionPane.showMessageDialog(null, "Erro Inserir \n" + e.getLocalizedMessage());

            }
        }

    }



    public void Alterar(Integer CODPROF, String NOMPROF, String ENDPROF, String CIDPROF, String BAIRRO,
            String CPFPROF, String RGPROF, String TELPROF, String RGCODUSU, String RGUSUARIO,
            String RGDATA, String RGEVENTO, String CARGO, String FUNCAO, Double PERCCOMIS,
            Double PERCOMISS, Double PERCCOMAV, Double PERCOOMCC, Double PERCOOMAP, Integer CODCONTA,
            Double SALPROF, Integer CODVEN, String DTADMISSAO/**/) throws InstantiationException, IllegalAccessException {

        try {
            Conectar.ConectarBD();

            System.out.println("UPDATE TABPROF SET "
                    + "NOMPROF   = '" + NOMPROF + "',"
                    + "ENDPROF   = '" + ENDPROF + "',"
                    + "CIDPROF   = '" + CIDPROF + "',"
                    + "BAIRRO    = '" + BAIRRO + "',"
                    + "CPFPROF   = '" + CPFPROF + "',"
                    + "RGPROF    = '" + RGPROF + "',"
                    + "TELPROF   = '" + TELPROF + "',"
                    + "RGCODUSU  = " + RGCODUSU + ","
                    + "RGUSUARIO = '" + RGUSUARIO + "',"
                    + "RGDATA    = '" + RGDATA + "',"
                    + "RGEVENTO  = '" + RGEVENTO + "',"
                    + "CARGO     = '" + CARGO + "',"
                    + "FUNCAO    = '" + FUNCAO + "',"
                    + "PERCCOMIS  = " + PERCCOMIS + ", "
                    + "PERCOMISS  = " + PERCOMISS + ","
                    + "PERCCOMAV  = " + PERCCOMAV + ","
                    + "PERCOOMCC  = " + PERCOOMCC + ","
                    + "PERCOOMAP  = " + PERCOOMAP + ","
                    + "CODCONTA   = '" + CODCONTA + "',"
                    + "SALPROF    = '" + SALPROF + "',"
                    + "CODVEN     = '" + CODVEN + "',"
                    + "DTADMISSAO = " + DTADMISSAO + " "
                    + "where CODPROF = '" + CODPROF + "'");

            Conectar.stam.executeUpdate("UPDATE TABPROF SET "
                    + "NOMPROF    = '" + NOMPROF + "',"
                    + "ENDPROF    = '" + ENDPROF + "',"
                    + "CIDPROF    = '" + CIDPROF + "',"
                    + "BAIRRO     = '" + BAIRRO + "',"
                    + "CPFPROF    = '" + CPFPROF + "',"
                    + "RGPROF     = '" + RGPROF + "',"
                    + "TELPROF    = '" + TELPROF + "',"
                    + "RGCODUSU   =  " + RGCODUSU + ","
                    + "RGUSUARIO  = '" + RGUSUARIO + "',"
                    + "RGDATA     = '" + RGDATA + "',"
                    + "RGEVENTO   = '" + RGEVENTO + "',"
                    + "CARGO      = '" + CARGO + "',"
                    + "FUNCAO     = '" + FUNCAO + "',"
                    + "PERCCOMIS  =  " + PERCCOMIS + ","
                    + "PERCOMISS  =  " + PERCOMISS + ","
                    + "PERCCOMAV  =  " + PERCCOMAV + ","
                    + "PERCOOMCC  =  " + PERCOOMCC + ","
                    + "PERCOOMAP  =  " + PERCOOMAP + ","
                    + "CODCONTA   = " + CODCONTA + ","
                    + "SALPROF    = " + SALPROF + ","
                    + "CODVEN     = " + CODVEN + ","
                    + "DTADMISSAO = " + DTADMISSAO + " "
                    + "where CODPROF = " + CODPROF + " ");

            CarregaTudoProfissional();
            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);
            LimpaField();
            JOptionPane.showMessageDialog(null, "Alterado com sucesso.");
            jFldBuscaCodProf.requestFocus();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao alterar...\n" + ex.getLocalizedMessage());
        }

    }

    public void Deletar(Integer CODPROF, String RGCODUSU, String RGUSUARIO,
            String RGDATA, String RGEVENTO) throws InstantiationException, IllegalAccessException {

        try {
            Conectar.ConectarBD();

            System.out.println("UPDATE TABPROF SET "
                    + " CODPROF   =  " + CODPROF + ","
                    + " RGCODUSU  =  " + RGCODUSU + ","
                    + " RGUSUARIO = '" + RGUSUARIO + "',"
                    + " RGDATA    =  " + RGDATA + ","
                    + " RGEVENTO  =  '" + RGEVENTO + "'"
                    + " where CODPROF = " + CODPROF + ""
            );

            Conectar.stam.executeUpdate("UPDATE TABPROF SET "
                    + " CODPROF   =  " + CODPROF + ","
                    + " RGCODUSU  =  " + RGCODUSU + ","
                    + " RGUSUARIO = '" + RGUSUARIO + "',"
                    + " RGDATA    =  '" + RGDATA + "',"
                    + " RGEVENTO  =  '" + RGEVENTO + "'"
                    + " where CODPROF = " + CODPROF + ""
            );

            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);
            CarregaTudoProfissional();
            JOptionPane.showMessageDialog(null, "Deletado com sucesso.");
            jFldBuscaCodProf.requestFocus();

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao alterar...\n" + ex.getLocalizedMessage());
        }

    }
    
    

    public void CarregaCampoEdit(String codprof) {
        try {
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from tabprof where ( codprof = " + codprof + ") and (rgevento  <> '3')   ");     //+ " order by "+ ordnar
            while (Conectar.result.next()) {
                jFldCodProf.setText(Conectar.result.getString("codprof"));
                jFldNomeProf.setText(Conectar.result.getString("nomprof"));
                jFldEndProf.setText(Conectar.result.getString("endprof"));
                jFldCidProf.setText(Conectar.result.getString("cidprof"));
                jFldBairroProf.setText(Conectar.result.getString("bairro"));
                jFldCpfProf.setText(Conectar.result.getString("cpfprof"));
                jFldRgProf.setText(Conectar.result.getString("rgprof"));
                jFldFoneProf.setText(Conectar.result.getString("telprof"));
                jFldCargoProf.setText(Conectar.result.getString("cargo"));
                jFldFuncaoProf.setText(Conectar.result.getString("funcao"));
                jFldSalarioProf.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("salprof")));
                jFldPercAvistaProf.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("perccomav")) + " %");
                jFldPercCartaoProf.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("percoomcc")) + " %");
                jFldPercPrazoProf.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("percoomap")) + " %");
                if(Conectar.result.getString("dtadmissao") != null){
                    jFldDtAdmissaoProf.setText(DtEmissao.format(Conectar.result.getDate("dtadmissao")));
                }
                if(Conectar.result.getString("codconta") != null){
                    jFldCodConta.setText(Conectar.result.getString("codconta"));
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());
        }

    }

    public void LimpaField() {
        jFldCodProf.setText("");
        jFldNomeProf.setText("");
        jFldEndProf.setText("");
        jFldCidProf.setText("");
        jFldBairroProf.setText("");
        jFldCpfProf.setText("");
        jFldRgProf.setText("");
        jFldFoneProf.setText("");
        jFldCargoProf.setText("");
        jFldFuncaoProf.setText("");
        jFldSalarioProf.setText("");
        jFldDtAdmissaoProf.setText("");
        jFldSalarioProf.setText("0,00");
        jFldPercAvistaProf.setText("0,00 %");
        jFldPercCartaoProf.setText("0,00 %");
        jFldPercPrazoProf.setText("0,00 %");
        jFldCodConta.setText("");

    }

    //Retorna a descriçao da conta d e acordo com o codigo que entrar como parâmetro
    public String BuscaDescConta(String codconta){
        String DescConta = "";
        try {
            if(codconta.length() > 0){
                Conectar.ConectarBD();
                Conectar.result = Conectar.stam.executeQuery("select * from TABCONTA where (CODCONTA = " + codconta + ") and (RGEVENTO  <> '3') ");
                while (Conectar.result.next()) {
                    DescConta = Conectar.result.getString("DESCCONTA");
                }
                Conectar.DesconectarBD();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro...\n" + ex.getLocalizedMessage());
        }
        
        return DescConta;
    }
    
    //Verifica se o parametro não é vazio, se for, retorna um valor inteiro nulo
    //Senao, retorna o parametro formatado para inteiro
    public Integer VerificaCodigo(String codigo){
        if(codigo.length() > 0){
            return Integer.parseInt(codigo);
        }else{
            return null;
        }
    }

    public boolean VerificaField() {
        if (jFldNomeProf.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Nome do Condutor não preenchido!");
            jFldNomeProf.requestFocus();
            return false;
        } else if(jFldCpfProf.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "CPF não preenchido!");
            jFldCpfProf.requestFocus();
            return false;
        }else{
            return true;
        }

    }
    
    //Evento para sair da tela com a tecla esc
    //Chamar evento no construtor principal da classe
    public void SairEsc() {
        KeyStroke ks = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, true);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks, "esc");
        getRootPane().getActionMap().put("esc", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if(jPnlBusca.isVisible() == true){
                    dispose();
                }else if(jPnlEdit.isVisible() == true){
                    jPnlEdit.setVisible(false);
                    jPnlBusca.setVisible(true);
                    jFldBuscaCodProf.requestFocus();
                }
            }
        });
    }
    
    
    
    /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            setFont(getFont().deriveFont(Font.BOLD));
            setOpaque(false);
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setFont(getFont().deriveFont(Font.BOLD));
            setHorizontalAlignment(SwingConstants.LEFT);
            setText(value.toString());

            return this;
        }

    }


}
