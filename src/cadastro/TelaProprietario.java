/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastro;

import ClassesFirebird.Tabusu;
import ConexaoDB.Conectar;
import Utilitarios.LimitaField;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.sql.SQLException;
import java.lang.String;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.lang.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Israel
 */
public class TelaProprietario extends javax.swing.JInternalFrame {

    public int codmax, selecionada;
    String sql, ordnar, situacao, tag_acao;
    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
    SimpleDateFormat DtEmissao = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat DtDia = new SimpleDateFormat("dd/MM/yyyy");
    Utilitarios util = new Utilitarios();
    Tabusu tabusu = new Tabusu();

    public TelaProprietario() throws SQLException, InstantiationException, IllegalAccessException {
        initComponents();
        DefinirFormulario();
        CarregaTudo();
        CarregaUF();
        SairEsc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    jPnlPrincipal = new javax.swing.JPanel();
    jPnlBusca = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jScrollPane = new javax.swing.JScrollPane();
    jTablePrincipal = new javax.swing.JTable();
    jComboBoxPesquisa = new javax.swing.JComboBox<>();
    jPnlBotao = new javax.swing.JPanel();
    jBtPrimeiro = new javax.swing.JButton();
    jBtAnterior = new javax.swing.JButton();
    jBtProximo = new javax.swing.JButton();
    jBtUltimo = new javax.swing.JButton();
    jBtInserir = new javax.swing.JButton();
    jBtAlterar = new javax.swing.JButton();
    jBtExcluir = new javax.swing.JButton();
    jComboBoxOrdem = new javax.swing.JComboBox<>();
    jLabel6 = new javax.swing.JLabel();
    FldPesquisa = new javax.swing.JTextField();
    jPnlEdit = new javax.swing.JPanel();
    jPnlNorte = new javax.swing.JPanel();
    jLabel18 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jFldNomeProprietario = new javax.swing.JTextField();
    jFldRntrc = new javax.swing.JTextField();
    jLabel11 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jFldCodProprietario = new javax.swing.JTextField();
    jCmbBxTpPropietario = new javax.swing.JComboBox<>();
    jCmbBxUF = new javax.swing.JComboBox<>();
    jLabel23 = new javax.swing.JLabel();
    jFldInsEst = new javax.swing.JTextField();
    jPanel1 = new javax.swing.JPanel();
    jRadioCnpj = new javax.swing.JRadioButton();
    jRadioCpf = new javax.swing.JRadioButton();
    jFldCNPJ = new javax.swing.JTextField();
    jFldCPF = new javax.swing.JTextField();
    JPnlSul = new javax.swing.JPanel();
    jBtGravar = new javax.swing.JButton();
    jBtCancelar = new javax.swing.JButton();
    jLabelAcao = new javax.swing.JLabel();

    setMaximizable(true);
    setResizable(true);
    setTitle("Cadastro de Proprietário");
    addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
      public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
        formInternalFrameClosed(evt);
      }
      public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
      }
    });
    addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        formKeyPressed(evt);
      }
    });

    jPnlPrincipal.setLayout(new java.awt.CardLayout());

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel1.setText("Pesquisa");

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel2.setText("Pequisa");

    jScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jScrollPaneMouseClicked(evt);
      }
    });

    jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
      },
      new String [] {
        "Código", "Nome do Proprietário", "RNTC", "Código", "Tipo", "UF", "CPF", "CNPJ", "IE"
      }
    ){
      @Override
      public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
      };
    }

  );
  jTablePrincipal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
  jTablePrincipal.setDragEnabled(true);
  jTablePrincipal.getTableHeader().setReorderingAllowed(false);
  jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
      jTablePrincipalMouseClicked(evt);
    }
  });
  jTablePrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jTablePrincipalKeyPressed(evt);
    }
  });
  jScrollPane.setViewportView(jTablePrincipal);

  jComboBoxPesquisa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  jComboBoxPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome", "CPF", "CNPJ" }));
  jComboBoxPesquisa.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
      jComboBoxPesquisaItemStateChanged(evt);
    }
  });
  jComboBoxPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jComboBoxPesquisaFocusLost(evt);
    }
  });
  jComboBoxPesquisa.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jComboBoxPesquisaActionPerformed(evt);
    }
  });
  jComboBoxPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jComboBoxPesquisaKeyPressed(evt);
    }
  });

  jPnlBotao.setLayout(new java.awt.GridLayout(1, 0));

  jBtPrimeiro.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Primeiro.png"))); // NOI18N
  jBtPrimeiro.setText("Primeiro");
  jBtPrimeiro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtPrimeiro.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtPrimeiro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtPrimeiroActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtPrimeiro);

  jBtAnterior.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Anterior.png"))); // NOI18N
  jBtAnterior.setText("Anterior");
  jBtAnterior.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtAnterior.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtAnterior.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtAnteriorActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtAnterior);

  jBtProximo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Proximo.png"))); // NOI18N
  jBtProximo.setText("Próximo");
  jBtProximo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtProximo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtProximo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtProximo.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtProximoActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtProximo);

  jBtUltimo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ultimo.png"))); // NOI18N
  jBtUltimo.setText("Último");
  jBtUltimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtUltimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtUltimo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtUltimoActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtUltimo);

  jBtInserir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/file_add.png"))); // NOI18N
  jBtInserir.setText("Inserir");
  jBtInserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtInserir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtInserir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtInserir.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtInserirActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtInserir);

  jBtAlterar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/text_edit.png"))); // NOI18N
  jBtAlterar.setText("Alterar");
  jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtAlterarActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtAlterar);

  jBtExcluir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/deletar.png"))); // NOI18N
  jBtExcluir.setText("Excluir");
  jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtExcluirActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtExcluir);

  jComboBoxOrdem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  jComboBoxOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descrição", "Ordem" }));
  jComboBoxOrdem.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
      jComboBoxOrdemItemStateChanged(evt);
    }
  });
  jComboBoxOrdem.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jComboBoxOrdemFocusLost(evt);
    }
  });
  jComboBoxOrdem.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jComboBoxOrdemActionPerformed(evt);
    }
  });
  jComboBoxOrdem.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jComboBoxOrdemKeyPressed(evt);
    }
  });

  jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel6.setText("Ordem:");

  FldPesquisa.setDocument(new LimitaField(100, 0)
  );
  FldPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      FldPesquisaFocusLost(evt);
    }
  });
  FldPesquisa.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      FldPesquisaActionPerformed(evt);
    }
  });
  FldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      FldPesquisaKeyPressed(evt);
    }
  });

  javax.swing.GroupLayout jPnlBuscaLayout = new javax.swing.GroupLayout(jPnlBusca);
  jPnlBusca.setLayout(jPnlBuscaLayout);
  jPnlBuscaLayout.setHorizontalGroup(
    jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlBuscaLayout.createSequentialGroup()
      .addContainerGap()
      .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
          .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addComponent(FldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGap(10, 10, 10)
          .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jComboBoxPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGap(20, 20, 20)
          .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addComponent(jScrollPane)
        .addComponent(jPnlBotao, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE))
      .addContainerGap())
  );
  jPnlBuscaLayout.setVerticalGroup(
    jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlBuscaLayout.createSequentialGroup()
      .addGap(10, 10, 10)
      .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
          .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(4, 4, 4)
          .addComponent(jComboBoxPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
          .addGap(2, 2, 2)
          .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(3, 3, 3)
              .addComponent(FldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel6)
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
              .addGap(12, 12, 12)
              .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))))
      .addGap(10, 10, 10)
      .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(jPnlBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addContainerGap())
  );

  jPnlPrincipal.add(jPnlBusca, "card2");

  jPnlEdit.setLayout(new java.awt.BorderLayout());

  jPnlNorte.setPreferredSize(new java.awt.Dimension(0, 300));
  jPnlNorte.setLayout(null);

  jLabel18.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel18.setText("Tipo Proprietário");
  jLabel18.setToolTipText("");
  jPnlNorte.add(jLabel18);
  jLabel18.setBounds(250, 117, 100, 13);

  jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel7.setText("RNTRC");
  jLabel7.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jLabel7KeyPressed(evt);
    }
  });
  jPnlNorte.add(jLabel7);
  jLabel7.setBounds(20, 120, 110, 10);

  jFldNomeProprietario.setDocument(new LimitaField(60, 0));
  jFldNomeProprietario.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldNomeProprietarioActionPerformed(evt);
    }
  });
  jFldNomeProprietario.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldNomeProprietarioKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldNomeProprietarioKeyReleased(evt);
    }
  });
  jPnlNorte.add(jFldNomeProprietario);
  jFldNomeProprietario.setBounds(20, 80, 530, 25);

  jFldRntrc.setDocument(new LimitaField(8, 0)
  );
  jFldRntrc.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldRntrcActionPerformed(evt);
    }
  });
  jFldRntrc.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldRntrcKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldRntrcKeyReleased(evt);
    }
  });
  jPnlNorte.add(jFldRntrc);
  jFldRntrc.setBounds(20, 130, 210, 25);

  jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel11.setText("IE");
  jPnlNorte.add(jLabel11);
  jLabel11.setBounds(250, 180, 50, 10);

  jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel5.setText("Código");
  jPnlNorte.add(jLabel5);
  jLabel5.setBounds(20, 17, 50, 13);

  jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel4.setText("Nome do proprietário");
  jPnlNorte.add(jLabel4);
  jLabel4.setBounds(20, 67, 170, 13);
  jLabel4.getAccessibleContext().setAccessibleDescription("");

  jFldCodProprietario.setBackground(new java.awt.Color(255, 255, 204));
  jFldCodProprietario.setFocusable(false);
  jFldCodProprietario.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCodProprietarioKeyPressed(evt);
    }
  });
  jPnlNorte.add(jFldCodProprietario);
  jFldCodProprietario.setBounds(20, 30, 90, 25);

  jCmbBxTpPropietario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TAC – Agregado", "TAC Independente", "Outros" }));
  jCmbBxTpPropietario.setSelectedIndex(-1);
  jCmbBxTpPropietario.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jCmbBxTpPropietarioActionPerformed(evt);
    }
  });
  jCmbBxTpPropietario.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jCmbBxTpPropietarioKeyPressed(evt);
    }
  });
  jPnlNorte.add(jCmbBxTpPropietario);
  jCmbBxTpPropietario.setBounds(250, 130, 300, 25);
  jCmbBxTpPropietario.getAccessibleContext().setAccessibleName("");
  jCmbBxTpPropietario.getAccessibleContext().setAccessibleDescription("");

  jCmbBxUF.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jCmbBxUFActionPerformed(evt);
    }
  });
  jCmbBxUF.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jCmbBxUFKeyPressed(evt);
    }
  });
  jPnlNorte.add(jCmbBxUF);
  jCmbBxUF.setBounds(20, 190, 210, 25);
  jCmbBxUF.getAccessibleContext().setAccessibleDescription("");

  jLabel23.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel23.setText("Estado");
  jLabel23.setToolTipText("");
  jPnlNorte.add(jLabel23);
  jLabel23.setBounds(20, 180, 100, 10);

  jFldInsEst.setDocument(new LimitaField(12, 0));
  jFldInsEst.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldInsEstActionPerformed(evt);
    }
  });
  jFldInsEst.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldInsEstKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldInsEstKeyReleased(evt);
    }
    public void keyTyped(java.awt.event.KeyEvent evt) {
      jFldInsEstKeyTyped(evt);
    }
  });
  jPnlNorte.add(jFldInsEst);
  jFldInsEst.setBounds(250, 190, 300, 25);

  jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

  buttonGroup1.add(jRadioCnpj);
  jRadioCnpj.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jRadioCnpj.setText("CNPJ");
  jRadioCnpj.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jRadioCnpjActionPerformed(evt);
    }
  });

  buttonGroup1.add(jRadioCpf);
  jRadioCpf.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jRadioCpf.setSelected(true);
  jRadioCpf.setText("CPF");
  jRadioCpf.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jRadioCpfActionPerformed(evt);
    }
  });

  jFldCNPJ.setDocument(new LimitaField(18, 0));
  jFldCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldCNPJFocusLost(evt);
    }
  });
  jFldCNPJ.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldCNPJActionPerformed(evt);
    }
  });
  jFldCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCNPJKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldCNPJKeyReleased(evt);
    }
    public void keyTyped(java.awt.event.KeyEvent evt) {
      jFldCNPJKeyTyped(evt);
    }
  });

  jFldCPF.setDocument(new LimitaField(14 , 0));
  jFldCPF.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldCPFFocusLost(evt);
    }
  });
  jFldCPF.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldCPFActionPerformed(evt);
    }
  });
  jFldCPF.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCPFKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldCPFKeyReleased(evt);
    }
    public void keyTyped(java.awt.event.KeyEvent evt) {
      jFldCPFKeyTyped(evt);
    }
  });

  javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
  jPanel1.setLayout(jPanel1Layout);
  jPanel1Layout.setHorizontalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel1Layout.createSequentialGroup()
      .addGap(23, 23, 23)
      .addComponent(jRadioCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(18, 18, 18)
      .addComponent(jRadioCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(33, 33, 33)
      .addComponent(jFldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
      .addComponent(jFldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addContainerGap(13, Short.MAX_VALUE))
  );
  jPanel1Layout.setVerticalGroup(
    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPanel1Layout.createSequentialGroup()
      .addGap(5, 5, 5)
      .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jRadioCpf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(jRadioCnpj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jFldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jFldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
      .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
  );

  jPnlNorte.add(jPanel1);
  jPanel1.setBounds(20, 230, 530, 40);

  jPnlEdit.add(jPnlNorte, java.awt.BorderLayout.CENTER);

  JPnlSul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
  JPnlSul.setPreferredSize(new java.awt.Dimension(0, 60));

  jBtGravar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ok-icon.png"))); // NOI18N
  jBtGravar.setText("Gravar");
  jBtGravar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtGravarActionPerformed(evt);
    }
  });
  jBtGravar.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jBtGravarKeyPressed(evt);
    }
  });

  jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtCancelar.setText("Cancelar");
  jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtCancelarActionPerformed(evt);
    }
  });
  jBtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jBtCancelarKeyPressed(evt);
    }
  });

  jLabelAcao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
  jLabelAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
  jLabelAcao.setText("jLabel6");
  jLabelAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

  javax.swing.GroupLayout JPnlSulLayout = new javax.swing.GroupLayout(JPnlSul);
  JPnlSul.setLayout(JPnlSulLayout);
  JPnlSulLayout.setHorizontalGroup(
    JPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(JPnlSulLayout.createSequentialGroup()
      .addGap(8, 8, 8)
      .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(120, 120, 120)
      .addComponent(jLabelAcao, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
      .addGap(136, 136, 136)
      .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addContainerGap())
  );
  JPnlSulLayout.setVerticalGroup(
    JPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(JPnlSulLayout.createSequentialGroup()
      .addGroup(JPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(JPnlSulLayout.createSequentialGroup()
          .addGap(8, 8, 8)
          .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGroup(JPnlSulLayout.createSequentialGroup()
          .addGap(10, 10, 10)
          .addGroup(JPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabelAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
      .addGap(46, 46, 46))
  );

  jPnlEdit.add(JPnlSul, java.awt.BorderLayout.SOUTH);

  jPnlPrincipal.add(jPnlEdit, "card3");

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
      .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGap(1, 1, 1))
  );
  layout.setVerticalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
  );

  pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jFldNomeProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldNomeProprietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldNomeProprietarioActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        jPnlEdit.setVisible(false);
        jPnlBusca.setVisible(true);
        FldPesquisa.requestFocus();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jFldRntrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldRntrcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldRntrcActionPerformed

    private void jFldNomeProprietarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeProprietarioKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldRntrc.requestFocus();
        }
    }//GEN-LAST:event_jFldNomeProprietarioKeyPressed

    private void jLabel7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel7KeyPressed


    }//GEN-LAST:event_jLabel7KeyPressed

    private void jFldRntrcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRntrcKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jCmbBxTpPropietario.requestFocus();
        }
    }//GEN-LAST:event_jFldRntrcKeyPressed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        Date date = new Date();
        SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
        String TipoPropriedade = null, sPROP_TIPO = null, sPROP_CODTP = null;

        if ((tag_acao == "1") && (VerificaField() == true)) {

            try {
                if (jCmbBxTpPropietario.getSelectedItem().equals("TAC – Agregado")) {
                    sPROP_TIPO = "TAC – Agregado";
                    sPROP_CODTP = "0";
                } else if (jCmbBxTpPropietario.getSelectedItem().toString().equals("TAC Independente")) {
                    sPROP_TIPO = "TAC Independente";
                    sPROP_CODTP = "1";
                } else if (jCmbBxTpPropietario.getSelectedItem().toString().equals("Outros")) {
                    sPROP_TIPO = "Outros";
                    sPROP_CODTP = "2";
                }

                Inserir(Integer.parseInt(jFldCodProprietario.getText()), jFldNomeProprietario.getText().toUpperCase(), jFldRntrc.getText().toUpperCase(),
                        sPROP_CODTP, sPROP_TIPO, jCmbBxUF.getSelectedItem().toString(), util.ExtraiNumeros(jFldCPF.getText()), jFldCNPJ.getText(), jFldInsEst.getText(),
                        tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "1");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error Inserir \n " + e.getLocalizedMessage());
            }
        }

        if ((tag_acao == "2") && (VerificaField() == true)) {
            try {

                if (jCmbBxTpPropietario.getSelectedItem().equals("TAC – Agregado")) {
                    sPROP_TIPO = "TAC – Agregado";
                    sPROP_CODTP = "0";
                } else if (jCmbBxTpPropietario.getSelectedItem().toString().equals("TAC Independente")) {
                    sPROP_TIPO = "TAC Independente";
                    sPROP_CODTP = "1";
                } else if (jCmbBxTpPropietario.getSelectedItem().toString().equals("Outros")) {
                    sPROP_TIPO = "Outros";
                    sPROP_CODTP = "2";
                }
                //     
                Alterar(Integer.parseInt(jFldCodProprietario.getText()), jFldNomeProprietario.getText().toUpperCase(), jFldRntrc.getText().toUpperCase(),
                        sPROP_CODTP, sPROP_TIPO, jCmbBxUF.getSelectedItem().toString(), util.ExtraiNumeros(jFldCPF.getText()), util.ExtraiNumeros(jFldCNPJ.getText()), jFldInsEst.getText(),
                        tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "1");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error Alterar \n" + e.getLocalizedMessage());
            }
        }

        if ((tag_acao == "3") && (VerificaField() == true)) {
            try {
                Deletar(Integer.parseInt(jFldCodProprietario.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");

            } catch (SQLException ex) {
                Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        // TODO add your handling code here:
        selecionada = jTablePrincipal.getSelectedRow();
        if (evt.getClickCount() == 2) {

            if (selecionada == -1) {
                return;
            } else {

                tag_acao = "2";
                jLabelAcao.setText("Alterar");
                jPnlBusca.setVisible(false);
                jPnlEdit.setVisible(true);
                CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());

            }
        }
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jBtInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInserirActionPerformed
//        if(util.VerificarPermissao("01.24.01", tabusu.getCodigo()) == true){
        jPnlBusca.setVisible(false);
        jPnlEdit.setVisible(true);
        jLabelAcao.setText("Inserir");
        LimpaField();
        tag_acao = "1";
        try {
            BuscaCodigoMaximo();
        } catch (SQLException ex) {
            Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
        }
        jFldNomeProprietario.requestFocus();
        //      } else{
        //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //  }

    }//GEN-LAST:event_jBtInserirActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        //if(util.VerificarPermissao("01.24.02", tabusu.getCodigo()) == true){

        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            LimpaField();
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            tag_acao = "2";
            jLabelAcao.setText("Alterar");
            jFldNomeProprietario.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado!");
        }
        //} else{
        //    JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //}


    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
//        if(util.VerificarPermissao("01.24.03", tabusu.getCodigo()) == true){
        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jLabelAcao.setText("Excluir");
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            tag_acao = "3";
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                Date date = new Date();
                SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    Deletar(Integer.parseInt(jFldCodProprietario.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");

                } catch (SQLException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jBtCancelar.doClick();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado!");
        }
        //      } else{
        //      JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //    }

    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o total de linhas da tabela for maior que 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Seleciona a ultima linha
            jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
            //Seta a value da barra de rolagem para acompanhar a linha selecionada
            jScrollPane.getVerticalScrollBar().setValue(jScrollPane.getVerticalScrollBar().getMaximum());
            jBtPrimeiro.setEnabled(true);
            jBtAnterior.setEnabled(true);
            jBtProximo.setEnabled(false);
            jBtUltimo.setEnabled(false);
        }
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o numeros de linhas da tabela for maior que zero
        if (jTablePrincipal.getRowCount() > 0) {
            //Se a linha selecionada for diferente de -1 e do total de linhas - 1
            if (selecionada != -1 && selecionada != jTablePrincipal.getRowCount() - 1) {
                //Foca na barra de rolagem da tabela
                jScrollPane.requestFocus();
                //Selecionada a proxima linha
                jTablePrincipal.setRowSelectionInterval(selecionada + 1, selecionada + 1);
                //Seta a value da barra de rolagem para que acompanhe a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
                //Se a linha selecionada tiver o mesmo valor do total de linhas da tabela -1
            } else if (selecionada == jTablePrincipal.getRowCount() - 1) {
                //selecionada a ultima linha
                jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(false);
                jBtUltimo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Verifica se a tabela possui mais de 0 linhas
        if (jTablePrincipal.getRowCount() > 0) {
            //se a selecionada for diferente de -1  e 0
            if (selecionada != -1 && selecionada != 0) {
                //Foca a barra de rolagem
                jScrollPane.requestFocus();
                //Seleciona a linha anterior
                jTablePrincipal.setRowSelectionInterval(selecionada - 1, selecionada - 1);
                //Seta a value da barra de rolagem para acompanhar a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);

                //Se a linha selecionada for igual a zero
            } else if (selecionada == 0) {
                //seta as linhas e a os botoes
                jTablePrincipal.setRowSelectionInterval(0, 0);
                jBtPrimeiro.setEnabled(false);
                jBtAnterior.setEnabled(false);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        //Se o numero de linhas da tabela for 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Foca a barra de rolagem
            jScrollPane.requestFocus();
            //Foca na tabela
            jTablePrincipal.requestFocus();
            //Seta a value da barra de rolagem para 1
            jScrollPane.getVerticalScrollBar().setValue(1);
            //seleciona a primeira linha
            jTablePrincipal.addRowSelectionInterval(0, 0);
            //habilita e desablita dos respectivos botões
            jBtPrimeiro.setEnabled(false);
            jBtAnterior.setEnabled(false);
            jBtProximo.setEnabled(true);
            jBtUltimo.setEnabled(true);
        }
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jComboBoxPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPesquisaActionPerformed

    private void jFldNomeProprietarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeProprietarioKeyReleased

    }//GEN-LAST:event_jFldNomeProprietarioKeyReleased

    private void jFldRntrcKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRntrcKeyReleased

    }//GEN-LAST:event_jFldRntrcKeyReleased

    private void jFldCodProprietarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodProprietarioKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {

        }
    }//GEN-LAST:event_jFldCodProprietarioKeyPressed

    private void jComboBoxPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaItemStateChanged
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxPesquisaItemStateChanged

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

    }//GEN-LAST:event_formInternalFrameClosed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            dispose();

        }
    }//GEN-LAST:event_formKeyPressed

    private void jComboBoxPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jComboBoxOrdem.requestFocus();

        }


    }//GEN-LAST:event_jComboBoxPesquisaKeyPressed

    private void jTablePrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePrincipalKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            selecionada = jTablePrincipal.getSelectedRow();
            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jTablePrincipalKeyPressed

    private void jBtGravarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtGravarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_RIGHT) {
            jBtCancelar.requestFocus();
        }
    }//GEN-LAST:event_jBtGravarKeyPressed

    private void jBtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtCancelarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtCancelar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_LEFT) {
            jBtGravar.requestFocus();
        }
    }//GEN-LAST:event_jBtCancelarKeyPressed

    private void jScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneMouseClicked
        if (evt.getClickCount() == 2) {

            if (evt.getClickCount() == -1) {
                return;
            }

            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jScrollPaneMouseClicked

    private void jCmbBxTpPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxTpPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxTpPropietarioActionPerformed

    private void jCmbBxUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxUFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxUFActionPerformed

    private void jComboBoxOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOrdemItemStateChanged
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxOrdemItemStateChanged

    private void jComboBoxOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOrdemActionPerformed

    private void jComboBoxOrdemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxOrdemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            jTablePrincipal.requestFocus();
            if (jTablePrincipal.getRowCount() > 0) {
                jTablePrincipal.addRowSelectionInterval(0, 0);
            }
        }
    }//GEN-LAST:event_jComboBoxOrdemKeyPressed

    private void jCmbBxTpPropietarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxTpPropietarioKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jCmbBxUF.requestFocus();
        }
    }//GEN-LAST:event_jCmbBxTpPropietarioKeyPressed

    private void jCmbBxUFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxUFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldInsEst.requestFocus();
        }
    }//GEN-LAST:event_jCmbBxUFKeyPressed

    private void jFldCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCNPJActionPerformed

    private void jFldCNPJKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.requestFocus();

        }
    }//GEN-LAST:event_jFldCNPJKeyPressed

    private void jFldCNPJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCNPJKeyReleased

    private void jFldInsEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldInsEstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldInsEstActionPerformed

    private void jFldInsEstKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldInsEstKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldCPF.requestFocus();

        }
    }//GEN-LAST:event_jFldInsEstKeyPressed

    private void jFldInsEstKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldInsEstKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldInsEstKeyReleased

    private void jFldCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCPFActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jFldCPFActionPerformed

    private void jFldCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCPFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.requestFocus();
        }
    }//GEN-LAST:event_jFldCPFKeyPressed

    private void jFldCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCPFKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCPFKeyReleased

    private void FldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FldPesquisaActionPerformed

    private void FldPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FldPesquisaFocusLost
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_FldPesquisaFocusLost

    private void FldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FldPesquisaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jComboBoxPesquisa.requestFocus();

        }
    }//GEN-LAST:event_FldPesquisaKeyPressed

    private void jComboBoxPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaFocusLost
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxPesquisaFocusLost

    private void jComboBoxOrdemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxOrdemFocusLost
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxOrdemFocusLost

    private void jFldCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCPFFocusLost
        try {
            if (util.VerificaCPF(jFldCPF.getText()) == true) {
                jFldCPF.setText(util.FormataCpf(jFldCPF.getText()));
            } else {
                JOptionPane.showMessageDialog(null, "CPF inválido!");
            }

        } catch (ParseException ex) {
            Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jFldCPFFocusLost

    private void jFldCNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCNPJFocusLost

        if (util.VerificaCNPJ(jFldCNPJ.getText()) == true) {
            jFldCNPJ.setText(util.FormataCnpj(jFldCNPJ.getText()));
        } else {
            JOptionPane.showMessageDialog(null, "CNPJ inválido!");
        }


    }//GEN-LAST:event_jFldCNPJFocusLost

    private void jFldCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCPFKeyTyped
        // TODO add your handling code here:
        String Caracteres = "0123456789";
        if (!Caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldCPFKeyTyped

    private void jFldCNPJKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyTyped
        // TODO add your handling code here:
        String Caracteres = "0123456789";
        if (!Caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldCNPJKeyTyped

    private void jFldInsEstKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldInsEstKeyTyped
        // TODO add your handling code here:
        String Caracteres = "0123456789";
        if (!Caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldInsEstKeyTyped

    private void jRadioCnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCnpjActionPerformed
       // jLblDocumento.setText("CNPJ");
        jFldCPF.setVisible(false);
        jFldCNPJ.setVisible(true);
    }//GEN-LAST:event_jRadioCnpjActionPerformed

    private void jRadioCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCpfActionPerformed
       //  jLblDocumento.setText("CPF");
        jFldCNPJ.setVisible(false);
        jFldCPF.setVisible(true);
        
    }//GEN-LAST:event_jRadioCpfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */


 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaProprietario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaProprietario.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField FldPesquisa;
  private javax.swing.JPanel JPnlSul;
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.JButton jBtAlterar;
  private javax.swing.JButton jBtAnterior;
  private javax.swing.JButton jBtCancelar;
  private javax.swing.JButton jBtExcluir;
  private javax.swing.JButton jBtGravar;
  private javax.swing.JButton jBtInserir;
  private javax.swing.JButton jBtPrimeiro;
  private javax.swing.JButton jBtProximo;
  private javax.swing.JButton jBtUltimo;
  private javax.swing.JComboBox<String> jCmbBxTpPropietario;
  private javax.swing.JComboBox<String> jCmbBxUF;
  private javax.swing.JComboBox<String> jComboBoxOrdem;
  private javax.swing.JComboBox<String> jComboBoxPesquisa;
  private javax.swing.JTextField jFldCNPJ;
  private javax.swing.JTextField jFldCPF;
  private javax.swing.JTextField jFldCodProprietario;
  private javax.swing.JTextField jFldInsEst;
  private javax.swing.JTextField jFldNomeProprietario;
  private javax.swing.JTextField jFldRntrc;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel18;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel23;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabelAcao;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPnlBotao;
  public javax.swing.JPanel jPnlBusca;
  public javax.swing.JPanel jPnlEdit;
  private javax.swing.JPanel jPnlNorte;
  private javax.swing.JPanel jPnlPrincipal;
  private javax.swing.JRadioButton jRadioCnpj;
  private javax.swing.JRadioButton jRadioCpf;
  public javax.swing.JScrollPane jScrollPane;
  public javax.swing.JTable jTablePrincipal;
  // End of variables declaration//GEN-END:variables

    private void limpatabelaVeiculo() {
        DefaultTableModel tableModel = (DefaultTableModel) jTablePrincipal.getModel();
        tableModel.setNumRows(0);
    }

    public void CarregaTudo() {
        try {
            Conectar.ConectarBD();
            limpatabelaVeiculo();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_PROPRIETARIO where rgevento <> '3'");
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    Conectar.result.getInt("COD_PROPRIETARIO"),
                    Conectar.result.getString("PROP_NOME"),
                    Conectar.result.getString("PROP_RNTRC"),
                    Conectar.result.getString("PROP_CODTP"),
                    Conectar.result.getString("PROP_TIPO"),
                    Conectar.result.getString("PROP_UF"),
                    util.FormataCpf(Conectar.result.getString("PROP_CPF")),
                    util.FormataCnpj(Conectar.result.getString("PROP_CNPJ")),
                    Conectar.result.getString("PROP_IE"),});

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro Inserir \n" + e.getLocalizedMessage());
        }
    }

    public void BuscaCodigoMaximo() throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            Conectar.result = Conectar.stam.executeQuery("select max(COD_PROPRIETARIO) + 1 from MDFE_CAD_PROPRIETARIO ");
            while (Conectar.result.next()) {

                codmax = Conectar.result.getInt(1);
                if (codmax <= 0) {
                    codmax = 1;
                }
                jFldCodProprietario.setText(Integer.toString(codmax));

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO \n" + e.getLocalizedMessage());

        }
    }

    public void BuscaPorParametro() {
        try {
            sql = "";
            ordnar = "";

            if (jComboBoxPesquisa.getSelectedItem().equals("Código")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";//JOptionPane.showMessageDialog(null, "Não tem parâmetro de pesquisa");
                } else {
                    sql = " AND COD_PROPRIETARIO = " + FldPesquisa.getText();
                }

            } else if (jComboBoxPesquisa.getSelectedItem().equals("Nome")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";
                } else {
                    sql = " AND PROP_NOME LIKE '" + FldPesquisa.getText() + "%'";
                }
            } else if (jComboBoxPesquisa.getSelectedItem().equals("CPF")) {
                if (FldPesquisa.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Não tem parâmetro de pesquisa!");
                    sql = "";
                } else {
                    sql = " AND PROP_CPF = '" + FldPesquisa.getText() + "'";
                }
            } else if (jComboBoxPesquisa.getSelectedItem().equals("CNPJ")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";
                    JOptionPane.showMessageDialog(null, "Não tem parâmetro de pesquisa!");
                    Conectar.DesconectarBD();
                } else {
                    sql = " AND PROP_CNPJ = '" + FldPesquisa.getText() + "'";
                }
            }

            if (jComboBoxOrdem.getSelectedItem().equals("Ordem")) {
                ordnar = "COD_PROPRIETARIO";
            } else if (jComboBoxOrdem.getSelectedItem().equals("Descrição")) {
                ordnar = "PROP_NOME";
            }

            System.out.println("select * from MDFE_CAD_PROPRIETARIO where (rgevento <> '3' ) " + sql + "   order by " + ordnar);
            limpatabelaVeiculo();
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_PROPRIETARIO where (rgevento <> '3' ) " + sql + " order by " + ordnar);
            while (Conectar.result.next()) {

                dtm.addRow(new Object[]{
                    Conectar.result.getInt("COD_PROPRIETARIO"),
                    Conectar.result.getString("PROP_NOME"),
                    Conectar.result.getString("PROP_RNTRC"),
                    Conectar.result.getString("PROP_CODTP"),
                    Conectar.result.getString("PROP_TIPO"),
                    Conectar.result.getString("PROP_UF"),
                    util.FormataCpf(Conectar.result.getString("PROP_CPF")),
                    util.FormataCnpj(Conectar.result.getString("PROP_CNPJ")),
                    Conectar.result.getString("PROP_IE"),});
            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());

        }
    }

    public void LimpaField() {

        jFldCodProprietario.setText("");
        jFldNomeProprietario.setText("");
        jFldRntrc.setText("");
        jCmbBxTpPropietario.setSelectedIndex(-1);
        jCmbBxUF.setSelectedIndex(-1);
        jFldInsEst.setText("");
        
        jRadioCpf.setSelected(true);
        jFldCNPJ.setVisible(false);
        jFldCPF.setVisible(true);
        jFldCNPJ.setText("");
        jFldCPF.setText("");

    }

    public void DefinirFormulario() {
        setSize(600, 450);
        setMinimumSize(new Dimension(600, 450));
        jPnlPrincipal.setSize(600, 450);
        jPnlBusca.setSize(600, 450);
        jPnlEdit.setSize(600, 450);
        jTablePrincipal.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        /*jTablePropietario.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 11));  
        jTablePropietario.getTableHeader().setOpaque(false);
        jTablePropietario.getTableHeader().setForeground(Color.white);
        jTablePropietario.getTableHeader().setBackground(Color.blue);*/
        MeuRenderizador meurenderizador = new MeuRenderizador();

        for (int col = 0; col < jTablePrincipal.getColumnCount(); col++) {
            jTablePrincipal.getColumnModel().getColumn(col).setHeaderRenderer(meurenderizador);
        }

        jTablePrincipal.getColumnModel().getColumn(0).setMaxWidth(60);
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(1).setMaxWidth(600);
        jTablePrincipal.getColumnModel().getColumn(1).setMinWidth(550);

        jTablePrincipal.getColumnModel().getColumn(2).setMaxWidth(400);
        jTablePrincipal.getColumnModel().getColumn(2).setMinWidth(200);

        jTablePrincipal.getColumnModel().getColumn(3).setMaxWidth(100);
        jTablePrincipal.getColumnModel().getColumn(3).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(4).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(4).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(30);

        jTablePrincipal.getColumnModel().getColumn(6).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(6).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(7).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(7).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(8).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(8).setMinWidth(150);
        
        jFldCNPJ.setVisible(false);

        //Adiciona as teclas ALT +  de atalho para os seguintes botões
        jBtInserir.setMnemonic(java.awt.event.KeyEvent.VK_I);
        jBtAlterar.setMnemonic(java.awt.event.KeyEvent.VK_A);
        jBtExcluir.setMnemonic(java.awt.event.KeyEvent.VK_E);
        jBtGravar.setMnemonic(java.awt.event.KeyEvent.VK_G);
        jBtCancelar.setMnemonic(java.awt.event.KeyEvent.VK_C);

    }

    public void CarregaCampoEdit(String CODIGO) {
        try {
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_PROPRIETARIO where(COD_PROPRIETARIO = '" + CODIGO + "') and (rgevento <> '3') ");
            while (Conectar.result.next()) {
                jFldCodProprietario.setText(Conectar.result.getString("COD_PROPRIETARIO"));
                jFldNomeProprietario.setText(Conectar.result.getString("PROP_NOME"));
                jFldRntrc.setText(Conectar.result.getString("PROP_RNTRC"));

                if (Conectar.result.getString("PROP_TIPO").equals("TAC – Agregado")) {
                    jCmbBxTpPropietario.setSelectedIndex(0);
                } else if (Conectar.result.getString("PROP_TIPO").equals("TAC Independente")) {
                    jCmbBxTpPropietario.setSelectedIndex(1);
                } else if (Conectar.result.getString("PROP_TIPO").equals("Outros")) {
                    jCmbBxTpPropietario.setSelectedIndex(2);
                }

                jCmbBxUF.setSelectedItem(Conectar.result.getString("PROP_UF"));
                jFldInsEst.setText(Conectar.result.getString("PROP_IE"));
                jFldCNPJ.setText(util.FormataCnpj(Conectar.result.getString("PROP_CNPJ")));
                jFldCPF.setText(util.FormataCpf(Conectar.result.getString("PROP_CPF")));

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro CarregaEdit...\n" + e.getLocalizedMessage());
        }

    }

    public void Inserir(Integer COD_PROPRIETARIO, String PROP_NOME, String PROP_RNTRC, String PROP_CODTP, String PROP_TIPO,
            String PROP_UF, String PROP_CPF, String PROP_CNPJ, String PROP_IE, Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO) throws SQLException, InstantiationException, IllegalAccessException {

        Conectar.ConectarBD();

        System.out.println("insert into MDFE_CAD_PROPRIETARIO "
                + " (COD_PROPRIETARIO, PROP_NOME, PROP_RNTRC, PROP_CODTP, PROP_TIPO, PROP_UF, PROP_CPF, PROP_CNPJ, PROP_IE, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO)"
                + " values(" + COD_PROPRIETARIO + ", '" + PROP_NOME + "', '" + PROP_RNTRC + "'," + PROP_CODTP + ",'" + PROP_TIPO + "', '" + PROP_UF + "', '" + PROP_CPF + "', '" + PROP_CNPJ + "', '" + PROP_IE
                + "', " + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "')");

        Conectar.stam.executeUpdate("insert into MDFE_CAD_PROPRIETARIO "
                + " (COD_PROPRIETARIO, PROP_NOME, PROP_RNTRC, PROP_CODTP, PROP_TIPO, PROP_UF, PROP_CPF, PROP_CNPJ, PROP_IE, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO)"
                + " values(" + COD_PROPRIETARIO + ", '" + PROP_NOME + "', '" + PROP_RNTRC + "'," + PROP_CODTP + ",'" + PROP_TIPO + "', '" + PROP_UF + "', '" + PROP_CPF + "', '" + PROP_CNPJ + "', '" + PROP_IE
                + "', " + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "')");

        
        CarregaTudo();
        jPnlBusca.setVisible(true);
        jPnlEdit.setVisible(false);
        int resposta = JOptionPane.showConfirmDialog(null, "Registro inserido com sucesso.\n Deseja inserir outro?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            jBtInserir.doClick();
        } else {
           FldPesquisa.requestFocus();
        }

    }

    public void Alterar(Integer COD_PROPRIETARIO, String PROP_NOME, String PROP_RNTRC, String PROP_CODTP, String PROP_TIPO,
            String PROP_UF, String PROP_CPF, String PROP_CNPJ, String PROP_IE, Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO)
            throws SQLException, InstantiationException, IllegalAccessException {
        try {

            Conectar.ConectarBD();
            System.out.println("update  MDFE_CAD_PROPRIETARIO set "
                    + " PROP_NOME  = '" + PROP_NOME + "',"
                    + " PROP_RNTRC = '" + PROP_RNTRC + "',"
                    + " PROP_CODTP =  " + PROP_CODTP + ","
                    + " PROP_TIPO  = '" + PROP_TIPO + "',"
                    + " PROP_UF    = '" + PROP_UF + "',"
                    + " PROP_CPF   = '" + PROP_CPF + "',"
                    + " PROP_CNPJ  = '" + PROP_CNPJ + "',"
                    + " PROP_IE    = '" + PROP_IE + "',"
                    + " RGCODUSU   =  " + RGCODUSU + ","
                    + " RGUSUARIO  = '" + RGUSUARIO + "',"
                    + " RGDATA     = '" + RGDATA + "',"
                    + " RGEVENTO   = '" + RGEVENTO + "'"
                    + " where COD_PROPRIETARIO = " + COD_PROPRIETARIO);

            Conectar.stam.executeUpdate("update  MDFE_CAD_PROPRIETARIO set "
                    + " PROP_NOME  = '" + PROP_NOME + "',"
                    + " PROP_RNTRC = '" + PROP_RNTRC + "',"
                    + " PROP_CODTP =  " + PROP_CODTP + ","
                    + " PROP_TIPO  = '" + PROP_TIPO + "',"
                    + " PROP_UF    = '" + PROP_UF + "',"
                    + " PROP_CPF   = '" + PROP_CPF + "',"
                    + " PROP_CNPJ  = '" + PROP_CNPJ + "',"
                    + " PROP_IE    = '" + PROP_IE + "',"
                    + " RGCODUSU   =  " + RGCODUSU + ","
                    + " RGUSUARIO  = '" + RGUSUARIO + "',"
                    + " RGDATA     = '" + RGDATA + "',"
                    + " RGEVENTO   = '" + RGEVENTO + "'"
                    + " where COD_PROPRIETARIO = " + COD_PROPRIETARIO);

            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
            Conectar.DesconectarBD();
            FldPesquisa.requestFocus();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir...\n" + ex.getLocalizedMessage());
            System.out.println("Não foi salvo o produto\n" + ex.getLocalizedMessage());
        }
    }

    public boolean VerificaCampo() {

        if (jFldNomeProprietario.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo do Proprietario vazio!");
            return false;
        }

        if (jFldRntrc.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campo do RNTRC vazio!");
            return false;
        }
        
        
        if( (jFldCPF.getText().equals("")) & (jFldCNPJ.getText().equals("")) ) {
            JOptionPane.showMessageDialog(null, "Os Campos do CPF e CNPJ estão  vazios!");
            return false;
        }
        
        return true;
    }

    public void Deletar(Integer COD_PROPRIETARIO, Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO)
            throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            System.out.println("update MDFE_CAD_PROPRIETARIO set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where COD_PROPRIETARIO = " + COD_PROPRIETARIO);

            Conectar.stam.executeUpdate("update MDFE_CAD_PROPRIETARIO set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where COD_PROPRIETARIO = " + COD_PROPRIETARIO);

            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Deletado com sucesso!");
            Conectar.DesconectarBD();
            FldPesquisa.requestFocus();
        } catch (SQLException ex) {
            System.out.println("Não foi salvo o produto\n" + ex.getLocalizedMessage());
            Conectar.con.rollback();
        }

    }

    public void CarregaUF() throws SQLException, InstantiationException, IllegalAccessException {
        Conectar.ConectarBD();
        Conectar.result = Conectar.stam.executeQuery(" Select * from ESTADOS ");
        while (Conectar.result.next()) {
            jCmbBxUF.addItem(Conectar.result.getString("SIGLA"));

        }
    }

    public boolean VerificaField() {
      
        if((jFldInsEst.getText().length() < 9) || (jFldInsEst.getText().length() > 14)){
          JOptionPane.showMessageDialog(null, "Inscrição estadual deve ter 14 caracteres!");
          jFldInsEst.requestFocus();
          return false;
        }
        if (jFldNomeProprietario.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Nome do Proprietário não preenchido!");
            jFldNomeProprietario.requestFocus();
            return false;
        } else if (jFldRntrc.getText().length() < 8) {
            JOptionPane.showMessageDialog(null, "Rntrc não preenchido !\n"
                                              + "Campo de 8 digitos!");
            jFldRntrc.requestFocus();
            return false;
        } else if (jCmbBxTpPropietario.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Tipo de Propietário não preenchido!");
            jCmbBxTpPropietario.requestFocus();
            return false;
        } else if (jCmbBxUF.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "UF não preenchido!");
            jCmbBxUF.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public void SairEsc() {
        KeyStroke ks = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, true);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks, "esc");
        getRootPane().getActionMap().put("esc", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if (jPnlBusca.isVisible() == true) {
                    dispose();
                } else if (jPnlEdit.isVisible() == true) {
                    jPnlEdit.setVisible(false);
                    jPnlBusca.setVisible(true);
                    FldPesquisa.requestFocus();
                }
            }
        });
    }

    public void atualiza() throws SQLException, InstantiationException, IllegalAccessException {

        Conectar.ConectarBD();

        Conectar.stam.executeUpdate("CREATE TABLE MDFE_CAD (\n"
                + "    COD_AGENCIA  INTEGER NOT NULL,\n"
                + "    CNPJ         VARCHAR(14),\n"
                + "    NOME         VARCHAR(60)\n"
                + ");");

    }

    /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            // table.getTableHeader().setFont(new Font("Dialog", 11, Font.BOLD));
            setFont(getFont().deriveFont(Font.BOLD));
            setOpaque(false);
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setFont(getFont().deriveFont(Font.BOLD));
            setHorizontalAlignment(SwingConstants.LEFT);
            setText(value.toString());

            return this;
        }

    }

}
