/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastro;

import ClassesFirebird.Tabusu;
import ConexaoDB.Conectar;
import Utilitarios.LimitaField;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.sql.SQLException;
import java.lang.String;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.lang.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Israel
 */
public class TelaResponsavelPagamento extends javax.swing.JInternalFrame {

    public int codmax, selecionada;
    String sql, ordnar, situacao, tag_acao;
    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
    SimpleDateFormat DtEmissao = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat DtDia = new SimpleDateFormat("dd/MM/yyyy");
    Utilitarios util = new Utilitarios();
    Tabusu tabusu = new Tabusu();

    public TelaResponsavelPagamento() throws SQLException, InstantiationException, IllegalAccessException {
        initComponents();
        DefinirFormulario();
        CarregaTudo();
        SairEsc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPnlPrincipal = new javax.swing.JPanel();
        jPnlBusca = new javax.swing.JPanel();
        jLblPesquisa = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jComboBoxPesquisa = new javax.swing.JComboBox<>();
        jPnlBotao = new javax.swing.JPanel();
        jBtPrimeiro = new javax.swing.JButton();
        jBtAnterior = new javax.swing.JButton();
        jBtProximo = new javax.swing.JButton();
        jBtUltimo = new javax.swing.JButton();
        jBtInserir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jComboBoxOrdem = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        FldPesquisa = new javax.swing.JTextField();
        jPnlEdit = new javax.swing.JPanel();
        jPnlNorte = new javax.swing.JPanel();
        jFldFone = new javax.swing.JTextField();
        jFldCodForVale = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jFldEndereco = new javax.swing.JTextField();
        jFldNomeForVale = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jFldCNPJ = new javax.swing.JTextField();
        jRadioCpf = new javax.swing.JRadioButton();
        jRadioCnpj = new javax.swing.JRadioButton();
        jFldCPF = new javax.swing.JTextField();
        jPnlSul = new javax.swing.JPanel();
        jBtGravar = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jLabelAcao = new javax.swing.JLabel();

        setTitle("Cadastro de Responsáveis por Pagamento de Vale");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPnlPrincipal.setLayout(new java.awt.CardLayout());

        jLblPesquisa.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLblPesquisa.setText("Código:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("Pequisar por:");

        jScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPaneMouseClicked(evt);
            }
        });

        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Código", "Responsável pela Pagamento", "CPF", "CNPJ", "Endereço", "Fone", "Cód. Usuário", "Usuário", "Data", "Evento"
            }
        ){
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            };
        }

    );
    jTablePrincipal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    jTablePrincipal.setDragEnabled(true);
    jTablePrincipal.getTableHeader().setReorderingAllowed(false);
    jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTablePrincipalMouseClicked(evt);
        }
    });
    jTablePrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTablePrincipalKeyPressed(evt);
        }
    });
    jScrollPane.setViewportView(jTablePrincipal);

    jComboBoxPesquisa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jComboBoxPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome", "CNPJ" }));
    jComboBoxPesquisa.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBoxPesquisaItemStateChanged(evt);
        }
    });
    jComboBoxPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jComboBoxPesquisaFocusLost(evt);
        }
    });
    jComboBoxPesquisa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBoxPesquisaActionPerformed(evt);
        }
    });
    jComboBoxPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jComboBoxPesquisaKeyPressed(evt);
        }
    });

    jPnlBotao.setLayout(new java.awt.GridLayout(1, 0));

    jBtPrimeiro.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Primeiro.png"))); // NOI18N
    jBtPrimeiro.setText("Primeiro");
    jBtPrimeiro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtPrimeiro.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtPrimeiro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtPrimeiroActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtPrimeiro);

    jBtAnterior.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Anterior.png"))); // NOI18N
    jBtAnterior.setText("Anterior");
    jBtAnterior.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtAnterior.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtAnterior.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtAnteriorActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtAnterior);

    jBtProximo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Proximo.png"))); // NOI18N
    jBtProximo.setText("Próximo");
    jBtProximo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtProximo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtProximo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtProximo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtProximoActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtProximo);

    jBtUltimo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ultimo.png"))); // NOI18N
    jBtUltimo.setText("Último");
    jBtUltimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtUltimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtUltimo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtUltimoActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtUltimo);

    jBtInserir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/file_add.png"))); // NOI18N
    jBtInserir.setText("Inserir");
    jBtInserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtInserir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtInserir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtInserir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtInserirActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtInserir);

    jBtAlterar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/text_edit.png"))); // NOI18N
    jBtAlterar.setText("Alterar");
    jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtAlterarActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtAlterar);

    jBtExcluir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/deletar.png"))); // NOI18N
    jBtExcluir.setText("Excluir");
    jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtExcluirActionPerformed(evt);
        }
    });
    jPnlBotao.add(jBtExcluir);

    jComboBoxOrdem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    jComboBoxOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Descrição" }));
    jComboBoxOrdem.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jComboBoxOrdemItemStateChanged(evt);
        }
    });
    jComboBoxOrdem.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            jComboBoxOrdemFocusLost(evt);
        }
    });
    jComboBoxOrdem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jComboBoxOrdemActionPerformed(evt);
        }
    });
    jComboBoxOrdem.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jComboBoxOrdemKeyPressed(evt);
        }
    });

    jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel6.setText("Ordem:");

    FldPesquisa.setDocument(new LimitaField(100, 0)
    );
    FldPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            FldPesquisaFocusLost(evt);
        }
    });
    FldPesquisa.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            FldPesquisaActionPerformed(evt);
        }
    });
    FldPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            FldPesquisaKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            FldPesquisaKeyReleased(evt);
        }
    });

    javax.swing.GroupLayout jPnlBuscaLayout = new javax.swing.GroupLayout(jPnlBusca);
    jPnlBusca.setLayout(jPnlBuscaLayout);
    jPnlBuscaLayout.setHorizontalGroup(
        jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
            .addGap(10, 10, 10)
            .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLblPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBoxPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jScrollPane)
                .addComponent(jPnlBotao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(10, 10, 10))
    );
    jPnlBuscaLayout.setVerticalGroup(
        jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlBuscaLayout.createSequentialGroup()
            .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLblPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(FldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jComboBoxPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPnlBuscaLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jLabel6)
                    .addGap(2, 2, 2)
                    .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(10, 10, 10)
            .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
            .addGap(5, 5, 5)
            .addComponent(jPnlBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(15, 15, 15))
    );

    jPnlPrincipal.add(jPnlBusca, "card2");

    jPnlEdit.setLayout(new java.awt.BorderLayout());

    jPnlNorte.setPreferredSize(new java.awt.Dimension(580, 260));
    jPnlNorte.setLayout(null);

    jFldFone.setDocument(new LimitaField(20, 0));
    jFldFone.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldFoneActionPerformed(evt);
        }
    });
    jFldFone.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldFoneKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldFoneKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldFoneKeyTyped(evt);
        }
    });
    jPnlNorte.add(jFldFone);
    jFldFone.setBounds(400, 130, 170, 25);

    jFldCodForVale.setBackground(new java.awt.Color(255, 255, 204));
    jFldCodForVale.setFocusable(false);
    jFldCodForVale.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCodForValeActionPerformed(evt);
        }
    });
    jFldCodForVale.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCodForValeKeyPressed(evt);
        }
    });
    jPnlNorte.add(jFldCodForVale);
    jFldCodForVale.setBounds(10, 30, 90, 25);

    jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel4.setText("Responsável");
    jPnlNorte.add(jLabel4);
    jLabel4.setBounds(10, 60, 170, 30);
    jLabel4.getAccessibleContext().setAccessibleDescription("");

    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel5.setText("Código");
    jPnlNorte.add(jLabel5);
    jLabel5.setBounds(10, 10, 50, 30);

    jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel11.setText("Fone");
    jPnlNorte.add(jLabel11);
    jLabel11.setBounds(400, 110, 50, 30);

    jFldEndereco.setDocument(new LimitaField(60, 0)
    );
    jFldEndereco.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldEnderecoActionPerformed(evt);
        }
    });
    jFldEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldEnderecoKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldEnderecoKeyReleased(evt);
        }
    });
    jPnlNorte.add(jFldEndereco);
    jFldEndereco.setBounds(10, 130, 380, 25);

    jFldNomeForVale.setDocument(new LimitaField(60, 0));
    jFldNomeForVale.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldNomeForValeActionPerformed(evt);
        }
    });
    jFldNomeForVale.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldNomeForValeKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldNomeForValeKeyReleased(evt);
        }
    });
    jPnlNorte.add(jFldNomeForVale);
    jFldNomeForVale.setBounds(10, 80, 560, 25);

    jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel7.setText("Endereço");
    jLabel7.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jLabel7KeyPressed(evt);
        }
    });
    jPnlNorte.add(jLabel7);
    jLabel7.setBounds(10, 110, 110, 30);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Identificação do Responsável", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N

    jFldCNPJ.setDocument(new LimitaField(18, 0));
    jFldCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldCNPJFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldCNPJFocusLost(evt);
        }
    });
    jFldCNPJ.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jFldCNPJActionPerformed(evt);
        }
    });
    jFldCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCNPJKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            jFldCNPJKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldCNPJKeyTyped(evt);
        }
    });

    buttonGroup1.add(jRadioCpf);
    jRadioCpf.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jRadioCpf.setSelected(true);
    jRadioCpf.setText("CPF");
    jRadioCpf.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jRadioCpfItemStateChanged(evt);
        }
    });
    jRadioCpf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRadioCpfActionPerformed(evt);
        }
    });
    jRadioCpf.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jRadioCpfKeyPressed(evt);
        }
    });

    buttonGroup1.add(jRadioCnpj);
    jRadioCnpj.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jRadioCnpj.setText("CNPJ");
    jRadioCnpj.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            jRadioCnpjItemStateChanged(evt);
        }
    });
    jRadioCnpj.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jRadioCnpjKeyPressed(evt);
        }
    });

    jFldCPF.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            jFldCPFFocusGained(evt);
        }
        public void focusLost(java.awt.event.FocusEvent evt) {
            jFldCPFFocusLost(evt);
        }
    });
    jFldCPF.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jFldCPFKeyPressed(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            jFldCPFKeyTyped(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jRadioCpf)
            .addGap(18, 18, 18)
            .addComponent(jRadioCnpj)
            .addGap(18, 18, 18)
            .addComponent(jFldCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jFldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jFldCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jRadioCpf)
                .addComponent(jRadioCnpj)
                .addComponent(jFldCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 5, Short.MAX_VALUE))
    );

    jPnlNorte.add(jPanel1);
    jPanel1.setBounds(10, 170, 560, 50);

    jPnlEdit.add(jPnlNorte, java.awt.BorderLayout.NORTH);

    jPnlSul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPnlSul.setPreferredSize(new java.awt.Dimension(0, 60));

    jBtGravar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ok-icon.png"))); // NOI18N
    jBtGravar.setText("Gravar");
    jBtGravar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtGravarActionPerformed(evt);
        }
    });
    jBtGravar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jBtGravarKeyPressed(evt);
        }
    });

    jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jBtCancelar.setText("Cancelar");
    jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jBtCancelarActionPerformed(evt);
        }
    });
    jBtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jBtCancelarKeyPressed(evt);
        }
    });

    jLabelAcao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabelAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabelAcao.setText("jLabel6");
    jLabelAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

    javax.swing.GroupLayout jPnlSulLayout = new javax.swing.GroupLayout(jPnlSul);
    jPnlSul.setLayout(jPnlSulLayout);
    jPnlSulLayout.setHorizontalGroup(
        jPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlSulLayout.createSequentialGroup()
            .addGap(8, 8, 8)
            .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(130, 130, 130)
            .addComponent(jLabelAcao, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
            .addGap(108, 108, 108)
            .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(8, 8, 8))
    );
    jPnlSulLayout.setVerticalGroup(
        jPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPnlSulLayout.createSequentialGroup()
            .addGap(8, 8, 8)
            .addGroup(jPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPnlSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(6, 6, 6))
    );

    jPnlEdit.add(jPnlSul, java.awt.BorderLayout.SOUTH);

    jPnlPrincipal.add(jPnlEdit, "card3");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFldNomeForValeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldNomeForValeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldNomeForValeActionPerformed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        jPnlEdit.setVisible(false);
        jPnlBusca.setVisible(true);
        FldPesquisa.requestFocus();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jFldEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldEnderecoActionPerformed

    private void jFldNomeForValeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeForValeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldEndereco.requestFocus();
        }
    }//GEN-LAST:event_jFldNomeForValeKeyPressed

    private void jLabel7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel7KeyPressed


    }//GEN-LAST:event_jLabel7KeyPressed

    private void jFldEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldEnderecoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldFone.requestFocus();
        }
    }//GEN-LAST:event_jFldEnderecoKeyPressed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        Date date = new Date();
        SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
        String TipoPropriedade = null, sPROP_TIPO = null, sPROP_CODTP = null;

        if ((tag_acao == "1") && (VerificaField() == true)) {

            try {

                Inserir(Integer.parseInt(jFldCodForVale.getText()), jFldNomeForVale.getText().toUpperCase(), util.ExtraiNumeros(jFldCNPJ.getText()), util.ExtraiNumeros(jFldCPF.getText()), jFldEndereco.getText().toUpperCase(),
                        jFldFone.getText(), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "1");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error Inserir \n " + e.getLocalizedMessage());
            }
        }

        if ((tag_acao == "2") && (VerificaField() == true)) {
            try {
                //     
                Alterar(Integer.parseInt(jFldCodForVale.getText()), jFldNomeForVale.getText().toUpperCase(), util.ExtraiNumeros(jFldCNPJ.getText()), util.ExtraiNumeros(jFldCPF.getText()), jFldEndereco.getText().toUpperCase(),
                        jFldFone.getText(), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "2");

            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error Alterar \n" + e.getLocalizedMessage());
            }
        }

        if ((tag_acao == "3") && (VerificaField() == true)) {
            try {
                Deletar(Integer.parseInt(jFldCodForVale.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");

            } catch (SQLException ex) {
                Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        // TODO add your handling code here:
        selecionada = jTablePrincipal.getSelectedRow();
        if (evt.getClickCount() == 2) {

            if (selecionada == -1) {
                return;
            } else {

                tag_acao = "2";
                jLabelAcao.setText("Alterar");
                jPnlBusca.setVisible(false);
                jPnlEdit.setVisible(true);
                CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());

            }
        }
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jBtInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInserirActionPerformed
//        if(util.VerificarPermissao("01.24.01", tabusu.getCodigo()) == true){
        jPnlBusca.setVisible(false);
        jPnlEdit.setVisible(true);
        jLabelAcao.setText("Inserir");
        LimpaField();
        tag_acao = "1";
        try {
            BuscaCodigoMaximo();
        } catch (SQLException ex) {
            Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
        }
        jFldNomeForVale.requestFocus();
        //      } else{
        //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //  }

    }//GEN-LAST:event_jBtInserirActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        //if(util.VerificarPermissao("01.24.02", tabusu.getCodigo()) == true){

        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            LimpaField();
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            tag_acao = "2";
            jLabelAcao.setText("Alterar");
            jFldNomeForVale.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado!");
        }
        //} else{
        //    JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //}


    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
//        if(util.VerificarPermissao("01.24.03", tabusu.getCodigo()) == true){
        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jLabelAcao.setText("Excluir");
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            tag_acao = "3";
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                Date date = new Date();
                SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    Deletar(Integer.parseInt(jFldCodForVale.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");

                } catch (SQLException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jBtCancelar.doClick();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado!");
        }
        //      } else{
        //      JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //    }

    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o total de linhas da tabela for maior que 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Seleciona a ultima linha
            jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
            //Seta a value da barra de rolagem para acompanhar a linha selecionada
            jScrollPane.getVerticalScrollBar().setValue(jScrollPane.getVerticalScrollBar().getMaximum());
            jBtPrimeiro.setEnabled(true);
            jBtAnterior.setEnabled(true);
            jBtProximo.setEnabled(false);
            jBtUltimo.setEnabled(false);
        }
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o numeros de linhas da tabela for maior que zero
        if (jTablePrincipal.getRowCount() > 0) {
            //Se a linha selecionada for diferente de -1 e do total de linhas - 1
            if (selecionada != -1 && selecionada != jTablePrincipal.getRowCount() - 1) {
                //Foca na barra de rolagem da tabela
                jScrollPane.requestFocus();
                //Selecionada a proxima linha
                jTablePrincipal.setRowSelectionInterval(selecionada + 1, selecionada + 1);
                //Seta a value da barra de rolagem para que acompanhe a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
                //Se a linha selecionada tiver o mesmo valor do total de linhas da tabela -1
            } else if (selecionada == jTablePrincipal.getRowCount() - 1) {
                //selecionada a ultima linha
                jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(false);
                jBtUltimo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Verifica se a tabela possui mais de 0 linhas
        if (jTablePrincipal.getRowCount() > 0) {
            //se a selecionada for diferente de -1  e 0
            if (selecionada != -1 && selecionada != 0) {
                //Foca a barra de rolagem
                jScrollPane.requestFocus();
                //Seleciona a linha anterior
                jTablePrincipal.setRowSelectionInterval(selecionada - 1, selecionada - 1);
                //Seta a value da barra de rolagem para acompanhar a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);

                //Se a linha selecionada for igual a zero
            } else if (selecionada == 0) {
                //seta as linhas e a os botoes
                jTablePrincipal.setRowSelectionInterval(0, 0);
                jBtPrimeiro.setEnabled(false);
                jBtAnterior.setEnabled(false);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed
        //Se o numero de linhas da tabela for 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Foca a barra de rolagem
            jScrollPane.requestFocus();
            //Foca na tabela
            jTablePrincipal.requestFocus();
            //Seta a value da barra de rolagem para 1
            jScrollPane.getVerticalScrollBar().setValue(1);
            //seleciona a primeira linha
            jTablePrincipal.addRowSelectionInterval(0, 0);
            //habilita e desablita dos respectivos botões
            jBtPrimeiro.setEnabled(false);
            jBtAnterior.setEnabled(false);
            jBtProximo.setEnabled(true);
            jBtUltimo.setEnabled(true);
        }
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jComboBoxPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxPesquisaActionPerformed

    private void jFldNomeForValeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNomeForValeKeyReleased

    }//GEN-LAST:event_jFldNomeForValeKeyReleased

    private void jFldEnderecoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldEnderecoKeyReleased

    }//GEN-LAST:event_jFldEnderecoKeyReleased

    private void jFldCodForValeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodForValeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {

        }
    }//GEN-LAST:event_jFldCodForValeKeyPressed

    private void jComboBoxPesquisaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaItemStateChanged
        jLblPesquisa.setText(jComboBoxPesquisa.getSelectedItem().toString() + ":");
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxPesquisaItemStateChanged

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

    }//GEN-LAST:event_formInternalFrameClosed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            dispose();

        }
    }//GEN-LAST:event_formKeyPressed

    private void jComboBoxPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jComboBoxOrdem.requestFocus();

        }


    }//GEN-LAST:event_jComboBoxPesquisaKeyPressed

    private void jTablePrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePrincipalKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            selecionada = jTablePrincipal.getSelectedRow();
            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jTablePrincipalKeyPressed

    private void jBtGravarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtGravarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_RIGHT) {
            jBtCancelar.requestFocus();
        }
    }//GEN-LAST:event_jBtGravarKeyPressed

    private void jBtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtCancelarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtCancelar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_LEFT) {
            jBtGravar.requestFocus();
        }
    }//GEN-LAST:event_jBtCancelarKeyPressed

    private void jScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneMouseClicked
        if (evt.getClickCount() == 2) {

            if (evt.getClickCount() == -1) {
                return;
            }

            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jScrollPaneMouseClicked

    private void jComboBoxOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOrdemItemStateChanged
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxOrdemItemStateChanged

    private void jComboBoxOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOrdemActionPerformed

    private void jComboBoxOrdemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxOrdemKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            jTablePrincipal.requestFocus();
            if (jTablePrincipal.getRowCount() > 0) {
                jTablePrincipal.addRowSelectionInterval(0, 0);
            }
        }
    }//GEN-LAST:event_jComboBoxOrdemKeyPressed

    private void jFldCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCNPJActionPerformed

    private void jFldCNPJKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.requestFocus();

        }
    }//GEN-LAST:event_jFldCNPJKeyPressed

    private void jFldCNPJKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCNPJKeyReleased

    private void jFldFoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldFoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldFoneActionPerformed

    private void jFldFoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFoneKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if(jRadioCnpj.isSelected() == true){
                jRadioCnpj.requestFocus();
            }else if(jRadioCpf.isSelected() == true){
                jRadioCpf.requestFocus();
            }
        }

    }//GEN-LAST:event_jFldFoneKeyPressed

    private void jFldFoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFoneKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldFoneKeyReleased

    private void FldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FldPesquisaActionPerformed

    private void FldPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FldPesquisaFocusLost
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_FldPesquisaFocusLost

    private void FldPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FldPesquisaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jComboBoxPesquisa.requestFocus();

        }
    }//GEN-LAST:event_FldPesquisaKeyPressed

    private void jComboBoxPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxPesquisaFocusLost
        // TODO add your handling code here:
        BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxPesquisaFocusLost

    private void jComboBoxOrdemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxOrdemFocusLost
        // TODO add your handling code here:
        //BuscaPorParametro();
    }//GEN-LAST:event_jComboBoxOrdemFocusLost

    private void jFldCNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCNPJFocusLost
        if (jFldCNPJ.getText().length() > 0) {
            if (util.VerificaCNPJ(util.ExtraiNumeros(jFldCNPJ.getText())) == true) {
                jFldCNPJ.setText(util.FormataCnpj(jFldCNPJ.getText()));
            } else {
                JOptionPane.showMessageDialog(null, "CNPJ inválido!");
                jFldCNPJ.requestFocus();
            }
        }

    }//GEN-LAST:event_jFldCNPJFocusLost

    private void jFldCNPJKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCNPJKeyTyped
        // TODO add your handling code here:
        String Caracteres = "0123456789";
        if (!Caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldCNPJKeyTyped

    private void jFldFoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldFoneKeyTyped
        // TODO add your handling code here:
        String Caracteres = "0123456789";
        if (!Caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jFldFoneKeyTyped

    private void jFldCodForValeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCodForValeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCodForValeActionPerformed

    private void FldPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FldPesquisaKeyReleased
        BuscaPorParametro();
    }//GEN-LAST:event_FldPesquisaKeyReleased

    private void jFldCNPJFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCNPJFocusGained
        jFldCNPJ.setText(util.ExtraiNumeros(jFldCNPJ.getText()));
    }//GEN-LAST:event_jFldCNPJFocusGained

    private void jRadioCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCpfActionPerformed
        
    }//GEN-LAST:event_jRadioCpfActionPerformed

    private void jRadioCpfItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioCpfItemStateChanged
        if(jRadioCpf.isSelected() == true){
            jFldCNPJ.setText("");
            jFldCNPJ.setEnabled(false);
            jFldCPF.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioCpfItemStateChanged

    private void jRadioCnpjItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioCnpjItemStateChanged
        if(jRadioCnpj.isSelected() == true){
            jFldCPF.setText("");
            jFldCPF.setEnabled(false);
            jFldCNPJ.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioCnpjItemStateChanged

    private void jRadioCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioCpfKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_UP){
            jRadioCnpj.setSelected(true);
            jRadioCnpj.requestFocus();
        }else if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_DOWN){
            jRadioCnpj.setSelected(true);
            jRadioCnpj.requestFocus();
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jFldCPF.requestFocus();
        }
    }//GEN-LAST:event_jRadioCpfKeyPressed

    private void jRadioCnpjKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioCnpjKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_UP){
            jRadioCpf.setSelected(true);
            jRadioCpf.requestFocus();
        }else if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_DOWN){
            jRadioCpf.setSelected(true);
            jRadioCpf.requestFocus();
        }
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jFldCNPJ.requestFocus();
        }
    }//GEN-LAST:event_jRadioCnpjKeyPressed

    private void jFldCPFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCPFKeyTyped
        String Caracteres = "0123456789";
        if(!Caracteres.contains(evt.getKeyChar() + "")){
            evt.consume();
        }
    }//GEN-LAST:event_jFldCPFKeyTyped

    private void jFldCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCPFFocusLost
        if (jFldCPF.getText().length() > 0) {
            if (util.VerificaCPF(util.ExtraiNumeros(jFldCPF.getText())) == true) {
                try {
                    jFldCPF.setText(util.FormataCpf(jFldCPF.getText()));
                } catch (ParseException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(null, "CPF inválido!");
                jFldCPF.requestFocus();
            }
        }

    }//GEN-LAST:event_jFldCPFFocusLost

    private void jFldCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCPFKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.requestFocus();

        }
    }//GEN-LAST:event_jFldCPFKeyPressed

    private void jFldCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCPFFocusGained
        jFldCPF.setText(util.ExtraiNumeros(jFldCPF.getText()));
    }//GEN-LAST:event_jFldCPFFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */


 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaResponsavelPagamento().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaResponsavelPagamento.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FldPesquisa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtAnterior;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtGravar;
    private javax.swing.JButton jBtInserir;
    private javax.swing.JButton jBtPrimeiro;
    private javax.swing.JButton jBtProximo;
    private javax.swing.JButton jBtUltimo;
    private javax.swing.JComboBox<String> jComboBoxOrdem;
    private javax.swing.JComboBox<String> jComboBoxPesquisa;
    private javax.swing.JTextField jFldCNPJ;
    private javax.swing.JTextField jFldCPF;
    private javax.swing.JTextField jFldCodForVale;
    private javax.swing.JTextField jFldEndereco;
    private javax.swing.JTextField jFldFone;
    private javax.swing.JTextField jFldNomeForVale;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelAcao;
    private javax.swing.JLabel jLblPesquisa;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlBotao;
    public javax.swing.JPanel jPnlBusca;
    public javax.swing.JPanel jPnlEdit;
    private javax.swing.JPanel jPnlNorte;
    private javax.swing.JPanel jPnlPrincipal;
    private javax.swing.JPanel jPnlSul;
    private javax.swing.JRadioButton jRadioCnpj;
    private javax.swing.JRadioButton jRadioCpf;
    public javax.swing.JScrollPane jScrollPane;
    public javax.swing.JTable jTablePrincipal;
    // End of variables declaration//GEN-END:variables

    private void LimpaTabela() {
        DefaultTableModel tableModel = (DefaultTableModel) jTablePrincipal.getModel();
        tableModel.setNumRows(0);
    }

    public void CarregaTudo() {
        try {
            Conectar.ConectarBD();
            LimpaTabela();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_RESP_PAG_VALE where rgevento <> '3'");
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    Conectar.result.getInt("CODIGO"),
                    Conectar.result.getString("RESPONSAVEL"),
                    util.FormataCpf(Conectar.result.getString("CPF")),
                    util.FormataCnpj(Conectar.result.getString("CNPJ")),
                    Conectar.result.getString("ENDERECO"),
                    Conectar.result.getString("FONE"),
                    Conectar.result.getString("RGCODUSU"),
                    Conectar.result.getString("RGUSUARIO"),
                    Conectar.result.getDate("RGDATA"),
                    Conectar.result.getString("RGEVENTO")
                });

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro Inserir \n" + e.getLocalizedMessage());
        }
    }

    public void BuscaCodigoMaximo() throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            Conectar.result = Conectar.stam.executeQuery("select max (CODIGO) + 1 from MDFE_CAD_RESP_PAG_VALE ");
            while (Conectar.result.next()) {

                codmax = Conectar.result.getInt(1);
                if (codmax <= 0) {
                    codmax = 1;
                }
                jFldCodForVale.setText(Integer.toString(codmax));

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO \n" + e.getLocalizedMessage());

        }
    }

    public void BuscaPorParametro() {
        try {
            sql = "";
            ordnar = "";

            if (jComboBoxPesquisa.getSelectedItem().equals("Código")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";//JOptionPane.showMessageDialog(null, "Não tem parâmetro de pesquisa");
                } else {
                    sql = " AND CODIGO like '" + FldPesquisa.getText() + "%'";
                }

            } else if (jComboBoxPesquisa.getSelectedItem().equals("Nome")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";
                } else {
                    sql = " AND RESPONSAVEL LIKE '" + FldPesquisa.getText() + "%'";
                }
            } else if (jComboBoxPesquisa.getSelectedItem().equals("CNPJ")) {
                if (FldPesquisa.getText().equals("")) {
                    sql = "";
                } else {
                    sql = " AND CNPJ = '" + FldPesquisa.getText() + "%'";
                }
            }

            if (jComboBoxOrdem.getSelectedItem().equals("Código")) {
                ordnar = "CODIGO";
            } else if (jComboBoxOrdem.getSelectedItem().equals("Descrição")) {
                ordnar = "RESPONSAVEL";
            }

            LimpaTabela();
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            System.out.println("select * from MDFE_CAD_RESP_PAG_VALE where (rgevento <> '3' ) " + sql + " order by " + ordnar);
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_RESP_PAG_VALE where (rgevento <> '3' ) " + sql + " order by " + ordnar);
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    Conectar.result.getInt("CODIGO"),
                    Conectar.result.getString("RESPONSAVEL"),
                    util.FormataCpf(Conectar.result.getString("CPF")),
                    util.FormataCnpj(Conectar.result.getString("CNPJ")),
                    Conectar.result.getString("ENDERECO"),
                    Conectar.result.getString("FONE"),
                    Conectar.result.getString("RGCODUSU"),
                    Conectar.result.getString("RGUSUARIO"),
                    Conectar.result.getDate("RGDATA"),
                    Conectar.result.getString("RGEVENTO")
                });
            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());

        }
    }

    public void LimpaField() {
        jFldCodForVale.setText("");
        jFldNomeForVale.setText("");
        jFldEndereco.setText("");
        jFldFone.setText("");
        
        jRadioCpf.setSelected(true);
        jFldCPF.setText("");
        jFldCPF.setEnabled(true);
        jFldCNPJ.setText("");
        jFldCNPJ.setEnabled(false);
    }

    public void DefinirFormulario() {
        setSize(600, 450);
        setResizable(true);
        setMinimumSize(new Dimension(600, 450));
        jPnlPrincipal.setSize(600, 450);
        jPnlBusca.setSize(600, 450);
        jPnlEdit.setSize(600, 450);
        jTablePrincipal.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        /*jTablePropietario.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 11));  
        jTablePropietario.getTableHeader().setOpaque(false);
        jTablePropietario.getTableHeader().setForeground(Color.white);
        jTablePropietario.getTableHeader().setBackground(Color.blue);*/
        MeuRenderizador meurenderizador = new MeuRenderizador();

        for (int col = 0; col < jTablePrincipal.getColumnCount(); col++) {
            jTablePrincipal.getColumnModel().getColumn(col).setHeaderRenderer(new MeuRenderizador());
        }

        jTablePrincipal.getColumnModel().getColumn(0).setMaxWidth(60);
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(1).setMaxWidth(800);
        jTablePrincipal.getColumnModel().getColumn(1).setMinWidth(350);

        jTablePrincipal.getColumnModel().getColumn(2).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(2).setMinWidth(200);

        jTablePrincipal.getColumnModel().getColumn(3).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(3).setMinWidth(200);
        
        jTablePrincipal.getColumnModel().getColumn(4).setMaxWidth(250);
        jTablePrincipal.getColumnModel().getColumn(4).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(6).setMaxWidth(120);
        jTablePrincipal.getColumnModel().getColumn(6).setMinWidth(120);

        jTablePrincipal.getColumnModel().getColumn(7).setMaxWidth(120);
        jTablePrincipal.getColumnModel().getColumn(7).setMinWidth(120);

        //Adiciona as teclas ALT +  de atalho para os seguintes botões
        jBtInserir.setMnemonic(java.awt.event.KeyEvent.VK_I);
        jBtAlterar.setMnemonic(java.awt.event.KeyEvent.VK_A);
        jBtExcluir.setMnemonic(java.awt.event.KeyEvent.VK_E);
        jBtGravar.setMnemonic(java.awt.event.KeyEvent.VK_G);
        jBtCancelar.setMnemonic(java.awt.event.KeyEvent.VK_C);

    }

    public void CarregaCampoEdit(String CODIGO) {
        try {
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_RESP_PAG_VALE where(CODIGO = '" + CODIGO + "') and (rgevento <> '3') ");
            while (Conectar.result.next()) {
                jFldCodForVale.setText(Conectar.result.getString("CODIGO"));
                jFldNomeForVale.setText(Conectar.result.getString("RESPONSAVEL"));
                jFldEndereco.setText(Conectar.result.getString("ENDERECO"));
                jFldFone.setText(Conectar.result.getString("FONE"));
                if(Conectar.result.getString("CNPJ").length() > 0){
                    jFldCPF.setText("");
                    jFldCPF.setEnabled(false);
                    jFldCNPJ.setText("");
                    jFldCNPJ.setEnabled(true);
                    jRadioCnpj.setSelected(true);
                    jFldCNPJ.setText(util.FormataCnpj(Conectar.result.getString("CNPJ")));
                    
                }else if(Conectar.result.getString("CPF").length() > 0){
                    jFldCPF.setText("");
                    jFldCPF.setEnabled(true);
                    jFldCNPJ.setText("");
                    jFldCNPJ.setEnabled(false);
                    jRadioCpf.setSelected(true);
                    jFldCPF.setText(util.FormataCpf(Conectar.result.getString("CPF")));
                }
                

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro CarregaEdit...\n" + e.getLocalizedMessage());
        }

    }

    public void Inserir(Integer CODIGO, String RESPONSAVEL, String CNPJ, String CPF, String ENDERECO, String FONE,
            Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO) throws SQLException, InstantiationException, IllegalAccessException {

        try{
            Conectar.ConectarBD();

            System.out.println("insert into MDFE_CAD_RESP_PAG_VALE "
                    + " (CODIGO, RESPONSAVEL, CNPJ, CPF,ENDERECO, FONE, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO)"
                    + " values(" + CODIGO + ", '" + RESPONSAVEL + "', '" + CNPJ + "', '"+ CPF +"', '" + ENDERECO + "','" + FONE
                    + "', " + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "')");

            Conectar.stam.executeUpdate("insert into MDFE_CAD_RESP_PAG_VALE "
                    + " (CODIGO, RESPONSAVEL, CNPJ, CPF,ENDERECO, FONE, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO)"
                    + " values(" + CODIGO + ", '" + RESPONSAVEL + "', '" + CNPJ + "', '"+ CPF +"', '" + ENDERECO + "','" + FONE
                    + "', " + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "')");

            CarregaTudo();
            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            int resposta = JOptionPane.showConfirmDialog(null, "Registro inserido com sucesso.\n Deseja inserir outro?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                jBtInserir.doClick();
            } else {
                FldPesquisa.requestFocus();
            }
            
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao inserir...\n" + e.getLocalizedMessage());
        }

    }

    public void Alterar(Integer CODIGO, String RESPONSAVEL, String CNPJ, String CPF, String ENDERECO, String FONE,
            Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO)
            throws SQLException, InstantiationException, IllegalAccessException {
        try {

            Conectar.ConectarBD();
            System.out.println("update MDFE_CAD_RESP_PAG_VALE set "
                    + " RESPONSAVEL  = '" + RESPONSAVEL + "',"
                    + " CNPJ       = '" + CNPJ + "',"
                    + " CPF        = '"+  CPF  +"', "       
                    + " ENDERECO   = '" + ENDERECO + "',"
                    + " FONE       = '" + FONE + "',"
                    + " RGCODUSU   =  " + RGCODUSU + ","
                    + " RGUSUARIO  = '" + RGUSUARIO + "',"
                    + " RGDATA     = '" + RGDATA + "',"
                    + " RGEVENTO   = '" + RGEVENTO + "'"
                    + " where CODIGO = " + CODIGO);

            Conectar.stam.executeUpdate("update MDFE_CAD_RESP_PAG_VALE set "
                    + " RESPONSAVEL  = '" + RESPONSAVEL + "',"
                    + " CNPJ       = '" + CNPJ + "',"
                    + " CPF        = '"+  CPF  +"', "       
                    + " ENDERECO   = '" + ENDERECO + "',"
                    + " FONE       = '" + FONE + "',"
                    + " RGCODUSU   =  " + RGCODUSU + ","
                    + " RGUSUARIO  = '" + RGUSUARIO + "',"
                    + " RGDATA     = '" + RGDATA + "',"
                    + " RGEVENTO   = '" + RGEVENTO + "'"
                    + " where CODIGO = " + CODIGO);

            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
            Conectar.DesconectarBD();
            FldPesquisa.requestFocus();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao alterar...\n" + ex.getLocalizedMessage());
        }
    }

    public void Deletar(Integer CODIGO, Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO)
            throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            System.out.println("update MDFE_CAD_RESP_PAG_VALE set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where CODIGO = " + CODIGO);

            Conectar.stam.executeUpdate("update MDFE_CAD_RESP_PAG_VALE set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where CODIGO = " + CODIGO);

            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Deletado com sucesso!");
            Conectar.DesconectarBD();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao inserir...\n" + ex.getLocalizedMessage());;
        }

    }

    public boolean VerificaField() {
        if (jFldNomeForVale.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Nome do Fornecedor não preenchido!");
            jFldNomeForVale.requestFocus();
            return false;
        } else if (jFldEndereco.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Endereço não preenchido!");
            jFldEndereco.requestFocus();
            return false;
        }else if(jFldCPF.getText().length() == 0 && jFldCNPJ.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "Insira o CPF ou CNPJ do responsável pelo pagamento!");
            if(jFldCPF.isEnabled() == true){
                jFldCPF.requestFocus();
            }else if(jFldCNPJ.isEnabled() == true){
                jFldCNPJ.requestFocus();
            }
            return false;
        }else {
            return true;
        }
    }

    public void SairEsc() {
        KeyStroke ks = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, true);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks, "esc");
        getRootPane().getActionMap().put("esc", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if (jPnlBusca.isVisible() == true) {
                    dispose();
                } else if (jPnlEdit.isVisible() == true) {
                    jPnlEdit.setVisible(false);
                    jPnlBusca.setVisible(true);
                    FldPesquisa.requestFocus();
                }
            }
        });
    }

    /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            table.getTableHeader().setOpaque(false);
            // table.getTableHeader().setFont(new Font("Dialog", 11, Font.BOLD));
            setFont(getFont().deriveFont(Font.BOLD));
            setOpaque(false);
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setFont(getFont().deriveFont(Font.BOLD));
            setHorizontalAlignment(SwingConstants.LEFT);
            setText(value.toString());

            return this;
        }

    }

}
