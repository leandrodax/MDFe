/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastro;

import ClassesFirebird.Tabusu;
import ConexaoDB.Conectar;
import Utilitarios.LimitaField;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.sql.SQLException;
import java.lang.String;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.lang.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.border.LineBorder;
import javax.swing.table.TableCellRenderer;
import pesquisa.TelaBuscaProprietario;

/**
 *
 * @author Israel
 */
public class TelaVeiculo extends javax.swing.JInternalFrame {
    public String TipoPropriedade = null, sTP_CARROCERIA = null, sTP_CODCARROCERIA = null, sTP_CODRODADO = null, sTP_RODADO;
    public int codmaxveic, selecionada;
    String sql, ordnar, situacao, tag_acao;
    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
    SimpleDateFormat DtEmissao = new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat DtDia = new SimpleDateFormat("dd/MM/yyyy");
    Utilitarios util = new Utilitarios();
    Tabusu tabusu = new Tabusu();

    public TelaVeiculo() throws SQLException, InstantiationException, IllegalAccessException {
        initComponents();
        DefinirFormulario();
        CarregaTudo();
        CarregaUF();
        SairEsc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    jPnlPrincipal = new javax.swing.JPanel();
    jPnlBusca = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    FieldBuscaCod = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    FielBuscaPlaca = new javax.swing.JTextField();
    jScrollPane = new javax.swing.JScrollPane();
    jTablePrincipal = new javax.swing.JTable();
    jComboBoxOrdem = new javax.swing.JComboBox<>();
    jPnlBotao = new javax.swing.JPanel();
    jBtPrimeiro = new javax.swing.JButton();
    jBtAnterior = new javax.swing.JButton();
    jBtProximo = new javax.swing.JButton();
    jBtUltimo = new javax.swing.JButton();
    jBtInserir = new javax.swing.JButton();
    jBtAlterar = new javax.swing.JButton();
    jBtExcluir = new javax.swing.JButton();
    jPnlEdit = new javax.swing.JPanel();
    jPnlEdtNorte = new javax.swing.JPanel();
    jLabel20 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    jFldKmInicialVeic = new javax.swing.JFormattedTextField();
    jLabel12 = new javax.swing.JLabel();
    jFldPesoVeic = new javax.swing.JFormattedTextField();
    jFldKmFinalVeic = new javax.swing.JFormattedTextField();
    jFldAnoVeic = new javax.swing.JTextField();
    jFldPlacVeic = new javax.swing.JTextField();
    jFldCodVeic = new javax.swing.JTextField();
    jLabel27 = new javax.swing.JLabel();
    jFldModVeic = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    jLabel18 = new javax.swing.JLabel();
    jLabel25 = new javax.swing.JLabel();
    jFdlCidVeic = new javax.swing.JTextField();
    jLabel11 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    jLabel17 = new javax.swing.JLabel();
    jLabel23 = new javax.swing.JLabel();
    jFldMarcaVeic = new javax.swing.JTextField();
    jLabel24 = new javax.swing.JLabel();
    jCmbBxTpRodado = new javax.swing.JComboBox<>();
    jCmbBxUF = new javax.swing.JComboBox<>();
    jFldCodProprietario = new javax.swing.JTextField();
    jFldCorVeic = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jFldKplitroVeic = new javax.swing.JFormattedTextField();
    jCmbBxTpCarroceria = new javax.swing.JComboBox<>();
    jPanel4 = new javax.swing.JPanel();
    jRadioProprio = new javax.swing.JRadioButton();
    jRadioTerceiro = new javax.swing.JRadioButton();
    jLabel10 = new javax.swing.JLabel();
    jLabel22 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    jLabel14 = new javax.swing.JLabel();
    jFldRENAVAM = new javax.swing.JTextField();
    jLabel15 = new javax.swing.JLabel();
    jLabel26 = new javax.swing.JLabel();
    jBtBuscaProprietario = new javax.swing.JButton();
    jLabel7 = new javax.swing.JLabel();
    jFldRntcVeic = new javax.swing.JTextField();
    jLblNomeProprietario = new javax.swing.JLabel();
    jLabel21 = new javax.swing.JLabel();
    jFldTaraKG = new javax.swing.JTextField();
    jFldCapacidadeKG = new javax.swing.JTextField();
    jFldCapacidadeM3 = new javax.swing.JTextField();
    jPnlEdtSul = new javax.swing.JPanel();
    jBtGravar = new javax.swing.JButton();
    jLabelAcao = new javax.swing.JLabel();
    jBtCancelar = new javax.swing.JButton();

    setTitle("Cadastro de Veículos");
    setPreferredSize(new java.awt.Dimension(598, 600));
    addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
      public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
        formInternalFrameClosed(evt);
      }
      public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
      }
      public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
      }
    });
    addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        formKeyPressed(evt);
      }
    });

    jPnlPrincipal.setLayout(new java.awt.CardLayout());

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel1.setText("Código:");

    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel2.setText("Ordem:");

    FieldBuscaCod.setDocument(new LimitaField(6, 2)
    );
    FieldBuscaCod.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        FieldBuscaCodActionPerformed(evt);
      }
    });
    FieldBuscaCod.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        FieldBuscaCodKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        FieldBuscaCodKeyReleased(evt);
      }
    });

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
    jLabel3.setText("Placa:");

    FielBuscaPlaca.setDocument(new LimitaField(100, 0)
    );
    FielBuscaPlaca.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        FielBuscaPlacaActionPerformed(evt);
      }
    });
    FielBuscaPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        FielBuscaPlacaKeyPressed(evt);
      }
      public void keyReleased(java.awt.event.KeyEvent evt) {
        FielBuscaPlacaKeyReleased(evt);
      }
    });

    jScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jScrollPaneMouseClicked(evt);
      }
    });

    jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
      },
      new String [] {
        "Código", "Placa", "Modelo", "Marca", "Tara", "Capacidade KG", "Capacidade M3", "RENAVAM","Código","Tipo Rodado", "Código","Tipo Carroceria", "Código","Proprietário" , "Cód.Usuário","Úsuario", "Data","Evento"

      }
    ){
      @Override
      public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
      };
    }

  );
  jTablePrincipal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
  jTablePrincipal.setDragEnabled(true);
  jTablePrincipal.getTableHeader().setReorderingAllowed(false);
  jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
      jTablePrincipalMouseClicked(evt);
    }
  });
  jTablePrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jTablePrincipalKeyPressed(evt);
    }
  });
  jScrollPane.setViewportView(jTablePrincipal);

  jComboBoxOrdem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  jComboBoxOrdem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descrição", "Código" }));
  jComboBoxOrdem.addItemListener(new java.awt.event.ItemListener() {
    public void itemStateChanged(java.awt.event.ItemEvent evt) {
      jComboBoxOrdemItemStateChanged(evt);
    }
  });
  jComboBoxOrdem.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jComboBoxOrdemActionPerformed(evt);
    }
  });
  jComboBoxOrdem.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jComboBoxOrdemKeyPressed(evt);
    }
  });

  jPnlBotao.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
  jPnlBotao.setLayout(new java.awt.GridLayout(1, 0));

  jBtPrimeiro.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Primeiro.png"))); // NOI18N
  jBtPrimeiro.setText("Primeiro");
  jBtPrimeiro.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtPrimeiro.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtPrimeiro.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtPrimeiro.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtPrimeiroActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtPrimeiro);

  jBtAnterior.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Anterior.png"))); // NOI18N
  jBtAnterior.setText("Anterior");
  jBtAnterior.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtAnterior.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtAnterior.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtAnterior.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtAnteriorActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtAnterior);

  jBtProximo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Proximo.png"))); // NOI18N
  jBtProximo.setText("Próximo");
  jBtProximo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtProximo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtProximo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtProximo.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtProximoActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtProximo);

  jBtUltimo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ultimo.png"))); // NOI18N
  jBtUltimo.setText("Último");
  jBtUltimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtUltimo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtUltimo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtUltimo.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtUltimoActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtUltimo);

  jBtInserir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/file_add.png"))); // NOI18N
  jBtInserir.setText("Inserir");
  jBtInserir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtInserir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtInserir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtInserir.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtInserirActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtInserir);

  jBtAlterar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/text_edit.png"))); // NOI18N
  jBtAlterar.setText("Alterar");
  jBtAlterar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtAlterar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtAlterar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtAlterarActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtAlterar);

  jBtExcluir.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/deletar.png"))); // NOI18N
  jBtExcluir.setText("Excluir");
  jBtExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
  jBtExcluir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
  jBtExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtExcluirActionPerformed(evt);
    }
  });
  jPnlBotao.add(jBtExcluir);

  javax.swing.GroupLayout jPnlBuscaLayout = new javax.swing.GroupLayout(jPnlBusca);
  jPnlBusca.setLayout(jPnlBuscaLayout);
  jPnlBuscaLayout.setHorizontalGroup(
    jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlBuscaLayout.createSequentialGroup()
      .addContainerGap()
      .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlBuscaLayout.createSequentialGroup()
          .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(14, 14, 14)
              .addComponent(FieldBuscaCod, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(150, 150, 150)
              .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(5, 5, 5)
              .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
              .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addGap(10, 10, 10)
              .addComponent(FielBuscaPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane))
          .addGap(12, 12, 12))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlBuscaLayout.createSequentialGroup()
          .addComponent(jPnlBotao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addContainerGap())))
  );
  jPnlBuscaLayout.setVerticalGroup(
    jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlBuscaLayout.createSequentialGroup()
      .addGap(10, 10, 10)
      .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(FieldBuscaCod, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jComboBoxOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(10, 10, 10)
      .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(FielBuscaPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
      .addGap(10, 10, 10)
      .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
      .addGap(5, 5, 5)
      .addComponent(jPnlBotao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(3, 3, 3))
  );

  jPnlPrincipal.add(jPnlBusca, "card2");

  jPnlEdit.setLayout(new java.awt.BorderLayout());

  jPnlEdtNorte.setLayout(null);

  jLabel20.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel20.setText("Tara KG");
  jPnlEdtNorte.add(jLabel20);
  jLabel20.setBounds(150, 280, 90, 13);

  jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel8.setText("Marca");
  jPnlEdtNorte.add(jLabel8);
  jLabel8.setBounds(290, 80, 50, 13);

  jFldKmInicialVeic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
  jFldKmInicialVeic.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
      jFldKmInicialVeicFocusGained(evt);
    }
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldKmInicialVeicFocusLost(evt);
    }
  });
  jFldKmInicialVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldKmInicialVeicActionPerformed(evt);
    }
  });
  jFldKmInicialVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldKmInicialVeicKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldKmInicialVeic);
  jFldKmInicialVeic.setBounds(130, 191, 120, 25);

  jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel12.setText("Cidade");
  jPnlEdtNorte.add(jLabel12);
  jLabel12.setBounds(290, 119, 34, 30);

  jFldPesoVeic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
  jFldPesoVeic.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
      jFldPesoVeicFocusGained(evt);
    }
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldPesoVeicFocusLost(evt);
    }
  });
  jFldPesoVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldPesoVeicActionPerformed(evt);
    }
  });
  jFldPesoVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldPesoVeicKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldPesoVeic);
  jFldPesoVeic.setBounds(10, 191, 100, 25);

  jFldKmFinalVeic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
  jFldKmFinalVeic.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
      jFldKmFinalVeicFocusGained(evt);
    }
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldKmFinalVeicFocusLost(evt);
    }
  });
  jFldKmFinalVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldKmFinalVeicActionPerformed(evt);
    }
  });
  jFldKmFinalVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldKmFinalVeicKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldKmFinalVeic);
  jFldKmFinalVeic.setBounds(270, 191, 130, 25);

  jFldAnoVeic.setDocument(new LimitaField(4, 2)
  );
  jFldAnoVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldAnoVeicActionPerformed(evt);
    }
  });
  jFldAnoVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldAnoVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldAnoVeicKeyReleased(evt);
    }
    public void keyTyped(java.awt.event.KeyEvent evt) {
      jFldAnoVeicKeyTyped(evt);
    }
  });
  jPnlEdtNorte.add(jFldAnoVeic);
  jFldAnoVeic.setBounds(10, 141, 90, 25);

  jFldPlacVeic.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldPlacVeicFocusLost(evt);
    }
  });
  jFldPlacVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldPlacVeicActionPerformed(evt);
    }
  });
  jFldPlacVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldPlacVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldPlacVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldPlacVeic);
  jFldPlacVeic.setBounds(140, 41, 130, 25);

  jFldCodVeic.setBackground(new java.awt.Color(255, 255, 204));
  jFldCodVeic.setFocusable(false);
  jFldCodVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCodVeicKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldCodVeic);
  jFldCodVeic.setBounds(10, 41, 90, 25);

  jLabel27.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel27.setText("Código");
  jPnlEdtNorte.add(jLabel27);
  jLabel27.setBounds(10, 330, 70, 10);

  jFldModVeic.setDocument(new LimitaField(15, 0)
  );
  jFldModVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldModVeicActionPerformed(evt);
    }
  });
  jFldModVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldModVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldModVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldModVeic);
  jFldModVeic.setBounds(10, 91, 260, 25);

  jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel5.setText("Código");
  jPnlEdtNorte.add(jLabel5);
  jLabel5.setBounds(10, 19, 50, 30);

  jLabel18.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel18.setText("Tipo Carroceria");
  jLabel18.setToolTipText("");
  jPnlEdtNorte.add(jLabel18);
  jLabel18.setBounds(10, 219, 100, 30);

  jLabel25.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel25.setText("Capacidade M3");
  jPnlEdtNorte.add(jLabel25);
  jLabel25.setBounds(430, 269, 140, 30);

  jFdlCidVeic.setDocument(new LimitaField(20, 0));
  jFdlCidVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFdlCidVeicActionPerformed(evt);
    }
  });
  jFdlCidVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFdlCidVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFdlCidVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFdlCidVeic);
  jFdlCidVeic.setBounds(290, 141, 270, 25);

  jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel11.setText("Cor");
  jPnlEdtNorte.add(jLabel11);
  jLabel11.setBounds(110, 119, 50, 30);

  jLabel16.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel16.setText("Quilometragem Final");
  jPnlEdtNorte.add(jLabel16);
  jLabel16.setBounds(270, 169, 110, 30);

  jLabel17.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel17.setText("Quilometros Por litros");
  jPnlEdtNorte.add(jLabel17);
  jLabel17.setBounds(430, 169, 130, 30);

  jLabel23.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel23.setText("Estado");
  jLabel23.setToolTipText("");
  jPnlEdtNorte.add(jLabel23);
  jLabel23.setBounds(430, 219, 100, 30);

  jFldMarcaVeic.setDocument(new LimitaField(15, 0)
  );
  jFldMarcaVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldMarcaVeicActionPerformed(evt);
    }
  });
  jFldMarcaVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldMarcaVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldMarcaVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldMarcaVeic);
  jFldMarcaVeic.setBounds(290, 91, 270, 25);

  jLabel24.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel24.setText("Capacidade KG");
  jPnlEdtNorte.add(jLabel24);
  jLabel24.setBounds(290, 269, 110, 30);

  jCmbBxTpRodado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Truck", "Toco", "Cavalo Mecânico7", "VAN", "Utilitário", "Outros" }));
  jCmbBxTpRodado.setSelectedIndex(-1);
  jCmbBxTpRodado.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jCmbBxTpRodadoActionPerformed(evt);
    }
  });
  jCmbBxTpRodado.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jCmbBxTpRodadoKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jCmbBxTpRodado);
  jCmbBxTpRodado.setBounds(210, 241, 200, 25);
  jCmbBxTpRodado.getAccessibleContext().setAccessibleDescription("");

  jCmbBxUF.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jCmbBxUFActionPerformed(evt);
    }
  });
  jCmbBxUF.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jCmbBxUFKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jCmbBxUF);
  jCmbBxUF.setBounds(430, 241, 130, 25);
  jCmbBxUF.getAccessibleContext().setAccessibleDescription("");

  jFldCodProprietario.setToolTipText("");
  jFldCodProprietario.addCaretListener(new javax.swing.event.CaretListener() {
    public void caretUpdate(javax.swing.event.CaretEvent evt) {
      jFldCodProprietarioCaretUpdate(evt);
    }
  });
  jFldCodProprietario.addAncestorListener(new javax.swing.event.AncestorListener() {
    public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
    }
    public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
      jFldCodProprietarioAncestorAdded(evt);
    }
    public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
    }
  });
  jFldCodProprietario.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldCodProprietarioFocusLost(evt);
    }
  });
  jFldCodProprietario.addInputMethodListener(new java.awt.event.InputMethodListener() {
    public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
    }
    public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
      jFldCodProprietarioInputMethodTextChanged(evt);
    }
  });
  jFldCodProprietario.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldCodProprietarioActionPerformed(evt);
    }
  });
  jFldCodProprietario.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCodProprietarioKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldCodProprietarioKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldCodProprietario);
  jFldCodProprietario.setBounds(10, 341, 72, 25);

  jFldCorVeic.setDocument(new LimitaField(10, 0));
  jFldCorVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldCorVeicActionPerformed(evt);
    }
  });
  jFldCorVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCorVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldCorVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldCorVeic);
  jFldCorVeic.setBounds(110, 141, 170, 25);

  jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel9.setText("Modelo");
  jPnlEdtNorte.add(jLabel9);
  jLabel9.setBounds(10, 80, 60, 10);

  jFldKplitroVeic.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
  jFldKplitroVeic.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusGained(java.awt.event.FocusEvent evt) {
      jFldKplitroVeicFocusGained(evt);
    }
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldKplitroVeicFocusLost(evt);
    }
  });
  jFldKplitroVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldKplitroVeicActionPerformed(evt);
    }
  });
  jFldKplitroVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldKplitroVeicKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldKplitroVeic);
  jFldKplitroVeic.setBounds(430, 191, 130, 25);

  jCmbBxTpCarroceria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Aplicável", "Aberta", "Fechado\\Baú", "Granelera", "Porta Contêiner", "Sider" }));
  jCmbBxTpCarroceria.setSelectedIndex(-1);
  jCmbBxTpCarroceria.setPreferredSize(null);
  jCmbBxTpCarroceria.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jCmbBxTpCarroceriaActionPerformed(evt);
    }
  });
  jCmbBxTpCarroceria.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jCmbBxTpCarroceriaKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jCmbBxTpCarroceria);
  jCmbBxTpCarroceria.setBounds(10, 241, 180, 25);
  jCmbBxTpCarroceria.getAccessibleContext().setAccessibleName("");
  jCmbBxTpCarroceria.getAccessibleContext().setAccessibleDescription("");

  jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Propriedade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
  jPanel4.setLayout(null);

  buttonGroup1.add(jRadioProprio);
  jRadioProprio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  jRadioProprio.setSelected(true);
  jRadioProprio.setText("Própria");
  jRadioProprio.addChangeListener(new javax.swing.event.ChangeListener() {
    public void stateChanged(javax.swing.event.ChangeEvent evt) {
      jRadioProprioStateChanged(evt);
    }
  });
  jRadioProprio.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jRadioProprioActionPerformed(evt);
    }
  });
  jRadioProprio.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jRadioProprioKeyPressed(evt);
    }
  });
  jPanel4.add(jRadioProprio);
  jRadioProprio.setBounds(30, 20, 90, 20);

  buttonGroup1.add(jRadioTerceiro);
  jRadioTerceiro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
  jRadioTerceiro.setText("Terceiro");
  jRadioTerceiro.addChangeListener(new javax.swing.event.ChangeListener() {
    public void stateChanged(javax.swing.event.ChangeEvent evt) {
      jRadioTerceiroStateChanged(evt);
    }
  });
  jRadioTerceiro.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jRadioTerceiroActionPerformed(evt);
    }
  });
  jRadioTerceiro.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jRadioTerceiroKeyPressed(evt);
    }
  });
  jPanel4.add(jRadioTerceiro);
  jRadioTerceiro.setBounds(160, 20, 80, 20);

  jPnlEdtNorte.add(jPanel4);
  jPanel4.setBounds(290, 21, 270, 50);

  jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel10.setText("Ano");
  jLabel10.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jLabel10KeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jLabel10);
  jLabel10.setBounds(10, 119, 40, 30);

  jLabel22.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel22.setText("Tipo Rodado");
  jLabel22.setToolTipText("");
  jPnlEdtNorte.add(jLabel22);
  jLabel22.setBounds(210, 219, 100, 30);

  jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel4.setText("Placa");
  jPnlEdtNorte.add(jLabel4);
  jLabel4.setBounds(140, 19, 50, 30);

  jLabel14.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel14.setText(" Peso Suportado");
  jPnlEdtNorte.add(jLabel14);
  jLabel14.setBounds(10, 169, 100, 30);

  jFldRENAVAM.setDocument(new LimitaField(11, 0)
  );
  jFldRENAVAM.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldRENAVAMActionPerformed(evt);
    }
  });
  jFldRENAVAM.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldRENAVAMKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldRENAVAMKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldRENAVAM);
  jFldRENAVAM.setBounds(10, 291, 130, 25);

  jLabel15.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel15.setText("Quilometragem Inicial");
  jPnlEdtNorte.add(jLabel15);
  jLabel15.setBounds(130, 169, 120, 30);

  jLabel26.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel26.setText("RENAVAM");
  jPnlEdtNorte.add(jLabel26);
  jLabel26.setBounds(10, 280, 60, 10);

  jBtBuscaProprietario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/tool.png"))); // NOI18N
  jBtBuscaProprietario.setText("F11");
  jBtBuscaProprietario.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
  jBtBuscaProprietario.setFocusable(false);
  jBtBuscaProprietario.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
  jBtBuscaProprietario.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
  jBtBuscaProprietario.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtBuscaProprietarioActionPerformed(evt);
    }
  });
  jPnlEdtNorte.add(jBtBuscaProprietario);
  jBtBuscaProprietario.setBounds(90, 340, 60, 26);
  jBtBuscaProprietario.getAccessibleContext().setAccessibleDescription("");

  jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel7.setText("RNTRC");
  jLabel7.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jLabel7KeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jLabel7);
  jLabel7.setBounds(430, 330, 60, 10);

  jFldRntcVeic.setEditable(false);
  jFldRntcVeic.setBackground(new java.awt.Color(255, 255, 204));
  jFldRntcVeic.setDocument(new LimitaField(20, 0)
  );
  jFldRntcVeic.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
  jFldRntcVeic.setForeground(new java.awt.Color(0, 0, 204));
  jFldRntcVeic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
  jFldRntcVeic.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jFldRntcVeicActionPerformed(evt);
    }
  });
  jFldRntcVeic.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldRntcVeicKeyPressed(evt);
    }
    public void keyReleased(java.awt.event.KeyEvent evt) {
      jFldRntcVeicKeyReleased(evt);
    }
  });
  jPnlEdtNorte.add(jFldRntcVeic);
  jFldRntcVeic.setBounds(430, 340, 130, 25);

  jLblNomeProprietario.setBackground(new java.awt.Color(255, 255, 204));
  jLblNomeProprietario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
  jLblNomeProprietario.setForeground(new java.awt.Color(0, 0, 204));
  jLblNomeProprietario.setToolTipText("");
  jLblNomeProprietario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
  jLblNomeProprietario.setOpaque(true);
  jPnlEdtNorte.add(jLblNomeProprietario);
  jLblNomeProprietario.setBounds(160, 340, 260, 25);

  jLabel21.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jLabel21.setText("Nome do Propietario");
  jPnlEdtNorte.add(jLabel21);
  jLabel21.setBounds(160, 330, 140, 10);

  jFldTaraKG.setDocument(new LimitaField(7, 2));
  jFldTaraKG.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldTaraKGFocusLost(evt);
    }
  });
  jFldTaraKG.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldTaraKGKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldTaraKG);
  jFldTaraKG.setBounds(150, 291, 130, 25);

  jFldCapacidadeKG.setDocument(new LimitaField(7, 2));
  jFldCapacidadeKG.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldCapacidadeKGFocusLost(evt);
    }
  });
  jFldCapacidadeKG.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCapacidadeKGKeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldCapacidadeKG);
  jFldCapacidadeKG.setBounds(290, 291, 130, 25);

  jFldCapacidadeM3.setDocument(new LimitaField(7, 2));
  jFldCapacidadeM3.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
      jFldCapacidadeM3FocusLost(evt);
    }
  });
  jFldCapacidadeM3.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jFldCapacidadeM3KeyPressed(evt);
    }
  });
  jPnlEdtNorte.add(jFldCapacidadeM3);
  jFldCapacidadeM3.setBounds(430, 291, 130, 25);

  jPnlEdit.add(jPnlEdtNorte, java.awt.BorderLayout.CENTER);

  jPnlEdtSul.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
  jPnlEdtSul.setPreferredSize(new java.awt.Dimension(0, 60));

  jBtGravar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ok-icon.png"))); // NOI18N
  jBtGravar.setText("Gravar");
  jBtGravar.setAlignmentY(0.3F);
  jBtGravar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtGravarActionPerformed(evt);
    }
  });
  jBtGravar.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jBtGravarKeyPressed(evt);
    }
  });

  jLabelAcao.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
  jLabelAcao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
  jLabelAcao.setText("jLabel6");
  jLabelAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

  jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
  jBtCancelar.setText("Cancelar");
  jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
      jBtCancelarActionPerformed(evt);
    }
  });
  jBtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyPressed(java.awt.event.KeyEvent evt) {
      jBtCancelarKeyPressed(evt);
    }
  });

  javax.swing.GroupLayout jPnlEdtSulLayout = new javax.swing.GroupLayout(jPnlEdtSul);
  jPnlEdtSul.setLayout(jPnlEdtSulLayout);
  jPnlEdtSulLayout.setHorizontalGroup(
    jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlEdtSulLayout.createSequentialGroup()
      .addContainerGap()
      .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(108, 108, 108)
      .addComponent(jLabelAcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGap(108, 108, 108)
      .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
      .addGap(21, 21, 21))
  );
  jPnlEdtSulLayout.setVerticalGroup(
    jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(jPnlEdtSulLayout.createSequentialGroup()
      .addGap(8, 8, 8)
      .addGroup(jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGroup(jPnlEdtSulLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jBtGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabelAcao, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
      .addContainerGap())
  );

  jPnlEdit.add(jPnlEdtSul, java.awt.BorderLayout.SOUTH);

  jPnlPrincipal.add(jPnlEdit, "card3");

  javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
  getContentPane().setLayout(layout);
  layout.setHorizontalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
  );
  layout.setVerticalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
      .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addGap(4, 4, 4))
  );

  pack();
  }// </editor-fold>//GEN-END:initComponents

    private void FieldBuscaCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldBuscaCodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FieldBuscaCodActionPerformed

    private void FielBuscaPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FielBuscaPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FielBuscaPlacaActionPerformed

    private void FieldBuscaCodKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldBuscaCodKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (FieldBuscaCod.getText().equals("")) {
                CarregaTudo();
            } else {

            }
            FielBuscaPlaca.requestFocus();

        }// TODO add your handling code here:
    }//GEN-LAST:event_FieldBuscaCodKeyPressed

    private void FielBuscaPlacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FielBuscaPlacaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jComboBoxOrdem.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_FielBuscaPlacaKeyPressed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        // TODO add your handling code here:
        selecionada = jTablePrincipal.getSelectedRow();
        if (evt.getClickCount() == 2) {

            if (selecionada == -1) {
                return;
            } else {

                tag_acao = "2";
                jLabelAcao.setText("Alterar");
                jPnlBusca.setVisible(false);
                jPnlEdit.setVisible(true);
                CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());

            }
        }
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jBtInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInserirActionPerformed
//        if(util.VerificarPermissao("01.24.01", tabusu.getCodigo()) == true){
        jPnlBusca.setVisible(false);
        jPnlEdit.setVisible(true);
        jLabelAcao.setText("Inserir");
        LimpaField();
        tag_acao = "1";
        try {
            BuscaCodigoMaximo();
        } catch (SQLException ex) {
            Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
        }
        jFldPlacVeic.requestFocus();
        //      } else{
        //        JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //  }

    }//GEN-LAST:event_jBtInserirActionPerformed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        //if(util.VerificarPermissao("01.24.02", tabusu.getCodigo()) == true){

        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            LimpaField();
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            tag_acao = "2";
            jLabelAcao.setText("Alterar");
            jFldPlacVeic.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado");
        }
        //} else{
        //    JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //}


    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
//        if(util.VerificarPermissao("01.24.03", tabusu.getCodigo()) == true){
        if (selecionada != -1 && jTablePrincipal.getRowCount() > 0) {
            jLabelAcao.setText("Excluir");
            jPnlBusca.setVisible(false);
            jPnlEdit.setVisible(true);
            tag_acao = "3";
            CarregaCampoEdit(jTablePrincipal.getValueAt(selecionada, 0).toString());
            int resposta = JOptionPane.showConfirmDialog(null, "Confirma a exclusão do registro?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                Date date = new Date();
                SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
                try {
                    Deletar(Integer.parseInt(jFldCodVeic.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");

                } catch (SQLException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                jBtCancelar.doClick();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum veiculo selecionado");
        }
        //      } else{
        //      JOptionPane.showMessageDialog(null, "Usuário não habilitado para esta operação.");
        //    }

    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtUltimoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o total de linhas da tabela for maior que 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Seleciona a ultima linha
            jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
            //Seta a value da barra de rolagem para acompanhar a linha selecionada
            jScrollPane.getVerticalScrollBar().setValue(jScrollPane.getVerticalScrollBar().getMaximum());
            jBtPrimeiro.setEnabled(true);
            jBtAnterior.setEnabled(true);
            jBtProximo.setEnabled(false);
            jBtUltimo.setEnabled(false);
        }
    }//GEN-LAST:event_jBtUltimoActionPerformed

    private void jBtProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtProximoActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Se o numeros de linhas da tabela for maior que zero
        if (jTablePrincipal.getRowCount() > 0) {
            //Se a linha selecionada for diferente de -1 e do total de linhas - 1
            if (selecionada != -1 && selecionada != jTablePrincipal.getRowCount() - 1) {
                //Foca na barra de rolagem da tabela
                jScrollPane.requestFocus();
                //Selecionada a proxima linha
                jTablePrincipal.setRowSelectionInterval(selecionada + 1, selecionada + 1);
                //Seta a value da barra de rolagem para que acompanhe a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
                //Se a linha selecionada tiver o mesmo valor do total de linhas da tabela -1
            } else if (selecionada == jTablePrincipal.getRowCount() - 1) {
                //selecionada a ultima linha
                jTablePrincipal.setRowSelectionInterval(jTablePrincipal.getRowCount() - 1, jTablePrincipal.getRowCount() - 1);
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(false);
                jBtUltimo.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jBtProximoActionPerformed

    private void jBtAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAnteriorActionPerformed
        selecionada = jTablePrincipal.getSelectedRow();
        //Verifica se a tabela possui mais de 0 linhas
        if (jTablePrincipal.getRowCount() > 0) {
            //se a selecionada for diferente de -1  e 0
            if (selecionada != -1 && selecionada != 0) {
                //Foca a barra de rolagem
                jScrollPane.requestFocus();
                //Seleciona a linha anterior
                jTablePrincipal.setRowSelectionInterval(selecionada - 1, selecionada - 1);
                //Seta a value da barra de rolagem para acompanhar a linha selecionada
                jScrollPane.getVerticalScrollBar().setValue(jTablePrincipal.getRowHeight() * jTablePrincipal.getSelectedRow());
                jBtPrimeiro.setEnabled(true);
                jBtAnterior.setEnabled(true);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);

                //Se a linha selecionada for igual a zero
            } else if (selecionada == 0) {
                //seta as linhas e a os botoes
                jTablePrincipal.setRowSelectionInterval(0, 0);
                jBtPrimeiro.setEnabled(false);
                jBtAnterior.setEnabled(false);
                jBtProximo.setEnabled(true);
                jBtUltimo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jBtAnteriorActionPerformed

    private void jBtPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtPrimeiroActionPerformed

      
      //Se o numero de linhas da tabela for 0
        if (jTablePrincipal.getRowCount() > 0) {
            //Foca a barra de rolagem
            jScrollPane.requestFocus();
            //Foca na tabela
            jTablePrincipal.requestFocus();
            //Seta a value da barra de rolagem para 1
            jScrollPane.getVerticalScrollBar().setValue(1);
            //seleciona a primeira linha
            jTablePrincipal.addRowSelectionInterval(0, 0);
            //habilita e desablita dos respectivos botões
            jBtPrimeiro.setEnabled(false);
            jBtAnterior.setEnabled(false);
            jBtProximo.setEnabled(true);
            jBtUltimo.setEnabled(true);
        }
    }//GEN-LAST:event_jBtPrimeiroActionPerformed

    private void jComboBoxOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOrdemActionPerformed

    private void FieldBuscaCodKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldBuscaCodKeyReleased
        BuscaPorParametro(FieldBuscaCod.getText(), FielBuscaPlaca.getText());
    }//GEN-LAST:event_FieldBuscaCodKeyReleased

    private void FielBuscaPlacaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FielBuscaPlacaKeyReleased
        BuscaPorParametro(FieldBuscaCod.getText(), FielBuscaPlaca.getText());
    }//GEN-LAST:event_FielBuscaPlacaKeyReleased

    private void jComboBoxOrdemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOrdemItemStateChanged
        BuscaPorParametro(FieldBuscaCod.getText(), FielBuscaPlaca.getText());
    }//GEN-LAST:event_jComboBoxOrdemItemStateChanged

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed

    }//GEN-LAST:event_formInternalFrameClosed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            dispose();

        }
    }//GEN-LAST:event_formKeyPressed

    private void jComboBoxOrdemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxOrdemKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jTablePrincipal.requestFocus();
            if (jTablePrincipal.getRowCount() > 0) {
                jTablePrincipal.addRowSelectionInterval(0, 0);
            }
        }
    }//GEN-LAST:event_jComboBoxOrdemKeyPressed

    private void jTablePrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePrincipalKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            selecionada = jTablePrincipal.getSelectedRow();
            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jTablePrincipalKeyPressed

    private void jScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPaneMouseClicked
        if (evt.getClickCount() == 2) {

            if (evt.getClickCount() == -1) {
                return;
            }
            tag_acao = "2";
            jBtAlterar.doClick();
        }
    }//GEN-LAST:event_jScrollPaneMouseClicked

    private void jBtBuscaProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtBuscaProprietarioActionPerformed
        TelaBuscaProprietario telabuscaproprietario = new TelaBuscaProprietario();
        telabuscaproprietario.setVisible(true);
        jFldCodProprietario.setText(telabuscaproprietario.sCOD.toString());
        jLblNomeProprietario.setText(telabuscaproprietario.sNOME.toString());
        jFldRntcVeic.setText(telabuscaproprietario.sRNTRC.toString());
        telabuscaproprietario.sCOD = "";
        telabuscaproprietario.sNOME = "";
        jFldCodProprietario.requestFocus();
    }//GEN-LAST:event_jBtBuscaProprietarioActionPerformed

    private void jFldCodProprietarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodProprietarioKeyReleased

    }//GEN-LAST:event_jFldCodProprietarioKeyReleased

    private void jFldCodProprietarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodProprietarioKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_F11) {
            jBtBuscaProprietario.doClick();
        }

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jBtGravar.doClick();
        }

    }//GEN-LAST:event_jFldCodProprietarioKeyPressed

    private void jFldCodProprietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCodProprietarioActionPerformed

    }//GEN-LAST:event_jFldCodProprietarioActionPerformed

    private void jFldCodProprietarioInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jFldCodProprietarioInputMethodTextChanged

    }//GEN-LAST:event_jFldCodProprietarioInputMethodTextChanged

    private void jFldCodProprietarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCodProprietarioFocusLost
         jLblNomeProprietario.setText(BuscaProprietario(jFldCodProprietario.getText()));
    }//GEN-LAST:event_jFldCodProprietarioFocusLost

    private void jFldCodProprietarioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldCodProprietarioAncestorAdded

    }//GEN-LAST:event_jFldCodProprietarioAncestorAdded

    private void jFldCodProprietarioCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jFldCodProprietarioCaretUpdate

    }//GEN-LAST:event_jFldCodProprietarioCaretUpdate

    private void jFldMarcaVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldMarcaVeicKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldMarcaVeicKeyReleased

    private void jFldMarcaVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldMarcaVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldAnoVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldMarcaVeicKeyPressed

    private void jFldMarcaVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldMarcaVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldMarcaVeicActionPerformed

    private void jCmbBxUFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxUFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldRENAVAM.requestFocus();
        }
    }//GEN-LAST:event_jCmbBxUFKeyPressed

    private void jCmbBxUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxUFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxUFActionPerformed

    private void jCmbBxTpRodadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxTpRodadoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jCmbBxUF.requestFocus();
        }
    }//GEN-LAST:event_jCmbBxTpRodadoKeyPressed

    private void jCmbBxTpRodadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxTpRodadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxTpRodadoActionPerformed

    private void jCmbBxTpCarroceriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbBxTpCarroceriaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jCmbBxTpRodado.requestFocus();
        }
    }//GEN-LAST:event_jCmbBxTpCarroceriaKeyPressed

    private void jCmbBxTpCarroceriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmbBxTpCarroceriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCmbBxTpCarroceriaActionPerformed

    private void jRadioTerceiroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioTerceiroKeyPressed
        if (evt.getKeyCode() == evt.VK_UP || evt.getKeyCode() == evt.VK_RIGHT) {
            jRadioProprio.requestFocus();
            jRadioProprio.setSelected(true);
        } else if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_LEFT) {
            jRadioProprio.requestFocus();
            jRadioProprio.setSelected(true);
        }

        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldModVeic.requestFocus();
        }
    }//GEN-LAST:event_jRadioTerceiroKeyPressed

    private void jRadioTerceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioTerceiroActionPerformed
        
        
        if(jRadioProprio.isSelected()){
            jFldCodProprietario.setEnabled(false);
            jBtBuscaProprietario.setEnabled(false);
        }else{
            jFldCodProprietario.setEnabled(true);
            jBtBuscaProprietario.setEnabled(true);
        }
         
    }//GEN-LAST:event_jRadioTerceiroActionPerformed

    private void jRadioProprioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioProprioKeyPressed
        if (evt.getKeyCode() == evt.VK_UP || evt.getKeyCode() == evt.VK_RIGHT) {
            jRadioTerceiro.requestFocus();
            jRadioTerceiro.setSelected(true);
        } else if (evt.getKeyCode() == evt.VK_DOWN || evt.getKeyCode() == evt.VK_LEFT) {
            jRadioTerceiro.requestFocus();
            jRadioTerceiro.setSelected(true);
        }

        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldModVeic.requestFocus();
        }
    }//GEN-LAST:event_jRadioProprioKeyPressed

    private void jRadioProprioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioProprioActionPerformed
         if(jRadioProprio.isSelected()){
            jFldCodProprietario.setEnabled(false);
            jBtBuscaProprietario.setEnabled(false);
            jFldCodProprietario.setText("");
            jLblNomeProprietario.setText("");            
            jFldRntcVeic.setText("");
            
        }else{
            jFldCodProprietario.setEnabled(true);
            jBtBuscaProprietario.setEnabled(true);
        }
    }//GEN-LAST:event_jRadioProprioActionPerformed

    private void jFldCodVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {

        }
    }//GEN-LAST:event_jFldCodVeicKeyPressed

    private void jFldKplitroVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldKplitroVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jCmbBxTpCarroceria.requestFocus();
        }
    }//GEN-LAST:event_jFldKplitroVeicKeyPressed

    private void jFldKplitroVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldKplitroVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldKplitroVeicActionPerformed

    private void jFldKplitroVeicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKplitroVeicFocusLost
        if (jFldKplitroVeic.getText().length() == 0) {
            jFldKplitroVeic.setText("0,00");
        }
    }//GEN-LAST:event_jFldKplitroVeicFocusLost

    private void jFldKplitroVeicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKplitroVeicFocusGained
        jFldKplitroVeic.selectAll();
    }//GEN-LAST:event_jFldKplitroVeicFocusGained

    private void jFldKmFinalVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldKmFinalVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldKplitroVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldKmFinalVeicKeyPressed

    private void jFldKmFinalVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldKmFinalVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldKmFinalVeicActionPerformed

    private void jFldKmFinalVeicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKmFinalVeicFocusLost
        if (jFldKmFinalVeic.getText().length() == 0) {
            jFldKmFinalVeic.setText("0,00");
        }
    }//GEN-LAST:event_jFldKmFinalVeicFocusLost

    private void jFldKmFinalVeicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKmFinalVeicFocusGained
        jFldKmFinalVeic.selectAll();
    }//GEN-LAST:event_jFldKmFinalVeicFocusGained

    private void jFldKmInicialVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldKmInicialVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldKmFinalVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldKmInicialVeicKeyPressed

    private void jFldKmInicialVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldKmInicialVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldKmInicialVeicActionPerformed

    private void jFldKmInicialVeicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKmInicialVeicFocusLost
        if (jFldKmInicialVeic.getText().length() == 0) {
            jFldKmInicialVeic.setText("0,00");
        }
    }//GEN-LAST:event_jFldKmInicialVeicFocusLost

    private void jFldKmInicialVeicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldKmInicialVeicFocusGained
        jFldKmInicialVeic.selectAll();
    }//GEN-LAST:event_jFldKmInicialVeicFocusGained

    private void jFldPesoVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPesoVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldKmInicialVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldPesoVeicKeyPressed

    private void jFldPesoVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldPesoVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldPesoVeicActionPerformed

    private void jFldPesoVeicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPesoVeicFocusLost
        if (jFldPesoVeic.getText().length() == 0) {
            jFldPesoVeic.setText("0,00");
        }
    }//GEN-LAST:event_jFldPesoVeicFocusLost

    private void jFldPesoVeicFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPesoVeicFocusGained
        jFldPesoVeic.selectAll();
    }//GEN-LAST:event_jFldPesoVeicFocusGained

    private void jFdlCidVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFdlCidVeicKeyReleased

    }//GEN-LAST:event_jFdlCidVeicKeyReleased

    private void jFdlCidVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFdlCidVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldPesoVeic.requestFocus();
        }
    }//GEN-LAST:event_jFdlCidVeicKeyPressed

    private void jFdlCidVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFdlCidVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFdlCidVeicActionPerformed

    private void jFldCorVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCorVeicKeyReleased

    }//GEN-LAST:event_jFldCorVeicKeyReleased

    private void jFldCorVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCorVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFdlCidVeic.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldCorVeicKeyPressed

    private void jFldCorVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldCorVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldCorVeicActionPerformed

    private void jFldAnoVeicKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldAnoVeicKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        } else {
        }
    }//GEN-LAST:event_jFldAnoVeicKeyTyped

    private void jFldAnoVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldAnoVeicKeyReleased

    }//GEN-LAST:event_jFldAnoVeicKeyReleased

    private void jFldAnoVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldAnoVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldCorVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldAnoVeicKeyPressed

    private void jFldAnoVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldAnoVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldAnoVeicActionPerformed

    private void jFldRENAVAMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRENAVAMKeyReleased

    }//GEN-LAST:event_jFldRENAVAMKeyReleased

    private void jFldRENAVAMKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRENAVAMKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldTaraKG.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldRENAVAMKeyPressed

    private void jFldRENAVAMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldRENAVAMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldRENAVAMActionPerformed

    private void jFldModVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldModVeicKeyReleased

    }//GEN-LAST:event_jFldModVeicKeyReleased

    private void jFldModVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldModVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldMarcaVeic.requestFocus();
        }
    }//GEN-LAST:event_jFldModVeicKeyPressed

    private void jFldModVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldModVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldModVeicActionPerformed

    private void jLabel10KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel10KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel10KeyPressed

    private void jFldRntcVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRntcVeicKeyReleased

    }//GEN-LAST:event_jFldRntcVeicKeyReleased

    private void jFldRntcVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldRntcVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (jRadioProprio.isSelected() == true) {
                jRadioProprio.requestFocus();
            } else if (jRadioTerceiro.isSelected() == true) {
                jRadioTerceiro.requestFocus();
            }
        }
    }//GEN-LAST:event_jFldRntcVeicKeyPressed

    private void jFldRntcVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldRntcVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldRntcVeicActionPerformed

    private void jFldPlacVeicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPlacVeicKeyReleased

    }//GEN-LAST:event_jFldPlacVeicKeyReleased

    private void jFldPlacVeicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldPlacVeicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jFldRntcVeic.requestFocus();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jFldPlacVeicKeyPressed

    private void jFldPlacVeicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldPlacVeicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFldPlacVeicActionPerformed

    private void jLabel7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel7KeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel7KeyPressed

    private void jBtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtCancelarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtCancelar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_LEFT) {
            jBtGravar.requestFocus();
        }
    }//GEN-LAST:event_jBtCancelarKeyPressed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        jPnlEdit.setVisible(false);
        jPnlBusca.setVisible(true);
        FieldBuscaCod.requestFocus();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtGravarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtGravarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtGravar.doClick();
        }

        if (evt.getKeyCode() == evt.VK_RIGHT) {
            jBtCancelar.requestFocus();
        }
    }//GEN-LAST:event_jBtGravarKeyPressed

    private void jBtGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtGravarActionPerformed
        Date date = new Date();
        SimpleDateFormat data1 = new SimpleDateFormat("yyyy/MM/dd");
             
        if ((tag_acao == "1") && (VerificaField() == true)) {
           PegaValor();

            try {
                    Inserir(Integer.parseInt(jFldCodVeic.getText()), jFldMarcaVeic.getText().toUpperCase(), jFldModVeic.getText().toUpperCase(),
                        jFldAnoVeic.getText().toUpperCase(), jFldCorVeic.getText().toUpperCase(), jFldPlacVeic.getText().toUpperCase(), jFdlCidVeic.getText().toUpperCase(),
                        jCmbBxUF.getSelectedItem().toString(), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKmInicialVeic.getText())), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKmFinalVeic.getText())), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKplitroVeic.getText())),
                        tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "1", Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKmFinalVeic.getText())), jFldRntcVeic.getText().toUpperCase(), TipoPropriedade,
                        sTP_CODCARROCERIA, sTP_CODRODADO, jFldRENAVAM.getText(), Integer.parseInt(jFldTaraKG.getText()), Integer.parseInt(jFldCapacidadeKG.getText()), Integer.parseInt(jFldCapacidadeM3.getText()),
                        jCmbBxTpRodado.getSelectedItem().toString(), jCmbBxTpCarroceria.getSelectedItem().toString(), jFldCodProprietario.getText(), jLblNomeProprietario.getText());
                    CarregaTudo();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error Inserir \n " + e.getLocalizedMessage());
                }
            }

            if ((tag_acao == "2") && (VerificaField() == true)) {
                  PegaValor();

                try {
                      Alterar(Integer.parseInt(jFldCodVeic.getText()), jFldPlacVeic.getText().toUpperCase(), jFldRntcVeic.getText().toUpperCase(),
                        jFldMarcaVeic.getText().toUpperCase(), jFldModVeic.getText().toUpperCase(), jFldAnoVeic.getText().toUpperCase(),
                        jFldCorVeic.getText().toUpperCase(), jFdlCidVeic.getText().toUpperCase(), jCmbBxUF.getSelectedItem().toString(), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldPesoVeic.getText())), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKmInicialVeic.getText())),
                        Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKmFinalVeic.getText())), Double.parseDouble(util.TrocaVirgulaPorPonto(jFldKplitroVeic.getText())), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "2", TipoPropriedade,
                        sTP_CODCARROCERIA, sTP_CODRODADO, jFldRENAVAM.getText(),Integer.parseInt(jFldTaraKG.getText()), Integer.parseInt(jFldCapacidadeKG.getText()), Integer.parseInt(jFldCapacidadeM3.getText()),
                        jCmbBxTpRodado.getSelectedItem().toString(), jCmbBxTpCarroceria.getSelectedItem().toString(), jFldCodProprietario.getText(), jLblNomeProprietario.getText());
                    CarregaTudo();
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error Alterar \n" + e.getLocalizedMessage());
                }
            }

            if ((tag_acao == "3") && (VerificaField() == true)) {
                try {
                    Deletar(Integer.parseInt(jFldCodVeic.getText()), tabusu.getCodigo(), tabusu.getNome(), util.FormataDataBanco(new Date()), "3");
                    CarregaTudo();
                } catch (SQLException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            // TODO add your handling code here:
    }//GEN-LAST:event_jBtGravarActionPerformed

    private void jRadioProprioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioProprioStateChanged
         // TODO add your handling code here:
         
        
    }//GEN-LAST:event_jRadioProprioStateChanged

    private void jRadioTerceiroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioTerceiroStateChanged
          // TODO add your handling code here:
         
    }//GEN-LAST:event_jRadioTerceiroStateChanged

  private void jFldTaraKGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldTaraKGKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) {
      jFldCapacidadeKG.requestFocus();
    }
  }//GEN-LAST:event_jFldTaraKGKeyPressed

  private void jFldCapacidadeKGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCapacidadeKGKeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) {
      jFldCapacidadeM3.requestFocus();
    }
  }//GEN-LAST:event_jFldCapacidadeKGKeyPressed

  private void jFldCapacidadeM3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCapacidadeM3KeyPressed
    if (evt.getKeyCode() == evt.VK_ENTER) {
      jFldCodProprietario.requestFocus();
    }
  }//GEN-LAST:event_jFldCapacidadeM3KeyPressed

  private void jFldTaraKGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldTaraKGFocusLost
    if(jFldTaraKG.getText().length() == 0){
      jFldTaraKG.setText("0");
    }
  }//GEN-LAST:event_jFldTaraKGFocusLost

  private void jFldCapacidadeKGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCapacidadeKGFocusLost
    if(jFldCapacidadeKG.getText().length() == 0){
      jFldCapacidadeKG.setText("0");
    }
  }//GEN-LAST:event_jFldCapacidadeKGFocusLost

  private void jFldCapacidadeM3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldCapacidadeM3FocusLost
    if(jFldCapacidadeM3.getText().length() == 0){
      jFldCapacidadeM3.setText("0");
    }
  }//GEN-LAST:event_jFldCapacidadeM3FocusLost

  private void jFldPlacVeicFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldPlacVeicFocusLost
   if(util.ValidaPlaca(jFldPlacVeic.getText()) == false){
      JOptionPane.showMessageDialog(null, "Placa inválida!");
      jFldPlacVeic.requestFocus();
    }
  }//GEN-LAST:event_jFldPlacVeicFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */


 /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaVeiculo().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(TelaVeiculo.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField FielBuscaPlaca;
  private javax.swing.JTextField FieldBuscaCod;
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.JButton jBtAlterar;
  private javax.swing.JButton jBtAnterior;
  private javax.swing.JButton jBtBuscaProprietario;
  private javax.swing.JButton jBtCancelar;
  private javax.swing.JButton jBtExcluir;
  private javax.swing.JButton jBtGravar;
  private javax.swing.JButton jBtInserir;
  private javax.swing.JButton jBtPrimeiro;
  private javax.swing.JButton jBtProximo;
  private javax.swing.JButton jBtUltimo;
  private javax.swing.JComboBox<String> jCmbBxTpCarroceria;
  private javax.swing.JComboBox<String> jCmbBxTpRodado;
  private javax.swing.JComboBox<String> jCmbBxUF;
  private javax.swing.JComboBox<String> jComboBoxOrdem;
  private javax.swing.JTextField jFdlCidVeic;
  private javax.swing.JTextField jFldAnoVeic;
  private javax.swing.JTextField jFldCapacidadeKG;
  private javax.swing.JTextField jFldCapacidadeM3;
  private javax.swing.JTextField jFldCodProprietario;
  private javax.swing.JTextField jFldCodVeic;
  private javax.swing.JTextField jFldCorVeic;
  private javax.swing.JFormattedTextField jFldKmFinalVeic;
  private javax.swing.JFormattedTextField jFldKmInicialVeic;
  private javax.swing.JFormattedTextField jFldKplitroVeic;
  private javax.swing.JTextField jFldMarcaVeic;
  private javax.swing.JTextField jFldModVeic;
  private javax.swing.JFormattedTextField jFldPesoVeic;
  private javax.swing.JTextField jFldPlacVeic;
  private javax.swing.JTextField jFldRENAVAM;
  private javax.swing.JTextField jFldRntcVeic;
  private javax.swing.JTextField jFldTaraKG;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JLabel jLabel17;
  private javax.swing.JLabel jLabel18;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel20;
  private javax.swing.JLabel jLabel21;
  private javax.swing.JLabel jLabel22;
  private javax.swing.JLabel jLabel23;
  private javax.swing.JLabel jLabel24;
  private javax.swing.JLabel jLabel25;
  private javax.swing.JLabel jLabel26;
  private javax.swing.JLabel jLabel27;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JLabel jLabelAcao;
  private javax.swing.JLabel jLblNomeProprietario;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPnlBotao;
  public javax.swing.JPanel jPnlBusca;
  public javax.swing.JPanel jPnlEdit;
  private javax.swing.JPanel jPnlEdtNorte;
  private javax.swing.JPanel jPnlEdtSul;
  private javax.swing.JPanel jPnlPrincipal;
  private javax.swing.JRadioButton jRadioProprio;
  private javax.swing.JRadioButton jRadioTerceiro;
  public javax.swing.JScrollPane jScrollPane;
  public javax.swing.JTable jTablePrincipal;
  // End of variables declaration//GEN-END:variables

    
    public void PegaValor(){
    
       if (jRadioProprio.isSelected()) {
            TipoPropriedade = "P";

        } else if (jRadioTerceiro.isSelected()) {

            TipoPropriedade = "T";

        }

        if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Não Aplicável")) {
            sTP_CODCARROCERIA = "00";

        } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Aberta")) {
            sTP_CODCARROCERIA = "01";

        } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Fechado\\Baú")) {
            sTP_CODCARROCERIA = "02";

        } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Granelera")) {
            sTP_CODCARROCERIA = "03";

        } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Porta Contêiner")) {
            sTP_CODCARROCERIA = "04";

        } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Sider")) {
            sTP_CODCARROCERIA = "05";

        }

        if (jCmbBxTpRodado.getSelectedItem().toString().equals("Truck")) {
            sTP_CODRODADO = "01";

        } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Toco")) {
            sTP_CODRODADO = "02";

        } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Cavalo Mecânico")) {
            sTP_CODRODADO = "03";

        } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("VAN")) {
            sTP_CODRODADO = "04";

        } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Utilitário")) {
            sTP_CODRODADO = "05";

        } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Outros")) {
            sTP_CODRODADO = "06";

        }
    }
    
    private void limpatabela() {
        DefaultTableModel tableModel = (DefaultTableModel) jTablePrincipal.getModel();
        tableModel.setNumRows(0);
    }

    public void CarregaTudo() {
        try {
            Conectar.ConectarBD();
            limpatabela();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from tabveic where rgevento <> '3'");
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    // "Código", "Placa", "Modelo", "Marca", "Tara", "Capacidade KG", "Capacidade M3", "RENAVAM","Código","Tipo Rodado", "Código","Tipo Carroceria", "Código","Proprietário" , "Cód.Usuário","Úsuario", "Data","Evento"

                    Conectar.result.getInt("CODVEIC"),
                    Conectar.result.getString("PLACA"),
                    Conectar.result.getString("MODELO"),
                    Conectar.result.getString("MARCA"),
                    Conectar.result.getInt("TARA"),
                    Conectar.result.getString("CAPACIDADE_KG"),
                    Conectar.result.getString("CAPACIDADE_M3"),
                    Conectar.result.getString("RENAVAM"),
                    Conectar.result.getString("TP_RODADO"),
                    Conectar.result.getString("RODADO"),
                    Conectar.result.getString("TP_CARROCERIA"),
                    Conectar.result.getString("CARROCERIA"),
                    Conectar.result.getString("CODPROP"),
                    Conectar.result.getString("NOMEPROP"),
                    Conectar.result.getInt("RGCODUSU"),
                    Conectar.result.getString("RGUSUARIO"),
                    Conectar.result.getDate("RGDATA"),
                    Conectar.result.getString("RGEVENTO"),});

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro Inserir \n" + e.getLocalizedMessage());
        }
    }

    public void BuscaCodigoMaximo() throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            Conectar.result = Conectar.stam.executeQuery("select max(codveic) + 1 from tabveic ");
            while (Conectar.result.next()) {

                codmaxveic = Conectar.result.getInt(1);
                if (codmaxveic <= 0) {
                    codmaxveic = 1;
                }
                jFldCodVeic.setText(Integer.toString(codmaxveic));

            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO \n" + e.getLocalizedMessage());

        }
    }

    public void BuscaPorParametro(String codveic, String nomveic) {
        try {
            sql = "";
            if (!"".equals(codveic)) {
                sql = " where (codveic= " + codveic + ") ";
            } else if (!"".equals(nomveic)) {
                sql = " where (placa like '" + nomveic + "%' )";
            }  else if (("".equals(nomveic)) & ("".equals(codveic))) {
                sql = "where (codveic is not null)";
            }

            if (jComboBoxOrdem.getSelectedItem().equals("Ordem")) {
                ordnar = "codveic";
            } else if (jComboBoxOrdem.getSelectedItem().equals("placa")) {
                ordnar = "placa";
            }

            limpatabela();
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from tabveic " + sql + " and (rgevento <> '3' ) order by " + ordnar);
            while (Conectar.result.next()) {

                dtm.addRow(new Object[]{
                    Conectar.result.getInt("CODVEIC"),
                    Conectar.result.getString("PLACA"),
                    Conectar.result.getString("MODELO"),
                    Conectar.result.getString("MARCA"),
                    Conectar.result.getInt("TARA"),
                    Conectar.result.getString("CAPACIDADE_KG"),
                    Conectar.result.getString("CAPACIDADE_M3"),
                    Conectar.result.getString("RENAVAM"),
                    Conectar.result.getString("TP_RODADO"),
                    Conectar.result.getString("RODADO"),
                    Conectar.result.getString("TP_CARROCERIA"),
                    Conectar.result.getString("CARROCERIA"),
                    Conectar.result.getString("CODPROP"),
                    Conectar.result.getString("NOMEPROP"),
                    Conectar.result.getInt("RGCODUSU"),
                    Conectar.result.getString("RGUSUARIO"),
                    Conectar.result.getDate("RGDATA"),
                    Conectar.result.getString("RGEVENTO"),});
            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "ERRO\n" + e.getLocalizedMessage());

        }
    }

    public void LimpaField() {
        jFldCodVeic.setText("");
        jFldPlacVeic.setText("");
        jFldRntcVeic.setText("");
        jRadioProprio.setSelected(true);
        jRadioTerceiro.setSelected(false);
        jFldModVeic.setText("");
        jFldRENAVAM.setText("");
        jFldAnoVeic.setText("");
        jFldMarcaVeic.setText("");
        jFldCorVeic.setText("");
        jFdlCidVeic.setText("");
        jFldKmFinalVeic.setText("0,00");
        jFldPesoVeic.setText("0,00");
        jFldKmInicialVeic.setText("0,00");
        jFldKplitroVeic.setText("0,00");
        jFldTaraKG.setText("0");
        jFldCapacidadeKG.setText("0");
        jFldCapacidadeM3.setText("0");
        jCmbBxTpCarroceria.setSelectedIndex(-1);
        jCmbBxTpRodado.setSelectedIndex(-1);
        jCmbBxUF.setSelectedIndex(-1);
        jFldCodProprietario.setText("");
        jFldCodProprietario.setEnabled(false);
        jBtBuscaProprietario.setEnabled(false);
    }

    public void DefinirFormulario() {
        setSize(600, 500);
        jPnlPrincipal.setSize(600, 500);
        jPnlBusca.setSize(600, 500);
        jPnlEdit.setSize(600, 500);
        jTablePrincipal.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        /*jTableVeic.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 11));
        jTableVeic.getTableHeader().setOpaque(false);
        jTableVeic.getTableHeader().setForeground(Color.white);
        jTableVeic.getTableHeader().setBackground(Color.blue);*/
        
        MeuRenderizador meurenderizador = new MeuRenderizador();

        for (int col = 0; col < jTablePrincipal.getColumnCount(); col++) {
            jTablePrincipal.getColumnModel().getColumn(col).setHeaderRenderer(new TelaVeiculo.MeuRenderizador());
        }

        centro.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        jTablePrincipal.getColumnModel().getColumn(0).setMaxWidth(60);
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(1).setMaxWidth(80);
        jTablePrincipal.getColumnModel().getColumn(1).setMinWidth(70);

        jTablePrincipal.getColumnModel().getColumn(2).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(2).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(3).setMaxWidth(100);
        jTablePrincipal.getColumnModel().getColumn(3).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(4).setMaxWidth(80);
        jTablePrincipal.getColumnModel().getColumn(4).setMinWidth(80);

        jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(6).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(6).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(7).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(7).setMinWidth(100);

        jTablePrincipal.getColumnModel().getColumn(8).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(8).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(9).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(9).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(10).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(10).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(11).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(11).setMinWidth(150);

        jTablePrincipal.getColumnModel().getColumn(12).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(12).setMinWidth(60);

        jTablePrincipal.getColumnModel().getColumn(13).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(13).setMinWidth(150);

// "Código", "Placa", "Modelo", "Marca", "Tara", "Capacidade KG", "Capacidade M3", "RENAVAM", "Tipo Rodado","Tipo Carroceria",  "Código","Proprietário" , "Cód.Usuário","Úsuario", "Data","Evento"
        //Adiciona as teclas ALT +  de atalho para os seguintes botões
        jBtInserir.setMnemonic(java.awt.event.KeyEvent.VK_I);
        jBtAlterar.setMnemonic(java.awt.event.KeyEvent.VK_A);
        jBtExcluir.setMnemonic(java.awt.event.KeyEvent.VK_E);
        jBtGravar.setMnemonic(java.awt.event.KeyEvent.VK_G);
        jBtCancelar.setMnemonic(java.awt.event.KeyEvent.VK_C);

    }

    public void CarregaCampoEdit(String codveic) {
        try {
            Conectar.ConectarBD();
            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel) jTablePrincipal.getModel();
            Conectar.result = Conectar.stam.executeQuery("select * from tabveic where(codveic = '" + codveic + "') and (rgevento <> '3') ");
            while (Conectar.result.next()) {
                jFldCodVeic.setText(Conectar.result.getString("codveic"));
                jFldPlacVeic.setText(Conectar.result.getString("placa"));
                jFldRntcVeic.setText(Conectar.result.getString("rntc"));
                jFldModVeic.setText(Conectar.result.getString("MODELO"));
                jFldMarcaVeic.setText(Conectar.result.getString("marca"));
                jFldAnoVeic.setText(Conectar.result.getString("ano"));
                jFldCorVeic.setText(Conectar.result.getString("cor"));
                jFdlCidVeic.setText(Conectar.result.getString("cidade"));

                if(Conectar.result.getString("PROPTERC") != null){
                    if (Conectar.result.getString("PROPTERC").equals("P")) {
                        jRadioProprio.setSelected(true);
                        jRadioTerceiro.setSelected(false);
                        jFldCodProprietario.setEnabled(false);
                        jFldCodProprietario.setText("");
                        jBtBuscaProprietario.setEnabled(false);
                        jLblNomeProprietario.setText("");
                        jFldRntcVeic.setText("");
                    } else if (Conectar.result.getString("PROPTERC").equals("T")) {
                        jRadioProprio.setSelected(false);
                        jRadioTerceiro.setSelected(true);
                        jFldCodProprietario.setEnabled(true);
                        jBtBuscaProprietario.setEnabled(true);
                    }
                }
                
                jFldPesoVeic.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("pesoveic")));
                jFldKmInicialVeic.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("kilomini")));
                jFldKmFinalVeic.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("kilomfim")));
                jFldKplitroVeic.setText(util.TrocaPontoPorVirgula(Conectar.result.getFloat("kilocomb")));

                if(Conectar.result.getString("TP_CARROCERIA") != null){
                    if (Conectar.result.getString("TP_CARROCERIA").equals("00")) {
                        jCmbBxTpCarroceria.setSelectedIndex(0);
                    } else if (Conectar.result.getString("TP_CARROCERIA").equals("01")) {
                        jCmbBxTpCarroceria.setSelectedIndex(1);
                    } else if (Conectar.result.getString("TP_CARROCERIA").equals("02")) {
                        jCmbBxTpCarroceria.setSelectedIndex(2);
                    } else if (Conectar.result.getString("TP_CARROCERIA").equals("03")) {
                        jCmbBxTpCarroceria.setSelectedIndex(3);
                    } else if (Conectar.result.getString("TP_CARROCERIA").equals("04")) {
                        jCmbBxTpCarroceria.setSelectedIndex(4);
                    } else if (Conectar.result.getString("TP_CARROCERIA").equals("05")) {
                        jCmbBxTpCarroceria.setSelectedIndex(5);
                    }
                }

                if(Conectar.result.getString("TP_RODADO") != null){
                    if (Conectar.result.getString("TP_RODADO").equals("01")) {
                        jCmbBxTpRodado.setSelectedIndex(0);
                    } else if (Conectar.result.getString("TP_RODADO").equals("02")) {
                        jCmbBxTpRodado.setSelectedIndex(1);
                    } else if (Conectar.result.getString("TP_RODADO").equals("03")) {
                        jCmbBxTpRodado.setSelectedIndex(2);
                    } else if (Conectar.result.getString("TP_RODADO").equals("04")) {
                        jCmbBxTpRodado.setSelectedIndex(3);
                    } else if (Conectar.result.getString("TP_RODADO").equals("05")) {
                        jCmbBxTpRodado.setSelectedIndex(4);
                    } else if (Conectar.result.getString("TP_RODADO").equals("06")) {
                        jCmbBxTpRodado.setSelectedIndex(5);
                    }
                }
                jCmbBxUF.setSelectedItem(Conectar.result.getString("estado"));
                jFldRENAVAM.setText(Conectar.result.getString("RENAVAM"));
                jFldTaraKG.setText(String.valueOf(Conectar.result.getInt("TARA")));
                jFldCapacidadeKG.setText(String.valueOf(Conectar.result.getInt("CAPACIDADE_KG")));
                jFldCapacidadeM3.setText(String.valueOf(Conectar.result.getInt("CAPACIDADE_M3")));
                jFldCodProprietario.setText(String.valueOf(Conectar.result.getInt("CODPROP")));
                jLblNomeProprietario.setText(Conectar.result.getString("NOMEPROP"));
            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro CarregaEdit...\n" + e.getLocalizedMessage());
        }

    }

    public void Inserir(Integer CODVEIC, String MARCA, String MODELO, String ANO, String COR, String PLACA, String CIDADE,
            String ESTADO, Double KILOMINI, Double KILOMFIM, Double KILOCOMB,
            Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO, Double PESOVEIC, String RNTC, String PROPTERC,
            String TP_CARROCERIA, String TP_RODADO, String RENAVAM, Integer TARA, Integer CAPACIDADE_KG, Integer CAPACIDADE_M3,
            String RODADO, String CARROCERIA, Object CODPROP, String NOMEPROP
    ) throws SQLException, InstantiationException, IllegalAccessException {

        if(CODPROP.equals("")){
            CODPROP = null;
        }
        
      
        try{
            Conectar.ConectarBD();

            System.out.println("insert into tabveic "
                    + " (CODVEIC, MARCA, MODELO, ANO, COR, PLACA, CIDADE, ESTADO, KILOMINI, KILOMFIM, KILOCOMB, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO, PESOVEIC, RNTC, PROPTERC, "
                    + " TP_CARROCERIA, TP_RODADO, RENAVAM, TARA, CAPACIDADE_KG, CAPACIDADE_M3, RODADO, CARROCERIA, CODPROP, NOMEPROP)"
                    + " values(" + CODVEIC + ", '" + MARCA + "', '" + MODELO + "', '" + ANO + "', '" + COR + "', '" + PLACA + "', '" + CIDADE + "', '" + ESTADO + "'," + KILOMINI + "," + KILOMFIM + "," + KILOCOMB
                    + "," + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "'," + PESOVEIC + ",'" + RNTC + "','" + PROPTERC + "','" + TP_CARROCERIA + "','" + TP_RODADO + "','" + RENAVAM + "'," + TARA + "," + CAPACIDADE_KG + "," + CAPACIDADE_M3 + ",'" + RODADO + "','" + CARROCERIA + "'," + CODPROP + ",'" + NOMEPROP + "' )");

            Conectar.stam.executeUpdate("insert into tabveic "
                    + " (CODVEIC, MARCA, MODELO, ANO, COR, PLACA, CIDADE, ESTADO, KILOMINI, KILOMFIM, KILOCOMB, RGCODUSU, RGUSUARIO, RGDATA, RGEVENTO, PESOVEIC, RNTC, PROPTERC, "
                    + " TP_CARROCERIA, TP_RODADO, RENAVAM, TARA, CAPACIDADE_KG, CAPACIDADE_M3, RODADO, CARROCERIA, CODPROP, NOMEPROP)"
                    + " values(" + CODVEIC + ", '" + MARCA + "', '" + MODELO + "', '" + ANO + "', '" + COR + "', '" + PLACA + "', '" + CIDADE + "', '" + ESTADO + "'," + KILOMINI + "," + KILOMFIM + "," + KILOCOMB
                    + "," + RGCODUSU + ",'" + RGUSUARIO + "','" + RGDATA + "','" + RGEVENTO + "'," + PESOVEIC + ",'" + RNTC + "','" + PROPTERC + "','" + TP_CARROCERIA + "','" + TP_RODADO + "','" + RENAVAM + "',"
                    + TARA + "," + CAPACIDADE_KG + "," + CAPACIDADE_M3 + ",'" + RODADO + "','" + CARROCERIA + "'," + CODPROP + ",'" + NOMEPROP + "' )");

            CarregaTudo();
            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            int resposta = JOptionPane.showConfirmDialog(null, "Registro inserido com sucesso.\n Deseja inserir outro?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (resposta == JOptionPane.YES_OPTION) {
                jBtInserir.doClick();
            } else {
                FieldBuscaCod.requestFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao inserir...\n" + e.getLocalizedMessage());
        }

    }

    public void Alterar(Integer CODVEIC, String PLACA, String RNTC, String MARCA, String MODELO, String ANO, String COR, String CIDADE,
            String ESTADO, Double PESOVEIC, Double KILOMINI, Double KILOMFIM, Double KILOCOMB,
            Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO, String PROPTERC,
            String TP_CARROCERIA, String TP_RODADO, String RENAVAM, Integer TARA, Integer CAPACIDADE_KG, Integer CAPACIDADE_M3,
            String RODADO, String CARROCERIA, Object CODPROP, String NOMEPROP)
            throws SQLException, InstantiationException, IllegalAccessException {
        
            if (CODPROP.equals("")){
                CODPROP = null;
            }
            
        try {
            if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Não Aplicável")) {
                TP_CARROCERIA = "00";
            } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Aberta")) {
                TP_CARROCERIA = "01";
            } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Fechado\\Baú")) {
                TP_CARROCERIA = "02";
            } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Granelera")) {
                TP_CARROCERIA = "03";
            } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Porta Contêiner")) {
                TP_CARROCERIA = "04";
            } else if (jCmbBxTpCarroceria.getSelectedItem().toString().equals("Sider")) {
                TP_CARROCERIA = "05";
            }

            if (jCmbBxTpRodado.getSelectedItem().toString().equals("Truck")) {
                TP_RODADO = "01";
            } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Toco")) {
                TP_RODADO = "02";
            } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Cavalo Mecânico")) {
                TP_RODADO = "03";
            } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("VAN")) {
                TP_RODADO = "04";
            } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Utilitário")) {
                TP_RODADO = "05";
            } else if (jCmbBxTpRodado.getSelectedItem().toString().equals("Outros")) {
                TP_RODADO = "06";
            }

            Conectar.ConectarBD();
            System.out.println("update tabveic set "
                    + " placa         = '" + PLACA + "',"
                    + " rntc          = '" + RNTC + "',"
                    + " MARCA         = '" + MARCA + "', "
                    + " MODELO        = '" + MODELO + "', "
                    + " ANO           = '" + ANO + "', "
                    + " COR           = '" + COR + "', "
                    + " CIDADE        = '" + CIDADE + "', "
                    + " ESTADO        = '" + ESTADO + "', "
                    + " PESOVEIC      =  " + PESOVEIC + ", "
                    + " KILOMINI      = " + KILOMINI + ", "
                    + " KILOMFIM      = " + KILOMFIM + ", "
                    + " KILOCOMB      = " + KILOCOMB + ", "
                    + " RGCODUSU      = '" + RGCODUSU + "', "
                    + " RGUSUARIO     = '" + RGUSUARIO + "', "
                    + " RGDATA        = '" + RGDATA + "', "
                    + " RGEVENTO      = '" + RGEVENTO + "', "
                    + " PROPTERC      = '" + PROPTERC + "', "
                    + " TP_CARROCERIA = '" + TP_CARROCERIA + "',"
                    + " TP_RODADO     = '" + TP_RODADO + "',"
                    + " RENAVAM       = '" + RENAVAM + "',"
                    + " TARA          = '" + TARA + "',"
                    + " CAPACIDADE_KG = '" + CAPACIDADE_KG + "',"
                    + " CAPACIDADE_M3 = '" + CAPACIDADE_M3 + "',"
                    + " CARROCERIA    = '" + CARROCERIA + "',"
                    + " RODADO        = '" + RODADO + "',"
                    + " CODPROP       = " + CODPROP + ","
                    + " NOMEPROP      = '" + NOMEPROP + "'"
                    + " where codveic = " + CODVEIC);

            Conectar.stam.executeUpdate("update tabveic set "
                    + " placa         = '" + PLACA + "',"
                    + " rntc          = '" + RNTC + "',"
                    + " MARCA         = '" + MARCA + "', "
                    + " MODELO        = '" + MODELO + "', "
                    + " ANO           = '" + ANO + "', "
                    + " COR           = '" + COR + "', "
                    + " CIDADE        = '" + CIDADE + "', "
                    + " ESTADO        = '" + ESTADO + "', "
                    + " PESOVEIC      =  " + PESOVEIC + ", "
                    + " KILOMINI      = " + KILOMINI + ", "
                    + " KILOMFIM      = " + KILOMFIM + ", "
                    + " KILOCOMB      = " + KILOCOMB + ", "
                    + " RGCODUSU      = '" + RGCODUSU + "', "
                    + " RGUSUARIO     = '" + RGUSUARIO + "', "
                    + " RGDATA        = '" + RGDATA + "', "
                    + " RGEVENTO      = '" + RGEVENTO + "', "
                    + " PROPTERC      = '" + PROPTERC + "', "
                    + " TP_CARROCERIA = '" + TP_CARROCERIA + "',"
                    + " TP_RODADO     = '" + TP_RODADO + "',"
                    + " RENAVAM       = '" + RENAVAM + "',"
                    + " TARA          = '" + TARA + "',"
                    + " CAPACIDADE_KG = '" + CAPACIDADE_KG + "',"
                    + " CAPACIDADE_M3 = '" + CAPACIDADE_M3 + "',"
                    + " CARROCERIA    = '" + CARROCERIA + "',"
                    + " RODADO        = '" + RODADO + "',"
                    + " CODPROP       = " + CODPROP + ","
                    + " NOMEPROP      = '" + NOMEPROP + "'"
                    + " where codveic = " + CODVEIC);

            jPnlEdit.setVisible(false);
            jPnlBusca.setVisible(true);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
            Conectar.DesconectarBD();
            FieldBuscaCod.requestFocus();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Não foi salvo o produto\n" + ex.getLocalizedMessage());
            System.out.println("Não foi salvo o produto\n" + ex.getLocalizedMessage());
            Conectar.con.rollback();
        }
    }

    public void Deletar(Integer CODVEIC, Integer RGCODUSU, String RGUSUARIO, String RGDATA, String RGEVENTO)
            throws SQLException, InstantiationException, IllegalAccessException {
        try {
            Conectar.ConectarBD();
            System.out.println("update tabven set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where codveic = " + CODVEIC);

            Conectar.stam.executeUpdate("update tabveic set "
                    + "rgcodusu     = " + RGCODUSU + ", "
                    + "rgusuario    = '" + RGUSUARIO + "', "
                    + "rgdata       = '" + RGDATA + "', "
                    + "rgevento     = '" + RGEVENTO + "'"
                    + "where codveic = " + CODVEIC);

            jPnlBusca.setVisible(true);
            jPnlEdit.setVisible(false);
            CarregaTudo();
            JOptionPane.showMessageDialog(null, "Deletado com sucesso!");
            Conectar.DesconectarBD();
            FieldBuscaCod.requestFocus();
        } catch (SQLException ex) {
            System.out.println("Não foi salvo o produto\n" + ex.getLocalizedMessage());
            Conectar.con.rollback();
        }

    }

    public void CarregaUF() throws SQLException, InstantiationException, IllegalAccessException {
        Conectar.ConectarBD();
        Conectar.result = Conectar.stam.executeQuery(" Select * from ESTADOS ");
        while (Conectar.result.next()) {
            jCmbBxUF.addItem(Conectar.result.getString("SIGLA"));

        }
    }

    public boolean VerificaField() {
      
        if(util.ValidaPlaca(jFldPlacVeic.getText()) == false){
          JOptionPane.showMessageDialog(null, "Placa inválida!");
          jFldPlacVeic.requestFocus();
          return false;
        }
        if (jFldPlacVeic.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Placa não preenchido!");
            jFldPlacVeic.requestFocus();
            return false;
        }else if((jFldRntcVeic.getText().length() == 0) & (jRadioTerceiro.isSelected() == true)){
            JOptionPane.showMessageDialog(null, "Rntc nao preenchido!");
            jFldRntcVeic.requestFocus();
            return false;    
        }else if(jFldModVeic.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "Modelo não preechido!");
            jFldModVeic.requestFocus();
            return false;
        }else  if (jFldMarcaVeic.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Marca não preenchida!");
            jFldMarcaVeic.requestFocus();
            return false;
        }else  if (jCmbBxTpCarroceria.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Tipo da Carroceria não preenchido!");
            jCmbBxTpCarroceria.requestFocus();
            return false;
        }else  if (jCmbBxTpRodado.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Tipo do Rodado não preenchido!");
            jCmbBxTpRodado.requestFocus();
            return false;
        }else  if (jCmbBxUF.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "UF não preenchido!");
            jCmbBxUF.requestFocus();
            return false;
        }else  if ((jFldRENAVAM.getText().length() < 9) || (jFldRENAVAM.getText().length() > 11)) {
            JOptionPane.showMessageDialog(null, "RENAVAM tem que ser maior que 9 e menor que 11 caracteres!");
            jFldRENAVAM.requestFocus();
            return false;
        }else  if (jFldTaraKG.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Tara não preenchido!");
            jFldTaraKG.requestFocus();
            return false;
        } else if ((jFldCodProprietario.getText().length() == 0) && (jRadioTerceiro.isSelected() == true)) {
            JOptionPane.showMessageDialog(null, "Proprietário não preenchido!");
            jFldCodProprietario.requestFocus();
            return false;
        }else {
            return true;
        }
             
    }
     
    
    public String BuscaProprietario(String cod) {
        String Desc = "";
        jFldRntcVeic.setText("");
        
        try {
            Conectar.ConectarBD();
            if (cod.length() != 0) {
                Conectar.result = Conectar.stam.executeQuery("select * from MDFE_CAD_PROPRIETARIO where (COD_PROPRIETARIO = " + cod + ") and (RGEVENTO <> '3') ");
                while (Conectar.result.next()) {
                    Desc = Conectar.result.getString("PROP_NOME");
                    jFldRntcVeic.setText(Conectar.result.getString("PROP_RNTRC"));
                }
            }

            Conectar.DesconectarBD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro... \n" + e.getLocalizedMessage());
        }

        return Desc;
    }
    
    
    public String BuscaEmitenteRNTRC(String cod) {
        String Desc = "";
        jFldRntcVeic.setText("");
        
        try {
            Conectar.ConectarBD();
            if (cod.length() != 0) {
                Conectar.result = Conectar.stam.executeQuery("select * from TABFIL where (CODFIL = " + cod + ") and (RGEVENTO <> '3') ");
                while (Conectar.result.next()) {
                    Desc = Conectar.result.getString("RNTRC");
                    
                }
            }

            Conectar.DesconectarBD();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro... \n" + e.getLocalizedMessage());
        }

        return Desc;
    }

    public Integer VerificaCodigo(String codigo) {
        if (codigo.length() > 0) {
            return Integer.parseInt(codigo);
        } else {
            return null;
        }
    }

    public void SairEsc() {
        KeyStroke ks = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, true);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks, "esc");
        getRootPane().getActionMap().put("esc", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                if (jPnlBusca.isVisible() == true) {
                    dispose();
                } else if (jPnlEdit.isVisible() == true) {
                    jPnlEdit.setVisible(false);
                    jPnlBusca.setVisible(true);
                    FieldBuscaCod.requestFocus();
                }
            }
        });
    }

    /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            setFont(getFont().deriveFont(Font.BOLD));
            setOpaque(false);
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setFont(getFont().deriveFont(Font.BOLD));
            setHorizontalAlignment(SwingConstants.LEFT);
            setText(value.toString());

            return this;
        }

    }

}
