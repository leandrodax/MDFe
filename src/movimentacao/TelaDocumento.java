/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentacao;

import ConexaoDB.Conectar;
import Utilitarios.LimitaField;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author PC
 */
public class TelaDocumento extends javax.swing.JDialog {

    Integer selecionada, valor;
    String sql, ordnar;
    public Integer codmax;

    DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
    DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
    DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
    Utilitarios util = new Utilitarios();
    private String sTAG_ACAO2, sCHAVE2;

    public TelaDocumento(String sTAG_ACAO, String sCHAVE) {
        sTAG_ACAO2 = sTAG_ACAO;
        sCHAVE2 = sCHAVE;
        initComponents();
        DefinirFormulario();
        
        SairEsc();
    }

    private TelaDocumento() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnlPrincipal = new javax.swing.JPanel();
        jPnlBusca = new javax.swing.JPanel();
        jBtOk = new javax.swing.JButton();
        jBtCancelar = new javax.swing.JButton();
        jLblCodigoDeBarras = new javax.swing.JLabel();
        jFldCodigoDeBarras = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jFldChave = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePrincipal = new javax.swing.JTable();
        jBtInserir = new javax.swing.JButton();
        jBtAlterar = new javax.swing.JButton();
        jBtExcluir = new javax.swing.JButton();
        jBtInfProPeri = new javax.swing.JButton();
        jLblSituacaoChave = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jFldindReentrega = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPnlPrincipal.setLayout(new java.awt.CardLayout());

        jPnlBusca.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jBtOk.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jBtOk.setText("OK");
        jBtOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtOkActionPerformed(evt);
            }
        });
        jBtOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtOkKeyPressed(evt);
            }
        });

        jBtCancelar.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jBtCancelar.setText("Fechar");
        jBtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtCancelarActionPerformed(evt);
            }
        });
        jBtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtCancelarKeyPressed(evt);
            }
        });

        jLblCodigoDeBarras.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLblCodigoDeBarras.setText("Código de Barras");

        jFldCodigoDeBarras.setDocument(new LimitaField(36, 1)
        );
        jFldCodigoDeBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFldCodigoDeBarrasKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel2.setText("*Chave de Acesso");

        jFldChave.setDocument(new LimitaField(44, 2)
        );
        jFldChave.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jFldChaveAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jFldChave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFldChaveKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFldChaveKeyReleased(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Unidades de Transporte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jTablePrincipal.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jTablePrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "", "Código", "Tipo de Transporte", "Identificação", "Qtd. Rateada", "Qtd. Un de Carga", "Qtd. de Lacres"
            }
        ){
            @Override
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex == 0){
                    return true;
                }else{
                    return false;
                }
                //Disallow the editing of any cell
            };

            Class[] types = new Class [] {

                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class , java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class

            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

        });
        jTablePrincipal.getTableHeader().setResizingAllowed(false);
        jTablePrincipal.getTableHeader().setReorderingAllowed(false);
        jTablePrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePrincipalMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePrincipalMouseReleased(evt);
            }
        });
        jTablePrincipal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTablePrincipalPropertyChange(evt);
            }
        });
        jTablePrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTablePrincipalKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePrincipal);

        jBtInserir.setText("Inserir");
        jBtInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtInserirActionPerformed(evt);
            }
        });
        jBtInserir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtInserirKeyPressed(evt);
            }
        });

        jBtAlterar.setText("Alterar");
        jBtAlterar.setEnabled(false);
        jBtAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAlterarActionPerformed(evt);
            }
        });
        jBtAlterar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtAlterarKeyPressed(evt);
            }
        });

        jBtExcluir.setText("Excluir");
        jBtExcluir.setEnabled(false);
        jBtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtExcluirActionPerformed(evt);
            }
        });
        jBtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtExcluirKeyPressed(evt);
            }
        });

        jBtInfProPeri.setText("Informar Produtos Perigosos");
        jBtInfProPeri.setEnabled(false);
        jBtInfProPeri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtInfProPeriActionPerformed(evt);
            }
        });
        jBtInfProPeri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBtInfProPeriKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1062, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jBtInserir)
                .addGap(3, 3, 3)
                .addComponent(jBtAlterar)
                .addGap(3, 3, 3)
                .addComponent(jBtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtInfProPeri)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtInfProPeri, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLblSituacaoChave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/wrong_icon.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("Indicador de Reentrega");

        jFldindReentrega.setDocument(new LimitaField(1, 1));
        jFldindReentrega.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFldindReentregaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPnlBuscaLayout = new javax.swing.GroupLayout(jPnlBusca);
        jPnlBusca.setLayout(jPnlBuscaLayout);
        jPnlBuscaLayout.setHorizontalGroup(
            jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPnlBuscaLayout.createSequentialGroup()
                        .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPnlBuscaLayout.createSequentialGroup()
                                .addComponent(jBtOk, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPnlBuscaLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jFldChave, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLblSituacaoChave))
                            .addGroup(jPnlBuscaLayout.createSequentialGroup()
                                .addComponent(jLblCodigoDeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jFldCodigoDeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jFldindReentrega, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(8, 8, 8))
        );
        jPnlBuscaLayout.setVerticalGroup(
            jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlBuscaLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFldChave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLblSituacaoChave)))
                .addGap(5, 5, 5)
                .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblCodigoDeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jFldCodigoDeBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(jFldindReentrega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15)
                .addGroup(jPnlBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtOk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );

        jPnlPrincipal.add(jPnlBusca, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPnlPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jBtOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtOkActionPerformed
        
        if (jFldChave.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe a Chave!");
            jFldChave.requestFocus();
        }if(jFldCodigoDeBarras.getText().length() > 0 && jFldCodigoDeBarras.getText().length() < 36){
            JOptionPane.showMessageDialog(null, "Código de Barras deve conter 36 dígitos!");
            jFldCodigoDeBarras.requestFocus();
        } else {
            AlterarDocCte(util.sCODDOC, util.sDAD_CODIGO.toString(), jFldChave.getText(), jFldCodigoDeBarras.getText(), QtdUnidadeTransporte(), util.sTIPO_DOC, util.sCOD_MUN, jFldindReentrega.getText());
            this.dispose();
        }

    }//GEN-LAST:event_jBtOkActionPerformed

    private void jBtOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtOkKeyPressed

    }//GEN-LAST:event_jBtOkKeyPressed

    private void jBtInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInserirActionPerformed

        TelaUnidadeTransporte telaUnTransp = new TelaUnidadeTransporte(util.sDAD_CODIGO.toString(), null, util.sTIPO_DOC, jFldChave.getText(), "1");
        telaUnTransp.setVisible(true);
        CarregaUnTransporte(util.sDAD_CODIGO.toString(), util.sCODDOC, util.sTIPO_DOC, util.sCOD_MUN);
    }//GEN-LAST:event_jBtInserirActionPerformed

    private void jBtInserirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtInserirKeyPressed

    }//GEN-LAST:event_jBtInserirKeyPressed

    private void jBtAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAlterarActionPerformed
        for (int linha = 0; linha < jTablePrincipal.getRowCount(); linha++) {
            if (((boolean) jTablePrincipal.getValueAt(linha, 0)) == true) {
                util.sCOD_TRANSPORTE = jTablePrincipal.getValueAt(linha, 1).toString();
                TelaUnidadeTransporte telaUnTransp = new TelaUnidadeTransporte(util.sDAD_CODIGO.toString(), jTablePrincipal.getValueAt(linha, 1).toString(), "C", jFldChave.getText(), "2");
                telaUnTransp.setVisible(true);
            }
        }
        CarregaUnTransporte(util.sDAD_CODIGO.toString(), util.sCODDOC, util.sTIPO_DOC, util.sCOD_MUN);
    }//GEN-LAST:event_jBtAlterarActionPerformed

    private void jBtAlterarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtAlterarKeyPressed

    }//GEN-LAST:event_jBtAlterarKeyPressed

    private void jBtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtExcluirActionPerformed
      
        Integer option = JOptionPane.showConfirmDialog(null, "Deseja excluir a(s) unidade(s) de transporte selecionada(s)?", "Confirmação", JOptionPane.YES_NO_OPTION);
        if (option == JOptionPane.YES_OPTION) {

            for (int linha = 0; linha < jTablePrincipal.getRowCount(); linha++) {
                if (((boolean) jTablePrincipal.getValueAt(linha, 0)) == true) {
                    Deletar(jTablePrincipal.getValueAt(linha, 1).toString(), util.sDAD_CODIGO.toString(), util.sCOD_MUN, util.sTIPO_DOC);
                    DeletarLacres(util.sDAD_CODIGO.toString(), jTablePrincipal.getValueAt(linha, 1).toString(), util.sCOD_MUN, util.sTIPO_DOC);
                    DeletarUndCarga(util.sDAD_CODIGO.toString(), jTablePrincipal.getValueAt(linha, 1).toString(), util.sCODDOC, 
                            util.sTIPO_DOC, util.sCOD_MUN);
                    //deletar cargar
                }
            }
            CarregaUnTransporte(util.sDAD_CODIGO.toString(), util.sCODDOC, util.sTIPO_DOC, util.sCOD_MUN);
        }

       
      
    }//GEN-LAST:event_jBtExcluirActionPerformed

    private void jBtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtExcluirKeyPressed

    }//GEN-LAST:event_jBtExcluirKeyPressed

    private void jBtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtCancelarActionPerformed

    private void jBtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtCancelarKeyPressed

    }//GEN-LAST:event_jBtCancelarKeyPressed

    private void jTablePrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePrincipalKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jBtOk.doClick();
        }
    }//GEN-LAST:event_jTablePrincipalKeyPressed

    private void jTablePrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseClicked
        
    }//GEN-LAST:event_jTablePrincipalMouseClicked

    private void jTablePrincipalMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePrincipalMouseReleased
        
    }//GEN-LAST:event_jTablePrincipalMouseReleased

    private void jFldChaveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldChaveKeyReleased
        ImageIcon ok = new ImageIcon(getClass().getResource("/imagens/ok_icon.png"));
        ImageIcon errado = new ImageIcon(getClass().getResource("/imagens/wrong_icon.png"));
        
        if(jFldChave.getText().length() == 44){
            if(jFldChave.getText().substring(43, 44).equals(util.GerarDigitoVerificador(jFldChave.getText().substring(0, 43)).toString())){
                jLblSituacaoChave.setIcon(ok);
                jFldCodigoDeBarras.setEnabled(true);
            }
        }else{
            jLblSituacaoChave.setIcon(errado);
            jFldCodigoDeBarras.setEnabled(false);
        }
    }//GEN-LAST:event_jFldChaveKeyReleased

    private void jFldChaveAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldChaveAncestorAdded
        ImageIcon ok = new ImageIcon(getClass().getResource("/imagens/ok_icon.png"));
        ImageIcon errado = new ImageIcon(getClass().getResource("/imagens/wrong_icon.png"));
        
        if(jFldChave.getText().length() == 44){
            if(jFldChave.getText().substring(43, 44).equals(util.GerarDigitoVerificador(jFldChave.getText().substring(0, 43)).toString())){
                jLblSituacaoChave.setIcon(ok);
                jFldCodigoDeBarras.setEnabled(true);
            }
        }else{
            jLblSituacaoChave.setIcon(errado);
            jFldCodigoDeBarras.setEnabled(false);
        }
    }//GEN-LAST:event_jFldChaveAncestorAdded

    private void jFldChaveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldChaveKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(jFldCodigoDeBarras.isVisible() == true && jFldCodigoDeBarras.isEnabled() == true){
                jFldCodigoDeBarras.requestFocus();
            }else {
                jFldindReentrega.requestFocus();
            }
        }
    }//GEN-LAST:event_jFldChaveKeyPressed

  private void jBtInfProPeriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtInfProPeriActionPerformed
                  
    for (int linha = 0; linha < jTablePrincipal.getRowCount(); linha++) {
        if (((boolean) jTablePrincipal.getValueAt(linha, 0)) == true) {
            util.CODTRANSPORTE =    jTablePrincipal.getValueAt(linha, 1).toString();
        }
    }
   TelaPerigo telaperigo = new TelaPerigo();    
    telaperigo.setVisible(true);
  //  TelaProprietario.setVisible(true);
  }//GEN-LAST:event_jBtInfProPeriActionPerformed

  private void jBtInfProPeriKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBtInfProPeriKeyPressed
    // TODO add your handling code here:
  }//GEN-LAST:event_jBtInfProPeriKeyPressed

  private void jTablePrincipalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTablePrincipalPropertyChange
      int Selecionada = 0;
      for (int linha = 0; linha < jTablePrincipal.getRowCount(); linha++) {
          if (((boolean) jTablePrincipal.getValueAt(linha, 0))) {
              Selecionada++;

          }
      }

      if (Selecionada == 1) {
          jBtExcluir.setEnabled(true);
          jBtAlterar.setEnabled(true);
          jBtInfProPeri.setEnabled(true);
      } else if (Selecionada >= 2) {
          jBtAlterar.setEnabled(false);
          jBtInfProPeri.setEnabled(false);
      } else if (Selecionada == 0) {
          jBtExcluir.setEnabled(false);
          jBtAlterar.setEnabled(false);
          jBtInfProPeri.setEnabled(false);
      }
  }//GEN-LAST:event_jTablePrincipalPropertyChange

    private void jFldCodigoDeBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldCodigoDeBarrasKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
                jFldindReentrega.requestFocus();
            
        }
    }//GEN-LAST:event_jFldCodigoDeBarrasKeyPressed

    private void jFldindReentregaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldindReentregaKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jBtOk.requestFocus();
        }
    }//GEN-LAST:event_jFldindReentregaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate=" collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDocumento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDocumento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtAlterar;
    private javax.swing.JButton jBtCancelar;
    private javax.swing.JButton jBtExcluir;
    private javax.swing.JButton jBtInfProPeri;
    private javax.swing.JButton jBtInserir;
    private javax.swing.JButton jBtOk;
    private javax.swing.JTextField jFldChave;
    private javax.swing.JTextField jFldCodigoDeBarras;
    private javax.swing.JTextField jFldindReentrega;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLblCodigoDeBarras;
    private javax.swing.JLabel jLblSituacaoChave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlBusca;
    private javax.swing.JPanel jPnlPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePrincipal;
    // End of variables declaration//GEN-END:variables

    public void DefinirFormulario() {
        setTitle("Unidade de Transporte");
        setSize(1130, 530);
      
        jPnlPrincipal.setSize(850, 400);
        jPnlBusca.setSize(850, 400);
        setLocationRelativeTo(this);
        setResizable(true);
        setModal(true);

        jTablePrincipal.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        for (int col = 0; col < jTablePrincipal.getColumnCount(); col++) {
            jTablePrincipal.getColumnModel().getColumn(col).setHeaderRenderer(new MeuRenderizador());
        }

        if (sTAG_ACAO2.equals("1")) {
            jFldChave.setText("");
        } else {
            jFldChave.setText(sCHAVE2);
            jFldCodigoDeBarras.setText(util.sCOD_BARRAS);
            jFldindReentrega.setText(util.sIND_REENTREGA);
            CarregaUnTransporte(util.sDAD_CODIGO.toString(),  util.sCODDOC, util.sTIPO_DOC, util.sCOD_MUN);
        }
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);

        //Define o tamanho das colunas e posicoes das celulas        
        jTablePrincipal.getColumnModel().getColumn(0).setMinWidth(30);
        jTablePrincipal.getColumnModel().getColumn(0).setMaxWidth(30);

        //codigo
        jTablePrincipal.getColumnModel().getColumn(1).setMinWidth(80);
        jTablePrincipal.getColumnModel().getColumn(1).setMaxWidth(150);
        jTablePrincipal.getColumnModel().getColumn(1).setCellRenderer(esquerda);

        /*
        //Tipo de Transporte
        jTablePrincipal.getColumnModel().getColumn(2).setMinWidth(230);
        jTablePrincipal.getColumnModel().getColumn(2).setMaxWidth(500);
        jTablePrincipal.getColumnModel().getColumn(2).setCellRenderer(esquerda);

        //Identificação
        jTablePrincipal.getColumnModel().getColumn(3).setMinWidth(230);
        jTablePrincipal.getColumnModel().getColumn(3).setMaxWidth(300);
        jTablePrincipal.getColumnModel().getColumn(3).setCellRenderer(esquerda);

        //Quantidade Rateada
        jTablePrincipal.getColumnModel().getColumn(4).setMinWidth(100);
        jTablePrincipal.getColumnModel().getColumn(4).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(4).setCellRenderer(esquerda);

        //Quantidade de Unidade de Carga
        jTablePrincipal.getColumnModel().getColumn(5).setMinWidth(100);
        jTablePrincipal.getColumnModel().getColumn(5).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(5).setCellRenderer(esquerda);

        //Quantidade de Lacres
        jTablePrincipal.getColumnModel().getColumn(6).setMinWidth(100);
        jTablePrincipal.getColumnModel().getColumn(6).setMaxWidth(200);
        jTablePrincipal.getColumnModel().getColumn(6).setCellRenderer(esquerda);
        */
        
        //Adiciona as teclas de atalho  ALT + para os seguintes botões
        jBtOk.setMnemonic(java.awt.event.KeyEvent.VK_O);
        jBtCancelar.setMnemonic(java.awt.event.KeyEvent.VK_C);
        
        if(util.sTIPO_DOC.equals("C")){
            setTitle("Conhecimento de Transporte Eletrônico");
            jLblCodigoDeBarras.setVisible(true);
            jFldCodigoDeBarras.setVisible(true);
        }else if(util.sTIPO_DOC.equals("N")){
            setTitle("Nota Fiscal Eletrônica");
            jLblCodigoDeBarras.setVisible(false);
            jFldCodigoDeBarras.setVisible(false);
        }else if(util.sTIPO_DOC.equals("M")){
            setTitle("Manifesto Eletrônico de Documentos Fiscais");
            jLblCodigoDeBarras.setVisible(false);
            jFldCodigoDeBarras.setVisible(false);
        }

    }

    public void LimpaTabela() {
        DefaultTableModel tableModel = (DefaultTableModel) jTablePrincipal.getModel();
        tableModel.setNumRows(0);
    }

    
     public Integer QtdUnidadeTransporte(){
        Integer qtd =0;
        try {  
            Conectar.ConectarBD();
            System.out.println("SELECT count(*) "
                                            + "FROM MDFE_UN_TRANSPORTE "
                                            + "WHERE CODDOC = '"+util.sCODDOC+"' AND DAD_CODIGO = '"+util.sDAD_CODIGO+"' "
                                                    + "AND TP_DOC ='"+util.sTIPO_DOC+"' AND COD_MUN = '"+ util.sCOD_MUN +"' ");
            Conectar.result = Conectar.stam.executeQuery("SELECT count(*) "
                                                       + "FROM MDFE_UN_TRANSPORTE "
                                                       + "WHERE CODDOC = '"+util.sCODDOC+"' AND DAD_CODIGO = '"+util.sDAD_CODIGO+"' "
                                                               + "AND TP_DOC ='"+util.sTIPO_DOC+"' AND COD_MUN = '"+ util.sCOD_MUN +"' ");
                                                        
            while (Conectar.result.next()) {
                if (Conectar.result.getString(1) != null) {
                   qtd = Conectar.result.getInt(1);
                } 
                
            }
            
            Conectar.DesconectarBD();
           
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao gerar código...\n" + e.getLocalizedMessage());
        }
        System.out.println(qtd);
        return qtd;
    } 
    
    public void CarregaUnTransporte(String Dados_codigo, String Doc_codigo, String Tipo, String CodMun) {
        try {
            Conectar.ConectarBD();
            LimpaTabela();
            System.out.println("SELECT * FROM MDFE_UN_TRANSPORTE WHERE DAD_CODIGO = '" + Dados_codigo + "' AND CODDOC = '" + Doc_codigo +"' AND TP_DOC = '" +Tipo +"' AND COD_MUN = '"+ CodMun +"' ");
            Conectar.result = Conectar.stam.executeQuery("SELECT * FROM MDFE_UN_TRANSPORTE WHERE DAD_CODIGO = '" + Dados_codigo + "' and CODDOC = '" + Doc_codigo +"' AND TP_DOC = '" +Tipo +"' AND COD_MUN = '"+ CodMun +"' ");
            DefaultTableModel dtm = (DefaultTableModel) jTablePrincipal.getModel();
            while (Conectar.result.next()) {
                dtm.addRow(new Object[]{
                    false,
                    Conectar.result.getString("COD_TRANSP"),
                    CampoCalcTpTransporte(Conectar.result.getString("TP_UN_TRANS")),
                    Conectar.result.getString("ID_UN_TRANS"),
                    Conectar.result.getString("QTD_RAT_TRANS"),
                    Conectar.result.getString("QTD_CARGA"),
                    Conectar.result.getString("QTD_LACRE")
                });
            }
            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao carregar CarregaUnTransporte na tabela...\n" + e.getLocalizedMessage());
        }
    }

    //Evento para sair da tela com a tecla esc
    //Chamar evento no construtor principal da classe
    public void SairEsc() {
        KeyStroke ks = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, true);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(ks, "esc");
        getRootPane().getActionMap().put("esc", new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                dispose();
            }
        });
    }

    /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            table.getTableHeader().setOpaque(false);
            //table.getTableHeader().setFont(new Font("Dialog", 11, Font.BOLD));
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setFont(getFont().deriveFont(Font.BOLD));
            setHorizontalAlignment(SwingConstants.LEFT);

            setText(value.toString());

            return this;
        }
    }

     public void InserirDocCte(String CodDoc, String dadCodigo, String Chave, String QtdTransp, String Tipo, String IndReentrega) {
        try {
            Conectar.ConectarBD();
         
            System.out.println("INSERT INTO MDFE_DOCUMENTO  "
                    + "(CODDOC, DAD_CODIGO, CHAVE, QTD_UN_TRANP, TP_DOC    )"
                    + "values('" + CodDoc + "','" + dadCodigo + "', '" + Chave + "', '" + QtdTransp + "', '" + Tipo + "')"
            );

            Conectar.stam.executeUpdate("INSERT INTO MDFE_DOCUMENTO  "
                    + "(CODDOC, DAD_CODIGO, CHAVE, QTD_UN_TRANP, TP_DOC    )"
                    + "values('" + CodDoc + "','" + dadCodigo + "', '" + Chave + "', '" + QtdTransp + "', '" + Tipo + "')"
            );

            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao inserir...\n" + e.getLocalizedMessage());
        }
    }

   

    public void AlterarDocCte(String CodDoc, String dadCodigo, String chave, String CodBarra, Integer QtdTransp, String Tipo, String CodMun, String IndReentrega) {
        try {
            Conectar.ConectarBD();

            System.out.println("UPDATE MDFE_DOCUMENTO  SET "
                    + "CHAVE            = '" + chave     + "', "
                    + "QTD_UN_TRANP     = " + QtdTransp + ", "
                    + "COD_BARRAS       = '"+ CodBarra +"', "
                    + "INDREENTREGA     = '"+ IndReentrega +"' "
                    + "WHERE CODDOC     = '" + CodDoc    + "' AND DAD_CODIGO   = '" + dadCodigo + "' "
                            + "AND TP_DOC = '"+Tipo+"' AND COD_MUN = '"+ CodMun +"' "
            );

            Conectar.stam.executeUpdate("UPDATE MDFE_DOCUMENTO  SET "
                    + "CHAVE            = '" + chave     + "', "
                    + "QTD_UN_TRANP     = " + QtdTransp + ", "
                    + "COD_BARRAS       = '"+ CodBarra +"', "
                    + "INDREENTREGA     = '"+ IndReentrega +"' "
                    + "WHERE CODDOC     = '" + CodDoc    + "' AND DAD_CODIGO   = '" + dadCodigo + "' "
                            + "AND TP_DOC = '"+Tipo+"' AND COD_MUN = '"+ CodMun +"' "
            );

            Conectar.DesconectarBD();

            dispose();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao alterar...\n" + e.getLocalizedMessage());
        }
    }

    

    
    public void DeletarLacres(String dadCodigo, String dadTransp, String codMun, String tpDoc) {
        try {
           
            
            Conectar.ConectarBD();

                    System.out.println("DELETE FROM MDFE_LACRES_TRANSPORTE "
                            + "WHERE DAD_CODIGO = '" + dadCodigo + "' AND COD_TRANSP = '" + dadTransp + "' AND COD_MUN = '"+ codMun +"' "
                                    + "AND TP_DOC = '"+ tpDoc +"' "
                    );

                    Conectar.stam.executeUpdate("DELETE FROM MDFE_LACRES_TRANSPORTE "
                            + "WHERE DAD_CODIGO = '" + dadCodigo + "' AND COD_TRANSP = '" + dadTransp + "' AND COD_MUN = '"+ codMun +"' "
                                    + "AND TP_DOC = '"+ tpDoc +"' "
                    );

                    Conectar.DesconectarBD();

           

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao deletar...\n" + e.getLocalizedMessage());
        }
    }
    
    public void DeletarUndCarga(String DadCodigo, String CodTransp, String CodDoc, String TpDoc, String CodMun){
        try{
            Conectar.ConectarBD();
            
            System.out.println("DELETE FROM MDFE_UN_CARGA WHERE "
                            + "DAD_CODIGO  = '"+ DadCodigo +"' AND "
                            + "COD_TRANSP  = '"+ CodTransp +"' AND "
                            + "CODDOC      = '"+ CodDoc +"' AND "
                            + "TP_DOC      = '"+ TpDoc +"' AND "
                            + "COD_MUN     = '"+ CodMun +"' "
            );
            
            Conectar.stam.executeUpdate("DELETE FROM MDFE_UN_CARGA WHERE "
                            + "DAD_CODIGO  = '"+ DadCodigo +"' AND "
                            + "COD_TRANSP  = '"+ CodTransp +"' AND "
                            + "CODDOC      = '"+ CodDoc +"' AND "
                            + "TP_DOC      = '"+ TpDoc +"' AND "
                            + "COD_MUN     = '"+ CodMun +"' "
                    
            );
            
            Conectar.DesconectarBD();
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao deletar...\n" + e.getLocalizedMessage());
        }
    }
    
    public void Deletar(String codTransp, String dadCodigo, String CodMun, String tpDoc) {
        try {
            Conectar.ConectarBD();

            System.out.println("DELETE FROM MDFE_UN_TRANSPORTE WHERE "
                    + "COD_TRANSP = '" + codTransp + "' AND DAD_CODIGO = '" + dadCodigo + "' AND COD_MUN = '"+ CodMun +"' AND "
                            + "TP_DOC = '"+ tpDoc +"' "
            );

            Conectar.stam.executeUpdate("DELETE FROM MDFE_UN_TRANSPORTE WHERE "
                    + "COD_TRANSP = '" + codTransp + "' AND DAD_CODIGO = '" + dadCodigo + "' AND COD_MUN = '"+ CodMun +"' AND "
                            + "TP_DOC = '"+ tpDoc +"' "
            );

            Conectar.DesconectarBD();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao deletar...\n" + e.getLocalizedMessage());
        }
    } 

    public String CampoCalcTpTransporte(String codigo) {
        String retorna = "";
        if (codigo != null) {
            if (codigo.equals("1")) {
                retorna = "Rodoviário Tração";
            } else if (codigo.equals("2")) {
                retorna = "Rodoviário Reboque";
            } else if (codigo.equals("3")) {
                retorna = "Navio";
            } else if (codigo.equals("4")) {
                retorna = "Balsa";
            } else if (codigo.equals("5")) {
                retorna = "Aeronave";
            } else if (codigo.equals("6")) {
                retorna = "Vagão";
            } else if (codigo.equals("7")) {
                retorna = "Outros";
            }
        }
        return retorna;
    }
    
    
}
