/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentacao;

import ClassesFirebird.InfoCertificadoBean;
import ClassesFirebird.Tabusu;
import ClassesMDFe.Assina;
import ClassesMDFe.InfoCertificado;
import ClassesMDFe.MDFeRecepcaoEvento;
import ClassesMDFe.Valida;
import ConexaoDB.Conectar;
import Utilitarios.Utilitarios;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableEntryException;
import java.security.cert.CertificateException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
//import ClassesMDFe.MDFeRecepcaoEvento;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.xml.parsers.ParserConfigurationException;
import static movimentacao.TelaEncerramento.ValorXml;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;

/**
 *
 * @author Administrador
 */
public class TelaCancelamento extends javax.swing.JDialog {

  Valida validaxml = new Valida();
  Utilitarios util = new Utilitarios();
  Tabusu tabusu = new Tabusu();
  InfoCertificado infocert = new InfoCertificado();
  InfoCertificadoBean InfoCertBean = new InfoCertificadoBean();
  TelaMovimentacao telamovimentacao = new TelaMovimentacao();
  Assina assinatura = new Assina();
  String sCamCertificado, sSenhaCertificado, sCNPJ, sProtocolo, XMLCancelamento, xMotivo, cStat;
  DefaultTableCellRenderer direita   = new DefaultTableCellRenderer();
  DefaultTableCellRenderer centro    = new DefaultTableCellRenderer();
  DefaultTableCellRenderer esquerda  = new DefaultTableCellRenderer(); 
  
  public TelaCancelamento() {
        initComponents();
        DefinirFormulario();
        
    }

  /**
   * Creates new form TelaCancelamento
   */
  public TelaCancelamento(String CamCertificado, String SenhaCertificado, String CNPJ) {
    initComponents();
    DefinirFormulario();
    sCamCertificado = CamCertificado;
    sSenhaCertificado = SenhaCertificado;
    sCNPJ = CNPJ;

   
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPnlMensagem = new javax.swing.JPanel();
    jScrollPane5 = new javax.swing.JScrollPane();
    jTblRetServidor = new javax.swing.JTable();
    jPnlMensagem1 = new javax.swing.JPanel();
    jButton2 = new javax.swing.JButton();
    jButton1 = new javax.swing.JButton();
    jFldDdDataHoraCancelamento = new javax.swing.JTextField();
    jLabel17 = new javax.swing.JLabel();
    jLabel14 = new javax.swing.JLabel();
    jFldNrSequencia = new javax.swing.JTextField();
    jLabel16 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTxtAreaJustificativa = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jPnlMensagem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Resposta do Servidor", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12), new java.awt.Color(255, 0, 51))); // NOI18N
    jPnlMensagem.setForeground(new java.awt.Color(255, 51, 51));

    jTblRetServidor.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
      },
      new String [] {
        "Codigo", "Motivo"
      }
    ){
      @Override
      public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
      };

    });
    jTblRetServidor.getTableHeader().setResizingAllowed(false);
    jTblRetServidor.getTableHeader().setReorderingAllowed(false);
    jTblRetServidor.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTblRetServidorMouseClicked(evt);
      }
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        jTblRetServidorMouseReleased(evt);
      }
    });
    jScrollPane5.setViewportView(jTblRetServidor);

    javax.swing.GroupLayout jPnlMensagemLayout = new javax.swing.GroupLayout(jPnlMensagem);
    jPnlMensagem.setLayout(jPnlMensagemLayout);
    jPnlMensagemLayout.setHorizontalGroup(
      jPnlMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
    );
    jPnlMensagemLayout.setVerticalGroup(
      jPnlMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
    );

    jPnlMensagem1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cancelar MDFe", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
    jPnlMensagem1.setForeground(new java.awt.Color(255, 51, 51));

    jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jButton2.setText("Sair");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jButton1.setText("Cancelar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    jFldDdDataHoraCancelamento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jFldDdDataHoraCancelamento.addAncestorListener(new javax.swing.event.AncestorListener() {
      public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
      }
      public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
        jFldDdDataHoraCancelamentoAncestorAdded(evt);
      }
      public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
      }
    });
    jFldDdDataHoraCancelamento.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        jFldDdDataHoraCancelamentoFocusLost(evt);
      }
    });
    jFldDdDataHoraCancelamento.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFldDdDataHoraCancelamentoActionPerformed(evt);
      }
    });
    jFldDdDataHoraCancelamento.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jFldDdDataHoraCancelamentoKeyPressed(evt);
      }
    });

    jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel17.setText("Data e hora do Evento");

    jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel14.setText("Número de Sequência");

    jFldNrSequencia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jFldNrSequencia.setText("01");
    jFldNrSequencia.addAncestorListener(new javax.swing.event.AncestorListener() {
      public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
      }
      public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
        jFldNrSequenciaAncestorAdded(evt);
      }
      public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
      }
    });
    jFldNrSequencia.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        jFldNrSequenciaFocusLost(evt);
      }
    });
    jFldNrSequencia.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jFldNrSequenciaActionPerformed(evt);
      }
    });
    jFldNrSequencia.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jFldNrSequenciaKeyPressed(evt);
      }
    });

    jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel16.setText("Justificativa do Cancelamento");

    jTxtAreaJustificativa.setColumns(20);
    jTxtAreaJustificativa.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
    jTxtAreaJustificativa.setRows(5);
    jScrollPane1.setViewportView(jTxtAreaJustificativa);

    javax.swing.GroupLayout jPnlMensagem1Layout = new javax.swing.GroupLayout(jPnlMensagem1);
    jPnlMensagem1.setLayout(jPnlMensagem1Layout);
    jPnlMensagem1Layout.setHorizontalGroup(
      jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPnlMensagem1Layout.createSequentialGroup()
        .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPnlMensagem1Layout.createSequentialGroup()
            .addGap(141, 141, 141)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(43, 43, 43)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(jPnlMensagem1Layout.createSequentialGroup()
            .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jFldDdDataHoraCancelamento, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(60, 60, 60)
            .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jFldNrSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addComponent(jScrollPane1)
    );
    jPnlMensagem1Layout.setVerticalGroup(
      jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlMensagem1Layout.createSequentialGroup()
        .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel17)
          .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGap(0, 0, 0)
        .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jFldDdDataHoraCancelamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jFldNrSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(0, 0, 0)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPnlMensagem1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jButton2)
          .addComponent(jButton1))
        .addContainerGap(28, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPnlMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jPnlMensagem1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jPnlMensagem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPnlMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGap(17, 17, 17))
    );

    getAccessibleContext().setAccessibleParent(this);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jFldDdDataHoraCancelamentoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldDdDataHoraCancelamentoAncestorAdded
    // TODO add your handling code here:
  }//GEN-LAST:event_jFldDdDataHoraCancelamentoAncestorAdded

  private void jFldDdDataHoraCancelamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldDdDataHoraCancelamentoFocusLost
    // TODO add your handling code here:
  }//GEN-LAST:event_jFldDdDataHoraCancelamentoFocusLost

  private void jFldDdDataHoraCancelamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldDdDataHoraCancelamentoActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jFldDdDataHoraCancelamentoActionPerformed

  private void jFldDdDataHoraCancelamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldDdDataHoraCancelamentoKeyPressed

  }//GEN-LAST:event_jFldDdDataHoraCancelamentoKeyPressed

  private void jFldNrSequenciaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jFldNrSequenciaAncestorAdded
    // TODO add your handling code here:
  }//GEN-LAST:event_jFldNrSequenciaAncestorAdded

  private void jFldNrSequenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFldNrSequenciaFocusLost
    // TODO add your handling code here:

  }//GEN-LAST:event_jFldNrSequenciaFocusLost

  private void jFldNrSequenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFldNrSequenciaKeyPressed

  }//GEN-LAST:event_jFldNrSequenciaKeyPressed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:

    try {
      jPnlMensagem.setVisible(true);
    //  jProgressBar.setIndeterminate(true); 
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
      infocert.CarregarCertificado(sCamCertificado, sSenhaCertificado);
      //id evento
      String Id = CriaID("110111", util.sCHAVE_MDFE, jFldNrSequencia.getText());
      //“ID” + tpEvento+ chave do MDF-e+ nSeqEvento
      //ID 110111 + 15161221586212000172581230000000011000000019  +1
      if (VerificaField() == true) {
        util.XMLCancelamento = CriaXMLCancelamento(Id, "15", "2", util.ExtraiNumeros(sCNPJ), util.sCHAVE_MDFE,
                util.FormataDataBancoMDFE(new Date()), "110111", jFldNrSequencia.getText(),
                "1.00", util.sDAD_NR_PROT, jTxtAreaJustificativa.getText());

        Verifica_Existe_Pasta_MDFe_Cancelada();//
        String XMLAssinado = assinatura.GerarAssinatura(util.XMLCancelamento, "C:\\InterageSE\\MDFe_XML\\MDFe_XML_CANCELADO\\" + util.sCHAVE_MDFE + ".xml", InfoCertBean.getAlias(), InfoCertBean.getCamCertificado(), InfoCertBean.getSenha(), "infEvento", "S", "N");//
        LerXmlCancelamento(MDFeRecepcaoEvento.RecepcaoEventos(XMLAssinado, sCamCertificado, sSenhaCertificado, "2"));

        //  JOptionPane.showMessageDialog(null, "MDFe Cancelada com sucesso!");
        if (cStat.equals("101")) {//Cancelamento de MDF-e homologado
          AlterarDadosSituacao(util.sCHAVE_MDFE, "Cancelado");         
        } else {
          //JOptionPane.showMessageDialog(null, "Erro: \n" + xMotivo);
        }
       // jProgressBar.setIndeterminate(false); 
      }
    } catch (ParseException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ParserConfigurationException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (NoSuchAlgorithmException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (CertificateException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (UnrecoverableEntryException ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    } catch (Exception ex) {
      Logger.getLogger(TelaCancelamento.class.getName()).log(Level.SEVERE, null, ex);
    }
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jFldNrSequenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFldNrSequenciaActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jFldNrSequenciaActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    this.dispose();
  }//GEN-LAST:event_jButton2ActionPerformed

  private void jTblRetServidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblRetServidorMouseClicked
    // TODO add your handling code here:
  }//GEN-LAST:event_jTblRetServidorMouseClicked

  private void jTblRetServidorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblRetServidorMouseReleased
    // TODO add your handling code here:
  }//GEN-LAST:event_jTblRetServidorMouseReleased

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(TelaCancelamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(TelaCancelamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(TelaCancelamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(TelaCancelamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {

      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JTextField jFldDdDataHoraCancelamento;
  private javax.swing.JTextField jFldNrSequencia;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JLabel jLabel17;
  private javax.swing.JPanel jPnlMensagem;
  private javax.swing.JPanel jPnlMensagem1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane5;
  private javax.swing.JTable jTblRetServidor;
  private javax.swing.JTextArea jTxtAreaJustificativa;
  // End of variables declaration//GEN-END:variables
  public void LimpaTabela(JTable tabela) {
        DefaultTableModel dtm = (DefaultTableModel) tabela.getModel();
        dtm.setNumRows(0);
  }
  
   public void LerXmlCancelamento(String dados) throws XmlPullParserException, IOException {
        LimpaTabela(jTblRetServidor);
        DefaultTableModel dtm = (DefaultTableModel) jTblRetServidor.getModel();
           

        XmlPullParserFactory factory = null;
        factory = XmlPullParserFactory.newInstance();

        factory.setNamespaceAware(true);
        XmlPullParser xpp = null;
        xpp = factory.newPullParser();
        xpp.setInput(new StringReader(dados));

        int eventType = 0;
        eventType = xpp.getEventType();

        String TagStartXml = null;
        String TagEndXml = null;
        
        
      while (eventType != XmlPullParser.END_DOCUMENT) {

        if (eventType == XmlPullParser.START_DOCUMENT) {
          System.out.println("Start document");
         
        } else if (eventType == XmlPullParser.START_TAG) {// INICIO DA TEG

          TagStartXml = xpp.getName();
          //xMotivo, cStat
          if (TagStartXml.equals("xMotivo")) {
             System.out.println("<xMotivo>");
          }else if (TagStartXml.equals("cStat")) {
             System.out.println("<cStat>");
          } 

        } else if (eventType == XmlPullParser.END_TAG) { // FIM DA TEG
          TagEndXml = xpp.getName();
          if (TagEndXml.equals("xMotivo")) {
             System.out.println("</xMotivo>");
          } else if (TagEndXml.equals("cStat")) {
             System.out.println("</cStat>");
          } else if (TagEndXml.equals("retEventoMDFe")) {

            //inseri item	
            try {
              // JOptionPane.showMessageDialog(null, cStat+"\n"+xMotivo+"\n", "INCLUIR CONDUTOR", 1);
                dtm.addRow(new Object[]{cStat, xMotivo, });
            } catch (Exception e) {
              //	trace("Erro Item: " + e.getMessage());
              System.out.println("Erro Item: " + e.getMessage());
            }

          }
        } else if (eventType == XmlPullParser.TEXT) {// TEXTO DA TEG
          ValorXml = xpp.getText();

            if (TagStartXml.equals("cStat")) {
              cStat = ValorXml;
              System.out.println("cStat = " + cStat);
              // JOptionPane.showMessageDialog(null, ValorXml.toUpperCase()+"!", "Consulta Status do Serviço", 1);
            }

            if (TagStartXml.equals("xMotivo")) {
              xMotivo = ValorXml;
              System.out.println("xMotivo = " + xMotivo);
              // JOptionPane.showMessageDialog(null, ValorXml.toUpperCase()+"!", "Consulta Status do Serviço", 1);
            }
            

        }
        eventType = xpp.next();

      }


      
    }

  public static void Verifica_Existe_Pasta_MDFe_Cancelada() {

    File diretorio = new File("C:\\InterageSE\\MDFe_XML\\MDFe_XML_CANCELADO"); // BACKUP é uma pasta!
    if (!diretorio.exists()) {
      diretorio.mkdirs(); //mkdir() cria somente um diretório, mkdirs() cria diretórios e subdiretórios.
      System.out.println("Diretório não existente");
    } else {
      System.out.println("Diretório já existente");
    }

  }

  public String CriaXMLCancelamento(String Id, String cOrgao, String tpAmb, String CNPJ, String chMDFe, String dhEvento, String tpEvento, String nSeqEvento, String versaoEvento, String nProt, String xJust) throws SQLException, InstantiationException, IllegalAccessException {

    StringBuilder XmlCancMDFe = new StringBuilder();
    XmlCancMDFe.append("<evCancMDFe>")
            .append("<descEvento>Cancelamento</descEvento>")
            .append("<nProt>" + nProt + "</nProt>")
            .append("<xJust>" + xJust + "</xJust>")
            .append("</evCancMDFe>");

    System.out.println("----------evCancMDFe : ");
    StringBuilder XmlEvento = new StringBuilder();
    XmlEvento.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>")
            .append("<eventoMDFe xmlns=\"http://www.portalfiscal.inf.br/mdfe\" versao=\"1.00\">")
            .append("<infEvento Id=" + Id + ">")
            .append("<cOrgao>" + cOrgao + "</cOrgao>")
            .append("<tpAmb>" + tpAmb + "</tpAmb>")
            .append("<CNPJ>" + CNPJ + "</CNPJ>")
            .append("<chMDFe>" + chMDFe + "</chMDFe>")
            .append("<dhEvento>" + dhEvento + "</dhEvento>")
            .append("<tpEvento>" + tpEvento + "</tpEvento>")
            .append("<nSeqEvento>" + nSeqEvento + "</nSeqEvento>")
            .append("<detEvento versaoEvento=" + "\"" + versaoEvento + "\"" + ">")
            .append(XmlCancMDFe)
            .append("</detEvento>")
            .append("</infEvento>")
            .append("</eventoMDFe>");

    System.out.println(XmlEvento.toString());

    return XmlEvento.toString();

  }

  public void AlterarDadosSituacao(String dadNumero, String dadSituacao) {

    try {

      Conectar.ConectarBD();

      System.out.println("UPDATE MDFE_DADOS SET "
              + "DAD_SITUACAO      = '" + dadSituacao + "' "
              + "WHERE DAD_CHAVE = '" + dadNumero + "' "
      );

      Conectar.stam.executeUpdate("UPDATE MDFE_DADOS SET "
              + "DAD_SITUACAO      = '" + dadSituacao + "' "
              + "WHERE DAD_CHAVE = '" + dadNumero + "' "
      );

      Conectar.DesconectarBD();

      System.out.println("Situação Alterada!");

    } catch (Exception e) {
      e.printStackTrace();
      JOptionPane.showMessageDialog(null, "Erro ao alterar situação...\n" + e.getLocalizedMessage());
    }
  }

  public String CriaID(String tpEvento, String chaveMDFe, String nSeqEvento) {
    String sID = "\"" + "ID" + tpEvento + chaveMDFe + nSeqEvento + "\"";
    //ID110111+35121010142785000190580010000000011491283029+01 
    //ID110111+15161221586212000172581230000000011000000019+1
  //  JOptionPane.showMessageDialog(null, "tam : " + sID.length());
    return sID;
  }

  public boolean VerificaField() {
    if (jFldNrSequencia.getText().length() == 0) {
      JOptionPane.showMessageDialog(null, "Número da Sequência não preenchido!");
      jFldNrSequencia.requestFocus();
      return false;
    } else if (jTxtAreaJustificativa.getText().length() < 15) {
      JOptionPane.showMessageDialog(null, "Justificativa não preenchida corretamente, minimo de 15 caraqueteres !");
      jTxtAreaJustificativa.requestFocus();
      return false;
    } else {
      return true;
    }
  }

  public void BuscaNomeFilial(String codfil) {
    String NomFil = "";
    String Cnpj = "";
    String IE = "";
    try {
      if (codfil.length() > 0) {
        Conectar.ConectarBD();
        Conectar.result = Conectar.stam.executeQuery("select NOMFIL, FANFIL, ENDFIL, NUMERO, COMPFIL, BAIFIL, CEPFIL, UFFIL, CIDFIL, TELFIL, EMAILFIL, CNPJFIL, IEFIL, RNTRC, CODMUNFIL, PATHSERIECERT, SENHACERT from TABFIL where CODFIL = '" + codfil + "' and RGEVENTO <> '3'");
        while (Conectar.result.next()) {
          sCamCertificado = Conectar.result.getString("PATHSERIECERT");
          sSenhaCertificado = Conectar.result.getString("SENHACERT");
          sCNPJ = Conectar.result.getString("CNPJFIL");

        }
        Conectar.DesconectarBD();
      }
    } catch (Exception e) {
      JOptionPane.showMessageDialog(null, "Error...\n" + e.getLocalizedMessage());
    }
  }

  public void DefinirFormulario() {

        setTitle("Tela de Cancelamento");    
        setResizable(false);        
        setModal(true);        
        setSize(700, 450);      
        //Seta o icone do formulario
        setIconImage(new ImageIcon(getClass().getResource("/imagens/mdfeIcone.png")).getImage());
        //deixar no centro
        setLocationRelativeTo(null);
       // jPnlMensagem.setVisible(false);
 
        jTblRetServidor.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jFldDdDataHoraCancelamento.setText(util.FormataDataHora(new Date()));
       
        for (int col = 0; col < jTblRetServidor.getColumnCount(); col++) {
            jTblRetServidor.getColumnModel().getColumn(col).setHeaderRenderer(new TelaCancelamento.MeuRenderizador());
        }
        
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        esquerda.setHorizontalAlignment(SwingConstants.LEFT);

        //Define o tamanho das colunas e posicoes das celulas
        jTblRetServidor.getColumnModel().getColumn(0).setMinWidth(40);
        jTblRetServidor.getColumnModel().getColumn(0).setMaxWidth(100);
        jTblRetServidor.getColumnModel().getColumn(0).setCellRenderer(esquerda);
        
        //Série 
        jTblRetServidor.getColumnModel().getColumn(1).setMinWidth(800);
        jTblRetServidor.getColumnModel().getColumn(1).setMaxWidth(1000);
        jTblRetServidor.getColumnModel().getColumn(1).setCellRenderer(esquerda);
  }
  
  
   /**
     * Classe que implementa o método abstrato TableCellRenderer para poder
     * fazer a troca de cor de fundo e fonte do cabeçalho da tabela.
     */
    private class MeuRenderizador extends JLabel implements TableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {

            table.getTableHeader().setBackground(Color.BLUE);
            table.getTableHeader().setOpaque(false);
            setFont(getFont().deriveFont(Font.BOLD));
            setBorder(new LineBorder(Color.WHITE, 1, true));
            setForeground(Color.WHITE);
            setHorizontalAlignment(SwingConstants.LEFT);
            setText(value.toString());

            return this;
        }
    }

}
